
;; Function main (main, funcdef_no=5, decl_uid=6116, cgraph_uid=5, symbol_order=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 22 n_edges 28 count 22 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 1
;;  header 17, latch 16
;;  depth 1, outer 0
;;  nodes: 17 16 14 15
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 19 }
;; 7 succs { 8 9 }
;; 8 succs { 19 }
;; 9 succs { 10 11 }
;; 10 succs { 19 }
;; 11 succs { 12 13 }
;; 12 succs { 19 }
;; 13 succs { 17 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 14 18 }
;; 18 succs { 19 }
;; 19 succs { 21 20 }
;; 20 succs { }
;; 21 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 125.
verify found no changes in insn with uid = 154.
verify found no changes in insn with uid = 183.
verify found no changes in insn with uid = 212.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 274.
verify found no changes in insn with uid = 277.
verify found no changes in insn with uid = 290.
verify found no changes in insn with uid = 297.
verify found no changes in insn with uid = 307.
verify found no changes in insn with uid = 317.
verify found no changes in insn with uid = 322.
verify found no changes in insn with uid = 341.
verify found no changes in insn with uid = 343.
verify found no changes in insn with uid = 374.
verify found no changes in insn with uid = 406.
verify found no changes in insn with uid = 438.
verify found no changes in insn with uid = 470.
verify found no changes in insn with uid = 502.
verify found no changes in insn with uid = 534.
verify found no changes in insn with uid = 566.
verify found no changes in insn with uid = 581.
verify found no changes in insn with uid = 584.
verify found no changes in insn with uid = 597.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r351: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r351,l0) best DIREG, allocno GENERAL_REGS
    r350: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r350,l0) best DIREG, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a23 (r346,l0) best SSE_REGS, allocno SSE_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r345,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a41 (r343,l0) best SSE_REGS, allocno SSE_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a59 (r340,l0) best SSE_REGS, allocno SSE_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a77 (r337,l0) best SSE_REGS, allocno SSE_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r335,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a95 (r334,l0) best SSE_REGS, allocno SSE_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r332,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r331: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a113 (r331,l0) best SSE_REGS, allocno SSE_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r329,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r328: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a131 (r328,l0) best SSE_REGS, allocno SSE_REGS
    r327: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a133 (r327,l0) best SSE_REGS, allocno SSE_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a137 (r325,l0) best CREG, allocno GENERAL_REGS
    r324: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a134 (r324,l0) best SIREG, allocno GENERAL_REGS
    r323: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r323,l0) best DIREG, allocno GENERAL_REGS
    r322: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r322,l0) best DIREG, allocno GENERAL_REGS
    r321: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a142 (r321,l0) best DIREG, allocno GENERAL_REGS
    r320: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a144 (r320,l0) best DIREG, allocno GENERAL_REGS
    r319: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a145 (r319,l0) best SIREG, allocno GENERAL_REGS
    r318: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a146 (r318,l0) best DREG, allocno GENERAL_REGS
    r317: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a147 (r317,l0) best CREG, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a167 (r312,l0) best SSE_REGS, allocno SSE_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a250 (r295,l0) best DIREG, allocno GENERAL_REGS
    r294: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a251 (r294,l0) best SIREG, allocno GENERAL_REGS
    r293: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a253 (r293,l0) best DIREG, allocno GENERAL_REGS
    r292: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a255 (r292,l0) best DIREG, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a257 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a258 (r289,l0) best DIREG, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a260 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a261 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a264 (r285,l0) best SSE_REGS, allocno SSE_REGS
    r284: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r284,l0) best AREG, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r272,l0) best SIREG, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r270,l0) best DREG, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r268,l0) best CREG, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a11 (r260,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r259: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a21 (r259,l0) best SSE_REGS, allocno SSE_REGS
    r258: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r258,l0) best SIREG, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r256,l0) best DREG, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r254,l0) best CREG, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a29 (r246,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r245: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r245,l0) best SSE_REGS, allocno SSE_REGS
    r244: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r244,l0) best SIREG, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r242,l0) best DREG, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r240,l0) best CREG, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a47 (r232,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a57 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r230,l0) best SIREG, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r228,l0) best DREG, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r226,l0) best CREG, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a65 (r218,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r217: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a75 (r217,l0) best SSE_REGS, allocno SSE_REGS
    r216: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r216,l0) best SIREG, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r214,l0) best DREG, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a80 (r212,l0) best CREG, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a83 (r204,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r203: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a93 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r202,l0) best SIREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r200,l0) best DREG, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r198,l0) best CREG, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a101 (r190,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a111 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a114 (r188,l0) best SIREG, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r186,l0) best DREG, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r184,l0) best CREG, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a119 (r176,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a129 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a132 (r174,l0) best SIREG, allocno GENERAL_REGS
    r173: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r173,l0) best AREG, allocno GENERAL_REGS
    r172: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r172,l0) best SIREG, allocno GENERAL_REGS
    r171: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a141 (r171,l0) best SIREG, allocno GENERAL_REGS
    r170: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a143 (r170,l0) best AREG, allocno GENERAL_REGS
    r169: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a150 (r169,l0) best SIREG, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a151 (r167,l0) best DREG, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a152 (r165,l0) best CREG, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a155 (r157,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a165 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a168 (r155,l0) best SIREG, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a169 (r153,l0) best DREG, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a170 (r151,l0) best CREG, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a173 (r143,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a183 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a185 (r141,l0) best SIREG, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a186 (r139,l0) best DREG, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r137,l0) best CREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a201 (r127,l0) best SIREG, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a202 (r125,l0) best DREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a203 (r123,l0) best CREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a217 (r115,l0) best SIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a218 (r113,l0) best DREG, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a219 (r111,l0) best CREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a233 (r103,l0) best SIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a234 (r101,l0) best DREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a235 (r99,l0) best CREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a236 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a249 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a252 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a254 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a259 (r88,l0) best CREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a262 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:48 NO_REX_SSE_REGS:48 SSE_REGS:48 MMX_REGS:53 INT_SSE_REGS:49 ALL_REGS:708 MEM:8
  a2(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r260,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a12(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a13(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a16(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a17(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a18(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a19(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a20(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a21(r259,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a22(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a23(r346,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a24(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a26(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r246,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a30(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a31(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a32(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a34(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a35(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a36(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a37(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a38(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a39(r245,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a40(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a41(r343,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a42(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a44(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a45(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a46(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r232,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a48(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a49(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a50(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a51(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a52(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a53(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a54(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a55(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a56(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a57(r231,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a58(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a59(r340,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a60(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a61(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a62(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a63(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a64(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r218,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a66(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a67(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a69(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a70(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a71(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a72(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a73(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a74(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a75(r217,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a76(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a77(r337,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a78(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a79(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a81(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a82(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a83(r204,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a84(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a85(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a86(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a87(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a88(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a89(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a90(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a91(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a92(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a93(r203,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a94(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a95(r334,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a96(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a97(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a98(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a99(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a100(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a101(r190,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a102(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a103(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a104(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a105(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a106(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a107(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a108(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a109(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a110(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a111(r189,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a112(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a113(r331,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a114(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a115(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a116(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a118(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a119(r176,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a120(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a121(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a122(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a123(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a124(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a125(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a126(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a127(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a128(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a129(r175,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a130(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a131(r328,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a132(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a133(r327,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a134(r324,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 SSE_FIRST_REG:63 NO_REX_SSE_REGS:63 SSE_REGS:63 MMX_REGS:78 INT_SSE_REGS:66 ALL_REGS:1248 MEM:24
  a135(r323,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 SSE_FIRST_REG:63 NO_REX_SSE_REGS:63 SSE_REGS:63 MMX_REGS:78 INT_SSE_REGS:66 ALL_REGS:1248 MEM:24
  a136(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8
  a137(r325,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:34 INT_SSE_REGS:30 ALL_REGS:516 MEM:9
  a138(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a139(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a140(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a141(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a143(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a144(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a145(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a146(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a147(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a148(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a149(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a150(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a151(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a152(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a153(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a154(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a155(r157,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a156(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a157(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a158(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a159(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a160(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a161(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a162(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a163(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a164(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a165(r156,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a166(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a167(r312,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a168(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a169(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a170(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a171(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a172(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a173(r143,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a174(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a175(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a176(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a177(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a178(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a179(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a180(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a181(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a182(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a183(r142,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a184(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a185(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a186(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a187(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a188(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a189(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a190(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a191(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a192(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a193(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a194(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a195(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a196(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a197(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a198(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a199(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a200(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a201(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a202(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a203(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a204(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a205(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a206(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a207(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a208(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a209(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a210(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a211(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a212(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a213(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a214(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a215(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a216(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a217(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a218(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a219(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a220(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a221(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a222(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a223(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a224(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a225(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a226(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a227(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a228(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a229(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a230(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a231(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a232(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a233(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a234(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a235(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a236(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a237(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a238(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a239(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a240(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a241(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a242(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a243(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a244(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a245(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a246(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a247(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a248(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a249(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a250(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a251(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a252(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a253(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a254(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a255(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a256(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:39 INT_SSE_REGS:31 ALL_REGS:624 MEM:11
  a257(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a258(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a259(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a260(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a261(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a262(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a263(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:16
  a264(r285,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 600(l0): point = 0
   Insn 597(l0): point = 3
   Insn 596(l0): point = 6
   Insn 595(l0): point = 8
   Insn 594(l0): point = 10
   Insn 590(l0): point = 12
   Insn 585(l0): point = 15
   Insn 584(l0): point = 17
   Insn 583(l0): point = 19
   Insn 582(l0): point = 21
   Insn 581(l0): point = 23
   Insn 580(l0): point = 25
   Insn 579(l0): point = 27
   Insn 325(l0): point = 30
   Insn 324(l0): point = 32
   Insn 323(l0): point = 34
   Insn 322(l0): point = 36
   Insn 321(l0): point = 38
   Insn 320(l0): point = 40
   Insn 319(l0): point = 42
   Insn 318(l0): point = 44
   Insn 317(l0): point = 46
   Insn 316(l0): point = 48
   Insn 315(l0): point = 50
   Insn 314(l0): point = 52
   Insn 313(l0): point = 54
   Insn 577(l0): point = 57
   Insn 576(l0): point = 59
   Insn 572(l0): point = 62
   Insn 571(l0): point = 64
   Insn 570(l0): point = 66
   Insn 567(l0): point = 69
   Insn 566(l0): point = 71
   Insn 565(l0): point = 73
   Insn 564(l0): point = 75
   Insn 563(l0): point = 77
   Insn 562(l0): point = 79
   Insn 561(l0): point = 81
   Insn 560(l0): point = 83
   Insn 559(l0): point = 85
   Insn 558(l0): point = 87
   Insn 557(l0): point = 89
   Insn 556(l0): point = 91
   Insn 555(l0): point = 93
   Insn 554(l0): point = 95
   Insn 553(l0): point = 97
   Insn 552(l0): point = 99
   Insn 551(l0): point = 101
   Insn 550(l0): point = 103
   Insn 549(l0): point = 105
   Insn 548(l0): point = 107
   Insn 547(l0): point = 109
   Insn 546(l0): point = 111
   Insn 545(l0): point = 113
   Insn 544(l0): point = 115
   Insn 543(l0): point = 117
   Insn 542(l0): point = 119
   Insn 541(l0): point = 121
   Insn 540(l0): point = 123
   Insn 539(l0): point = 125
   Insn 538(l0): point = 127
   Insn 537(l0): point = 129
   Insn 536(l0): point = 131
   Insn 535(l0): point = 133
   Insn 534(l0): point = 135
   Insn 533(l0): point = 137
   Insn 532(l0): point = 139
   Insn 531(l0): point = 141
   Insn 530(l0): point = 143
   Insn 529(l0): point = 145
   Insn 528(l0): point = 147
   Insn 527(l0): point = 149
   Insn 526(l0): point = 151
   Insn 525(l0): point = 153
   Insn 524(l0): point = 155
   Insn 523(l0): point = 157
   Insn 522(l0): point = 159
   Insn 521(l0): point = 161
   Insn 520(l0): point = 163
   Insn 519(l0): point = 165
   Insn 518(l0): point = 167
   Insn 517(l0): point = 169
   Insn 516(l0): point = 171
   Insn 515(l0): point = 173
   Insn 514(l0): point = 175
   Insn 513(l0): point = 177
   Insn 512(l0): point = 179
   Insn 511(l0): point = 181
   Insn 510(l0): point = 183
   Insn 509(l0): point = 185
   Insn 508(l0): point = 187
   Insn 507(l0): point = 189
   Insn 506(l0): point = 191
   Insn 505(l0): point = 193
   Insn 504(l0): point = 195
   Insn 503(l0): point = 197
   Insn 502(l0): point = 199
   Insn 501(l0): point = 201
   Insn 500(l0): point = 203
   Insn 499(l0): point = 205
   Insn 498(l0): point = 207
   Insn 497(l0): point = 209
   Insn 496(l0): point = 211
   Insn 495(l0): point = 213
   Insn 494(l0): point = 215
   Insn 493(l0): point = 217
   Insn 492(l0): point = 219
   Insn 491(l0): point = 221
   Insn 490(l0): point = 223
   Insn 489(l0): point = 225
   Insn 488(l0): point = 227
   Insn 487(l0): point = 229
   Insn 486(l0): point = 231
   Insn 485(l0): point = 233
   Insn 484(l0): point = 235
   Insn 483(l0): point = 237
   Insn 482(l0): point = 239
   Insn 481(l0): point = 241
   Insn 480(l0): point = 243
   Insn 479(l0): point = 245
   Insn 478(l0): point = 247
   Insn 477(l0): point = 249
   Insn 476(l0): point = 251
   Insn 475(l0): point = 253
   Insn 474(l0): point = 255
   Insn 473(l0): point = 257
   Insn 472(l0): point = 259
   Insn 471(l0): point = 261
   Insn 470(l0): point = 263
   Insn 469(l0): point = 265
   Insn 468(l0): point = 267
   Insn 467(l0): point = 269
   Insn 466(l0): point = 271
   Insn 465(l0): point = 273
   Insn 464(l0): point = 275
   Insn 463(l0): point = 277
   Insn 462(l0): point = 279
   Insn 461(l0): point = 281
   Insn 460(l0): point = 283
   Insn 459(l0): point = 285
   Insn 458(l0): point = 287
   Insn 457(l0): point = 289
   Insn 456(l0): point = 291
   Insn 455(l0): point = 293
   Insn 454(l0): point = 295
   Insn 453(l0): point = 297
   Insn 452(l0): point = 299
   Insn 451(l0): point = 301
   Insn 450(l0): point = 303
   Insn 449(l0): point = 305
   Insn 448(l0): point = 307
   Insn 447(l0): point = 309
   Insn 446(l0): point = 311
   Insn 445(l0): point = 313
   Insn 444(l0): point = 315
   Insn 443(l0): point = 317
   Insn 442(l0): point = 319
   Insn 441(l0): point = 321
   Insn 440(l0): point = 323
   Insn 439(l0): point = 325
   Insn 438(l0): point = 327
   Insn 437(l0): point = 329
   Insn 436(l0): point = 331
   Insn 435(l0): point = 333
   Insn 434(l0): point = 335
   Insn 433(l0): point = 337
   Insn 432(l0): point = 339
   Insn 431(l0): point = 341
   Insn 430(l0): point = 343
   Insn 429(l0): point = 345
   Insn 428(l0): point = 347
   Insn 427(l0): point = 349
   Insn 426(l0): point = 351
   Insn 425(l0): point = 353
   Insn 424(l0): point = 355
   Insn 423(l0): point = 357
   Insn 422(l0): point = 359
   Insn 421(l0): point = 361
   Insn 420(l0): point = 363
   Insn 419(l0): point = 365
   Insn 418(l0): point = 367
   Insn 417(l0): point = 369
   Insn 416(l0): point = 371
   Insn 415(l0): point = 373
   Insn 414(l0): point = 375
   Insn 413(l0): point = 377
   Insn 412(l0): point = 379
   Insn 411(l0): point = 381
   Insn 410(l0): point = 383
   Insn 409(l0): point = 385
   Insn 408(l0): point = 387
   Insn 407(l0): point = 389
   Insn 406(l0): point = 391
   Insn 405(l0): point = 393
   Insn 404(l0): point = 395
   Insn 403(l0): point = 397
   Insn 402(l0): point = 399
   Insn 401(l0): point = 401
   Insn 400(l0): point = 403
   Insn 399(l0): point = 405
   Insn 398(l0): point = 407
   Insn 397(l0): point = 409
   Insn 396(l0): point = 411
   Insn 395(l0): point = 413
   Insn 394(l0): point = 415
   Insn 393(l0): point = 417
   Insn 392(l0): point = 419
   Insn 391(l0): point = 421
   Insn 390(l0): point = 423
   Insn 389(l0): point = 425
   Insn 388(l0): point = 427
   Insn 387(l0): point = 429
   Insn 386(l0): point = 431
   Insn 385(l0): point = 433
   Insn 384(l0): point = 435
   Insn 383(l0): point = 437
   Insn 382(l0): point = 439
   Insn 381(l0): point = 441
   Insn 380(l0): point = 443
   Insn 379(l0): point = 445
   Insn 378(l0): point = 447
   Insn 377(l0): point = 449
   Insn 376(l0): point = 451
   Insn 375(l0): point = 453
   Insn 374(l0): point = 455
   Insn 373(l0): point = 457
   Insn 372(l0): point = 459
   Insn 371(l0): point = 461
   Insn 370(l0): point = 463
   Insn 369(l0): point = 465
   Insn 368(l0): point = 467
   Insn 367(l0): point = 469
   Insn 366(l0): point = 471
   Insn 365(l0): point = 473
   Insn 364(l0): point = 475
   Insn 363(l0): point = 477
   Insn 362(l0): point = 479
   Insn 361(l0): point = 481
   Insn 360(l0): point = 483
   Insn 359(l0): point = 485
   Insn 358(l0): point = 487
   Insn 357(l0): point = 489
   Insn 356(l0): point = 491
   Insn 355(l0): point = 493
   Insn 354(l0): point = 495
   Insn 353(l0): point = 497
   Insn 352(l0): point = 499
   Insn 351(l0): point = 501
   Insn 350(l0): point = 503
   Insn 349(l0): point = 505
   Insn 348(l0): point = 507
   Insn 347(l0): point = 509
   Insn 346(l0): point = 511
   Insn 345(l0): point = 513
   Insn 344(l0): point = 515
   Insn 343(l0): point = 517
   Insn 342(l0): point = 519
   Insn 341(l0): point = 521
   Insn 340(l0): point = 523
   Insn 339(l0): point = 525
   Insn 338(l0): point = 527
   Insn 337(l0): point = 529
   Insn 336(l0): point = 531
   Insn 335(l0): point = 533
   Insn 334(l0): point = 535
   Insn 333(l0): point = 537
   Insn 332(l0): point = 539
   Insn 331(l0): point = 541
   Insn 330(l0): point = 543
   Insn 329(l0): point = 545
   Insn 328(l0): point = 547
   Insn 327(l0): point = 549
   Insn 614(l0): point = 552
   Insn 309(l0): point = 554
   Insn 308(l0): point = 556
   Insn 307(l0): point = 558
   Insn 306(l0): point = 560
   Insn 305(l0): point = 562
   Insn 304(l0): point = 564
   Insn 303(l0): point = 566
   Insn 612(l0): point = 569
   Insn 298(l0): point = 571
   Insn 297(l0): point = 573
   Insn 296(l0): point = 575
   Insn 295(l0): point = 577
   Insn 293(l0): point = 580
   Insn 292(l0): point = 582
   Insn 291(l0): point = 584
   Insn 290(l0): point = 586
   Insn 289(l0): point = 588
   Insn 288(l0): point = 590
   Insn 287(l0): point = 592
   Insn 286(l0): point = 594
   Insn 285(l0): point = 596
   Insn 284(l0): point = 598
   Insn 283(l0): point = 600
   Insn 282(l0): point = 602
   Insn 281(l0): point = 604
   Insn 280(l0): point = 606
   Insn 279(l0): point = 608
   Insn 278(l0): point = 610
   Insn 277(l0): point = 612
   Insn 276(l0): point = 614
   Insn 275(l0): point = 616
   Insn 274(l0): point = 618
   Insn 273(l0): point = 620
   Insn 272(l0): point = 622
   Insn 271(l0): point = 624
   Insn 270(l0): point = 626
   Insn 269(l0): point = 628
   Insn 268(l0): point = 630
   Insn 267(l0): point = 632
   Insn 266(l0): point = 634
   Insn 265(l0): point = 636
   Insn 264(l0): point = 638
   Insn 263(l0): point = 640
   Insn 262(l0): point = 642
   Insn 261(l0): point = 644
   Insn 260(l0): point = 646
   Insn 259(l0): point = 648
   Insn 258(l0): point = 650
   Insn 257(l0): point = 652
   Insn 256(l0): point = 654
   Insn 255(l0): point = 656
   Insn 254(l0): point = 658
   Insn 253(l0): point = 660
   Insn 252(l0): point = 662
   Insn 251(l0): point = 664
   Insn 250(l0): point = 666
   Insn 249(l0): point = 668
   Insn 248(l0): point = 670
   Insn 247(l0): point = 672
   Insn 246(l0): point = 674
   Insn 245(l0): point = 676
   Insn 244(l0): point = 678
   Insn 243(l0): point = 680
   Insn 242(l0): point = 682
   Insn 241(l0): point = 684
   Insn 240(l0): point = 686
   Insn 239(l0): point = 688
   Insn 238(l0): point = 690
   Insn 237(l0): point = 692
   Insn 236(l0): point = 694
   Insn 235(l0): point = 696
   Insn 234(l0): point = 698
   Insn 233(l0): point = 700
   Insn 232(l0): point = 702
   Insn 231(l0): point = 704
   Insn 230(l0): point = 706
   Insn 229(l0): point = 708
   Insn 228(l0): point = 710
   Insn 227(l0): point = 712
   Insn 226(l0): point = 714
   Insn 225(l0): point = 716
   Insn 224(l0): point = 718
   Insn 223(l0): point = 720
   Insn 222(l0): point = 722
   Insn 221(l0): point = 724
   Insn 220(l0): point = 726
   Insn 219(l0): point = 728
   Insn 218(l0): point = 730
   Insn 217(l0): point = 732
   Insn 216(l0): point = 734
   Insn 215(l0): point = 736
   Insn 214(l0): point = 738
   Insn 213(l0): point = 740
   Insn 212(l0): point = 742
   Insn 211(l0): point = 744
   Insn 210(l0): point = 746
   Insn 209(l0): point = 748
   Insn 208(l0): point = 750
   Insn 207(l0): point = 752
   Insn 206(l0): point = 754
   Insn 205(l0): point = 756
   Insn 204(l0): point = 758
   Insn 203(l0): point = 760
   Insn 202(l0): point = 762
   Insn 201(l0): point = 764
   Insn 200(l0): point = 766
   Insn 199(l0): point = 768
   Insn 198(l0): point = 770
   Insn 197(l0): point = 772
   Insn 196(l0): point = 774
   Insn 195(l0): point = 776
   Insn 194(l0): point = 778
   Insn 193(l0): point = 780
   Insn 192(l0): point = 782
   Insn 191(l0): point = 784
   Insn 190(l0): point = 786
   Insn 189(l0): point = 788
   Insn 188(l0): point = 790
   Insn 187(l0): point = 792
   Insn 186(l0): point = 794
   Insn 185(l0): point = 796
   Insn 184(l0): point = 798
   Insn 183(l0): point = 800
   Insn 182(l0): point = 802
   Insn 181(l0): point = 804
   Insn 180(l0): point = 806
   Insn 179(l0): point = 808
   Insn 178(l0): point = 810
   Insn 177(l0): point = 812
   Insn 176(l0): point = 814
   Insn 175(l0): point = 816
   Insn 174(l0): point = 818
   Insn 173(l0): point = 820
   Insn 172(l0): point = 822
   Insn 171(l0): point = 824
   Insn 170(l0): point = 826
   Insn 169(l0): point = 828
   Insn 168(l0): point = 830
   Insn 167(l0): point = 832
   Insn 166(l0): point = 834
   Insn 165(l0): point = 836
   Insn 164(l0): point = 838
   Insn 163(l0): point = 840
   Insn 162(l0): point = 842
   Insn 161(l0): point = 844
   Insn 160(l0): point = 846
   Insn 159(l0): point = 848
   Insn 158(l0): point = 850
   Insn 157(l0): point = 852
   Insn 156(l0): point = 854
   Insn 155(l0): point = 856
   Insn 154(l0): point = 858
   Insn 153(l0): point = 860
   Insn 152(l0): point = 862
   Insn 151(l0): point = 864
   Insn 150(l0): point = 866
   Insn 149(l0): point = 868
   Insn 148(l0): point = 870
   Insn 147(l0): point = 872
   Insn 146(l0): point = 874
   Insn 145(l0): point = 876
   Insn 144(l0): point = 878
   Insn 143(l0): point = 880
   Insn 142(l0): point = 882
   Insn 141(l0): point = 884
   Insn 140(l0): point = 886
   Insn 139(l0): point = 888
   Insn 138(l0): point = 890
   Insn 137(l0): point = 892
   Insn 136(l0): point = 894
   Insn 135(l0): point = 896
   Insn 134(l0): point = 898
   Insn 133(l0): point = 900
   Insn 132(l0): point = 902
   Insn 131(l0): point = 904
   Insn 130(l0): point = 906
   Insn 129(l0): point = 908
   Insn 128(l0): point = 910
   Insn 127(l0): point = 912
   Insn 126(l0): point = 914
   Insn 125(l0): point = 916
   Insn 124(l0): point = 918
   Insn 123(l0): point = 920
   Insn 122(l0): point = 922
   Insn 121(l0): point = 924
   Insn 120(l0): point = 926
   Insn 119(l0): point = 928
   Insn 118(l0): point = 930
   Insn 117(l0): point = 932
   Insn 116(l0): point = 934
   Insn 115(l0): point = 936
   Insn 114(l0): point = 938
   Insn 113(l0): point = 940
   Insn 112(l0): point = 942
   Insn 111(l0): point = 944
   Insn 110(l0): point = 946
   Insn 109(l0): point = 948
   Insn 108(l0): point = 950
   Insn 107(l0): point = 952
   Insn 106(l0): point = 954
   Insn 105(l0): point = 956
   Insn 104(l0): point = 958
   Insn 103(l0): point = 960
   Insn 102(l0): point = 962
   Insn 101(l0): point = 964
   Insn 100(l0): point = 966
   Insn 99(l0): point = 968
   Insn 98(l0): point = 970
   Insn 97(l0): point = 972
   Insn 96(l0): point = 974
   Insn 610(l0): point = 977
   Insn 91(l0): point = 979
   Insn 90(l0): point = 981
   Insn 89(l0): point = 983
   Insn 87(l0): point = 986
   Insn 86(l0): point = 988
   Insn 85(l0): point = 990
   Insn 84(l0): point = 992
   Insn 83(l0): point = 994
   Insn 82(l0): point = 996
   Insn 81(l0): point = 998
   Insn 80(l0): point = 1000
   Insn 608(l0): point = 1003
   Insn 75(l0): point = 1005
   Insn 74(l0): point = 1007
   Insn 73(l0): point = 1009
   Insn 71(l0): point = 1012
   Insn 70(l0): point = 1014
   Insn 69(l0): point = 1016
   Insn 68(l0): point = 1018
   Insn 67(l0): point = 1020
   Insn 66(l0): point = 1022
   Insn 65(l0): point = 1024
   Insn 64(l0): point = 1026
   Insn 606(l0): point = 1029
   Insn 59(l0): point = 1031
   Insn 58(l0): point = 1033
   Insn 57(l0): point = 1035
   Insn 55(l0): point = 1038
   Insn 54(l0): point = 1040
   Insn 53(l0): point = 1042
   Insn 52(l0): point = 1044
   Insn 51(l0): point = 1046
   Insn 50(l0): point = 1048
   Insn 49(l0): point = 1050
   Insn 48(l0): point = 1052
   Insn 47(l0): point = 1054
   Insn 46(l0): point = 1056
   Insn 45(l0): point = 1058
   Insn 44(l0): point = 1060
   Insn 43(l0): point = 1062
   Insn 42(l0): point = 1064
   Insn 41(l0): point = 1066
   Insn 40(l0): point = 1068
   Insn 39(l0): point = 1070
   Insn 38(l0): point = 1072
   Insn 37(l0): point = 1074
   Insn 36(l0): point = 1076
   Insn 35(l0): point = 1078
   Insn 32(l0): point = 1081
   Insn 604(l0): point = 1084
   Insn 27(l0): point = 1086
   Insn 25(l0): point = 1089
   Insn 24(l0): point = 1091
   Insn 23(l0): point = 1093
   Insn 22(l0): point = 1095
   Insn 21(l0): point = 1097
   Insn 20(l0): point = 1099
   Insn 19(l0): point = 1101
   Insn 18(l0): point = 1103
   Insn 17(l0): point = 1105
   Insn 16(l0): point = 1107
   Insn 15(l0): point = 1109
   Insn 14(l0): point = 1111
   Insn 13(l0): point = 1113
   Insn 12(l0): point = 1115
   Insn 11(l0): point = 1117
   Insn 10(l0): point = 1119
   Insn 9(l0): point = 1121
   Insn 8(l0): point = 1123
   Insn 7(l0): point = 1125
   Insn 6(l0): point = 1127
   Insn 3(l0): point = 1129
 a0(r284): [11..12]
 a1(r274): [1029..1031] [1003..1005] [977..979] [569..571] [13..15]
 a2(r351): [20..21]
 a3(r350): [26..27]
 a4(r349): [63..64]
 a5(r273): [65..66]
 a6(r272): [78..97]
 a7(r270): [80..101]
 a8(r268): [82..105]
 a9(r266): [84..109]
 a10(r264): [86..113]
 a11(r260): [88..121]
 a12(r262): [90..117]
 a13(r348): [92..93]
 a14(r347): [94..95]
 a15(r271): [98..99]
 a16(r269): [102..103]
 a17(r267): [106..107]
 a18(r265): [110..111]
 a19(r263): [114..115]
 a20(r261): [118..119]
 a21(r259): [122..123]
 a22(r283): [126..127]
 a23(r346): [130..131]
 a24(r258): [142..161]
 a25(r256): [144..165]
 a26(r254): [146..169]
 a27(r252): [148..173]
 a28(r250): [150..177]
 a29(r246): [152..185]
 a30(r248): [154..181]
 a31(r345): [156..157]
 a32(r344): [158..159]
 a33(r257): [162..163]
 a34(r255): [166..167]
 a35(r253): [170..171]
 a36(r251): [174..175]
 a37(r249): [178..179]
 a38(r247): [182..183]
 a39(r245): [186..187]
 a40(r282): [190..191]
 a41(r343): [194..195]
 a42(r244): [206..225]
 a43(r242): [208..229]
 a44(r240): [210..233]
 a45(r238): [212..237]
 a46(r236): [214..241]
 a47(r232): [216..249]
 a48(r234): [218..245]
 a49(r342): [220..221]
 a50(r341): [222..223]
 a51(r243): [226..227]
 a52(r241): [230..231]
 a53(r239): [234..235]
 a54(r237): [238..239]
 a55(r235): [242..243]
 a56(r233): [246..247]
 a57(r231): [250..251]
 a58(r281): [254..255]
 a59(r340): [258..259]
 a60(r230): [270..289]
 a61(r228): [272..293]
 a62(r226): [274..297]
 a63(r224): [276..301]
 a64(r222): [278..305]
 a65(r218): [280..313]
 a66(r220): [282..309]
 a67(r339): [284..285]
 a68(r338): [286..287]
 a69(r229): [290..291]
 a70(r227): [294..295]
 a71(r225): [298..299]
 a72(r223): [302..303]
 a73(r221): [306..307]
 a74(r219): [310..311]
 a75(r217): [314..315]
 a76(r280): [318..319]
 a77(r337): [322..323]
 a78(r216): [334..353]
 a79(r214): [336..357]
 a80(r212): [338..361]
 a81(r210): [340..365]
 a82(r208): [342..369]
 a83(r204): [344..377]
 a84(r206): [346..373]
 a85(r336): [348..349]
 a86(r335): [350..351]
 a87(r215): [354..355]
 a88(r213): [358..359]
 a89(r211): [362..363]
 a90(r209): [366..367]
 a91(r207): [370..371]
 a92(r205): [374..375]
 a93(r203): [378..379]
 a94(r279): [382..383]
 a95(r334): [386..387]
 a96(r202): [398..417]
 a97(r200): [400..421]
 a98(r198): [402..425]
 a99(r196): [404..429]
 a100(r194): [406..433]
 a101(r190): [408..441]
 a102(r192): [410..437]
 a103(r333): [412..413]
 a104(r332): [414..415]
 a105(r201): [418..419]
 a106(r199): [422..423]
 a107(r197): [426..427]
 a108(r195): [430..431]
 a109(r193): [434..435]
 a110(r191): [438..439]
 a111(r189): [442..443]
 a112(r278): [446..447]
 a113(r331): [450..451]
 a114(r188): [462..481]
 a115(r186): [464..485]
 a116(r184): [466..489]
 a117(r182): [468..493]
 a118(r180): [470..497]
 a119(r176): [472..505]
 a120(r178): [474..501]
 a121(r330): [476..477]
 a122(r329): [478..479]
 a123(r187): [482..483]
 a124(r185): [486..487]
 a125(r183): [490..491]
 a126(r181): [494..495]
 a127(r179): [498..499]
 a128(r177): [502..503]
 a129(r175): [506..507]
 a130(r277): [510..511]
 a131(r328): [514..515]
 a132(r174): [528..529]
 a133(r327): [532..533]
 a134(r324): [535..547]
 a135(r323): [537..549]
 a136(r326): [540..541]
 a137(r325): [543..545]
 a138(r173): [33..34]
 a139(r322): [39..42]
 a140(r172): [41..44]
 a141(r171): [53..54]
 a142(r321): [561..566]
 a143(r170): [583..584]
 a144(r320): [589..600]
 a145(r319): [591..602]
 a146(r318): [593..604]
 a147(r317): [595..606]
 a148(r316): [597..608]
 a149(r315): [599..610]
 a150(r169): [625..644]
 a151(r167): [627..648]
 a152(r165): [629..652]
 a153(r163): [631..656]
 a154(r161): [633..660]
 a155(r157): [635..668]
 a156(r159): [637..664]
 a157(r314): [639..640]
 a158(r313): [641..642]
 a159(r168): [645..646]
 a160(r166): [649..650]
 a161(r164): [653..654]
 a162(r162): [657..658]
 a163(r160): [661..662]
 a164(r158): [665..666]
 a165(r156): [669..670]
 a166(r276): [673..674]
 a167(r312): [677..678]
 a168(r155): [689..708]
 a169(r153): [691..712]
 a170(r151): [693..716]
 a171(r149): [695..720]
 a172(r147): [697..724]
 a173(r143): [699..732]
 a174(r145): [701..728]
 a175(r311): [703..704]
 a176(r310): [705..706]
 a177(r154): [709..710]
 a178(r152): [713..714]
 a179(r150): [717..718]
 a180(r148): [721..722]
 a181(r146): [725..726]
 a182(r144): [729..730]
 a183(r142): [733..734]
 a184(r275): [737..738]
 a185(r141): [749..770]
 a186(r139): [751..774]
 a187(r137): [753..778]
 a188(r135): [755..782]
 a189(r133): [757..786]
 a190(r131): [759..790]
 a191(r309): [761..762]
 a192(r308): [763..764]
 a193(r129): [767..794]
 a194(r140): [771..772]
 a195(r138): [775..776]
 a196(r136): [779..780]
 a197(r134): [783..784]
 a198(r132): [787..788]
 a199(r130): [791..792]
 a200(r128): [795..796]
 a201(r127): [807..832]
 a202(r125): [809..836]
 a203(r123): [811..840]
 a204(r121): [813..844]
 a205(r119): [815..848]
 a206(r117): [817..852]
 a207(r307): [819..820]
 a208(r306): [821..822]
 a209(r305): [825..826]
 a210(r304): [827..828]
 a211(r126): [833..834]
 a212(r124): [837..838]
 a213(r122): [841..842]
 a214(r120): [845..846]
 a215(r118): [849..850]
 a216(r116): [853..854]
 a217(r115): [865..890]
 a218(r113): [867..894]
 a219(r111): [869..898]
 a220(r109): [871..902]
 a221(r107): [873..906]
 a222(r105): [875..910]
 a223(r303): [877..878]
 a224(r302): [879..880]
 a225(r301): [883..884]
 a226(r300): [885..886]
 a227(r114): [891..892]
 a228(r112): [895..896]
 a229(r110): [899..900]
 a230(r108): [903..904]
 a231(r106): [907..908]
 a232(r104): [911..912]
 a233(r103): [923..948]
 a234(r101): [925..952]
 a235(r99): [927..956]
 a236(r97): [929..960]
 a237(r95): [931..964]
 a238(r93): [933..968]
 a239(r299): [935..936]
 a240(r298): [937..938]
 a241(r297): [941..942]
 a242(r296): [943..944]
 a243(r102): [949..950]
 a244(r100): [953..954]
 a245(r98): [957..958]
 a246(r96): [961..962]
 a247(r94): [965..966]
 a248(r92): [969..970]
 a249(r91): [989..990]
 a250(r295): [995..998]
 a251(r294): [997..1000]
 a252(r90): [1015..1016]
 a253(r293): [1021..1022]
 a254(r89): [1041..1042]
 a255(r292): [1047..1048]
 a256(r291): [1051..1054]
 a257(r290): [1055..1056]
 a258(r289): [1063..1070]
 a259(r88): [1069..1074]
 a260(r288): [1071..1072]
 a261(r287): [1077..1078]
 a262(r87): [1092..1093]
 a263(r286): [1114..1119]
 a264(r285): [1126..1127]
Compressing live ranges: from 1132 to 344 - 30%
Ranges after the compression:
 a0(r284): [0..1]
 a1(r274): [322..323] [316..317] [310..311] [182..183] [2..3]
 a2(r351): [4..5]
 a3(r350): [6..7]
 a4(r349): [14..15]
 a5(r273): [16..17]
 a6(r272): [18..21]
 a7(r270): [18..23]
 a8(r268): [18..25]
 a9(r266): [18..27]
 a10(r264): [18..29]
 a11(r260): [18..33]
 a12(r262): [18..31]
 a13(r348): [18..19]
 a14(r347): [20..21]
 a15(r271): [22..23]
 a16(r269): [24..25]
 a17(r267): [26..27]
 a18(r265): [28..29]
 a19(r263): [30..31]
 a20(r261): [32..33]
 a21(r259): [34..35]
 a22(r283): [36..37]
 a23(r346): [38..39]
 a24(r258): [40..43]
 a25(r256): [40..45]
 a26(r254): [40..47]
 a27(r252): [40..49]
 a28(r250): [40..51]
 a29(r246): [40..55]
 a30(r248): [40..53]
 a31(r345): [40..41]
 a32(r344): [42..43]
 a33(r257): [44..45]
 a34(r255): [46..47]
 a35(r253): [48..49]
 a36(r251): [50..51]
 a37(r249): [52..53]
 a38(r247): [54..55]
 a39(r245): [56..57]
 a40(r282): [58..59]
 a41(r343): [60..61]
 a42(r244): [62..65]
 a43(r242): [62..67]
 a44(r240): [62..69]
 a45(r238): [62..71]
 a46(r236): [62..73]
 a47(r232): [62..77]
 a48(r234): [62..75]
 a49(r342): [62..63]
 a50(r341): [64..65]
 a51(r243): [66..67]
 a52(r241): [68..69]
 a53(r239): [70..71]
 a54(r237): [72..73]
 a55(r235): [74..75]
 a56(r233): [76..77]
 a57(r231): [78..79]
 a58(r281): [80..81]
 a59(r340): [82..83]
 a60(r230): [84..87]
 a61(r228): [84..89]
 a62(r226): [84..91]
 a63(r224): [84..93]
 a64(r222): [84..95]
 a65(r218): [84..99]
 a66(r220): [84..97]
 a67(r339): [84..85]
 a68(r338): [86..87]
 a69(r229): [88..89]
 a70(r227): [90..91]
 a71(r225): [92..93]
 a72(r223): [94..95]
 a73(r221): [96..97]
 a74(r219): [98..99]
 a75(r217): [100..101]
 a76(r280): [102..103]
 a77(r337): [104..105]
 a78(r216): [106..109]
 a79(r214): [106..111]
 a80(r212): [106..113]
 a81(r210): [106..115]
 a82(r208): [106..117]
 a83(r204): [106..121]
 a84(r206): [106..119]
 a85(r336): [106..107]
 a86(r335): [108..109]
 a87(r215): [110..111]
 a88(r213): [112..113]
 a89(r211): [114..115]
 a90(r209): [116..117]
 a91(r207): [118..119]
 a92(r205): [120..121]
 a93(r203): [122..123]
 a94(r279): [124..125]
 a95(r334): [126..127]
 a96(r202): [128..131]
 a97(r200): [128..133]
 a98(r198): [128..135]
 a99(r196): [128..137]
 a100(r194): [128..139]
 a101(r190): [128..143]
 a102(r192): [128..141]
 a103(r333): [128..129]
 a104(r332): [130..131]
 a105(r201): [132..133]
 a106(r199): [134..135]
 a107(r197): [136..137]
 a108(r195): [138..139]
 a109(r193): [140..141]
 a110(r191): [142..143]
 a111(r189): [144..145]
 a112(r278): [146..147]
 a113(r331): [148..149]
 a114(r188): [150..153]
 a115(r186): [150..155]
 a116(r184): [150..157]
 a117(r182): [150..159]
 a118(r180): [150..161]
 a119(r176): [150..165]
 a120(r178): [150..163]
 a121(r330): [150..151]
 a122(r329): [152..153]
 a123(r187): [154..155]
 a124(r185): [156..157]
 a125(r183): [158..159]
 a126(r181): [160..161]
 a127(r179): [162..163]
 a128(r177): [164..165]
 a129(r175): [166..167]
 a130(r277): [168..169]
 a131(r328): [170..171]
 a132(r174): [172..173]
 a133(r327): [174..175]
 a134(r324): [176..179]
 a135(r323): [176..179]
 a136(r326): [176..177]
 a137(r325): [178..179]
 a138(r173): [8..9]
 a139(r322): [10..11]
 a140(r172): [10..11]
 a141(r171): [12..13]
 a142(r321): [180..181]
 a143(r170): [184..185]
 a144(r320): [186..187]
 a145(r319): [186..187]
 a146(r318): [186..187]
 a147(r317): [186..187]
 a148(r316): [186..187]
 a149(r315): [186..187]
 a150(r169): [188..191]
 a151(r167): [188..193]
 a152(r165): [188..195]
 a153(r163): [188..197]
 a154(r161): [188..199]
 a155(r157): [188..203]
 a156(r159): [188..201]
 a157(r314): [188..189]
 a158(r313): [190..191]
 a159(r168): [192..193]
 a160(r166): [194..195]
 a161(r164): [196..197]
 a162(r162): [198..199]
 a163(r160): [200..201]
 a164(r158): [202..203]
 a165(r156): [204..205]
 a166(r276): [206..207]
 a167(r312): [208..209]
 a168(r155): [210..213]
 a169(r153): [210..215]
 a170(r151): [210..217]
 a171(r149): [210..219]
 a172(r147): [210..221]
 a173(r143): [210..225]
 a174(r145): [210..223]
 a175(r311): [210..211]
 a176(r310): [212..213]
 a177(r154): [214..215]
 a178(r152): [216..217]
 a179(r150): [218..219]
 a180(r148): [220..221]
 a181(r146): [222..223]
 a182(r144): [224..225]
 a183(r142): [226..227]
 a184(r275): [228..229]
 a185(r141): [230..235]
 a186(r139): [230..237]
 a187(r137): [230..239]
 a188(r135): [230..241]
 a189(r133): [230..243]
 a190(r131): [230..245]
 a191(r309): [230..231]
 a192(r308): [232..233]
 a193(r129): [234..247]
 a194(r140): [236..237]
 a195(r138): [238..239]
 a196(r136): [240..241]
 a197(r134): [242..243]
 a198(r132): [244..245]
 a199(r130): [246..247]
 a200(r128): [248..249]
 a201(r127): [250..257]
 a202(r125): [250..259]
 a203(r123): [250..261]
 a204(r121): [250..263]
 a205(r119): [250..265]
 a206(r117): [250..267]
 a207(r307): [250..251]
 a208(r306): [252..253]
 a209(r305): [254..255]
 a210(r304): [256..257]
 a211(r126): [258..259]
 a212(r124): [260..261]
 a213(r122): [262..263]
 a214(r120): [264..265]
 a215(r118): [266..267]
 a216(r116): [268..269]
 a217(r115): [270..277]
 a218(r113): [270..279]
 a219(r111): [270..281]
 a220(r109): [270..283]
 a221(r107): [270..285]
 a222(r105): [270..287]
 a223(r303): [270..271]
 a224(r302): [272..273]
 a225(r301): [274..275]
 a226(r300): [276..277]
 a227(r114): [278..279]
 a228(r112): [280..281]
 a229(r110): [282..283]
 a230(r108): [284..285]
 a231(r106): [286..287]
 a232(r104): [288..289]
 a233(r103): [290..297]
 a234(r101): [290..299]
 a235(r99): [290..301]
 a236(r97): [290..303]
 a237(r95): [290..305]
 a238(r93): [290..307]
 a239(r299): [290..291]
 a240(r298): [292..293]
 a241(r297): [294..295]
 a242(r296): [296..297]
 a243(r102): [298..299]
 a244(r100): [300..301]
 a245(r98): [302..303]
 a246(r96): [304..305]
 a247(r94): [306..307]
 a248(r92): [308..309]
 a249(r91): [312..313]
 a250(r295): [314..315]
 a251(r294): [314..315]
 a252(r90): [318..319]
 a253(r293): [320..321]
 a254(r89): [324..325]
 a255(r292): [326..327]
 a256(r291): [328..329]
 a257(r290): [330..331]
 a258(r289): [332..333]
 a259(r88): [332..335]
 a260(r288): [334..335]
 a261(r287): [336..337]
 a262(r87): [338..339]
 a263(r286): [340..341]
 a264(r285): [342..343]
  pref0:a137(r325)<-hr2@2
  pref1:a134(r324)<-hr4@2
  pref2:a135(r323)<-hr5@2
  regions=1, blocks=22, points=344
    allocnos=265 (big 0), copies=0, conflicts=0, ranges=269
Disposition:
  262:r87  l0     0  259:r88  l0     0  254:r89  l0     0  252:r90  l0     0
  249:r91  l0     0  248:r92  l0     0  238:r93  l0     4  247:r94  l0     0
  237:r95  l0    37  246:r96  l0     0  236:r97  l0     5  245:r98  l0     0
  235:r99  l0     2  244:r100 l0     0  234:r101 l0     1  243:r102 l0     0
  233:r103 l0     0  232:r104 l0     0  222:r105 l0     4  231:r106 l0     0
  221:r107 l0    37  230:r108 l0     0  220:r109 l0     5  229:r110 l0     0
  219:r111 l0     2  228:r112 l0     0  218:r113 l0     1  227:r114 l0     0
  217:r115 l0     0  216:r116 l0     0  206:r117 l0     4  215:r118 l0     0
  205:r119 l0    37  214:r120 l0     0  204:r121 l0     5  213:r122 l0     0
  203:r123 l0     2  212:r124 l0     0  202:r125 l0     1  211:r126 l0     0
  201:r127 l0     0  200:r128 l0     0  193:r129 l0     5  199:r130 l0     0
  190:r131 l0     4  198:r132 l0     0  189:r133 l0    38  197:r134 l0     0
  188:r135 l0    37  196:r136 l0     0  187:r137 l0     2  195:r138 l0     0
  186:r139 l0     1  194:r140 l0     0  185:r141 l0     0  183:r142 l0    21
  173:r143 l0    21  182:r144 l0     0  174:r145 l0     4  181:r146 l0     0
  172:r147 l0    37  180:r148 l0     0  171:r149 l0     5  179:r150 l0     0
  170:r151 l0     2  178:r152 l0     0  169:r153 l0     1  177:r154 l0     0
  168:r155 l0     0  165:r156 l0    21  155:r157 l0    21  164:r158 l0     0
  156:r159 l0     4  163:r160 l0     0  154:r161 l0    37  162:r162 l0     0
  153:r163 l0     5  161:r164 l0     0  152:r165 l0     2  160:r166 l0     0
  151:r167 l0     1  159:r168 l0     0  150:r169 l0     0  143:r170 l0     0
  141:r171 l0     0  140:r172 l0     1  138:r173 l0     0  132:r174 l0     0
  129:r175 l0    21  119:r176 l0    21  128:r177 l0     0  120:r178 l0     4
  127:r179 l0     0  118:r180 l0    37  126:r181 l0     0  117:r182 l0     5
  125:r183 l0     0  116:r184 l0     2  124:r185 l0     0  115:r186 l0     1
  123:r187 l0     0  114:r188 l0     0  111:r189 l0    21  101:r190 l0    21
  110:r191 l0     0  102:r192 l0     4  109:r193 l0     0  100:r194 l0    37
  108:r195 l0     0   99:r196 l0     5  107:r197 l0     0   98:r198 l0     2
  106:r199 l0     0   97:r200 l0     1  105:r201 l0     0   96:r202 l0     0
   93:r203 l0    21   83:r204 l0    21   92:r205 l0     0   84:r206 l0     4
   91:r207 l0     0   82:r208 l0    37   90:r209 l0     0   81:r210 l0     5
   89:r211 l0     0   80:r212 l0     2   88:r213 l0     0   79:r214 l0     1
   87:r215 l0     0   78:r216 l0     0   75:r217 l0    21   65:r218 l0    21
   74:r219 l0     0   66:r220 l0     4   73:r221 l0     0   64:r222 l0    37
   72:r223 l0     0   63:r224 l0     5   71:r225 l0     0   62:r226 l0     2
   70:r227 l0     0   61:r228 l0     1   69:r229 l0     0   60:r230 l0     0
   57:r231 l0    21   47:r232 l0    21   56:r233 l0     0   48:r234 l0     4
   55:r235 l0     0   46:r236 l0    37   54:r237 l0     0   45:r238 l0     5
   53:r239 l0     0   44:r240 l0     2   52:r241 l0     0   43:r242 l0     1
   51:r243 l0     0   42:r244 l0     0   39:r245 l0    21   29:r246 l0    21
   38:r247 l0     0   30:r248 l0     4   37:r249 l0     0   28:r250 l0    37
   36:r251 l0     0   27:r252 l0     5   35:r253 l0     0   26:r254 l0     2
   34:r255 l0     0   25:r256 l0     1   33:r257 l0     0   24:r258 l0     0
   21:r259 l0    21   11:r260 l0    21   20:r261 l0     0   12:r262 l0     4
   19:r263 l0     0   10:r264 l0    37   18:r265 l0     0    9:r266 l0     5
   17:r267 l0     0    8:r268 l0     2   16:r269 l0     0    7:r270 l0     1
   15:r271 l0     0    6:r272 l0     0    5:r273 l0     0    1:r274 l0     0
  184:r275 l0     0  166:r276 l0     0  130:r277 l0     0  112:r278 l0     0
   94:r279 l0     0   76:r280 l0     0   58:r281 l0     0   40:r282 l0     0
   22:r283 l0     0    0:r284 l0     0  264:r285 l0    21  263:r286 l0     0
  261:r287 l0     0  260:r288 l0     1  258:r289 l0     5  257:r290 l0     0
  256:r291 l0     0  255:r292 l0     0  253:r293 l0     0  251:r294 l0     1
  250:r295 l0     0  242:r296 l0    38  241:r297 l0    38  240:r298 l0    38
  239:r299 l0    38  226:r300 l0    38  225:r301 l0    38  224:r302 l0    38
  223:r303 l0    38  210:r304 l0    38  209:r305 l0    38  208:r306 l0    38
  207:r307 l0    38  192:r308 l0     5  191:r309 l0     5  176:r310 l0    38
  175:r311 l0    38  167:r312 l0    21  158:r313 l0    38  157:r314 l0    38
  149:r315 l0    37  148:r316 l0     5  147:r317 l0     2  146:r318 l0     1
  145:r319 l0     4  144:r320 l0     0  142:r321 l0     0  139:r322 l0     0
  135:r323 l0     1  134:r324 l0     0  137:r325 l0     2  136:r326 l0     2
  133:r327 l0    21  131:r328 l0    21  122:r329 l0    38  121:r330 l0    38
  113:r331 l0    21  104:r332 l0    38  103:r333 l0    38   95:r334 l0    21
   86:r335 l0    38   85:r336 l0    38   77:r337 l0    21   68:r338 l0    38
   67:r339 l0    38   59:r340 l0    21   50:r341 l0    38   49:r342 l0    38
   41:r343 l0    21   32:r344 l0    38   31:r345 l0    38   23:r346 l0    21
   14:r347 l0    38   13:r348 l0    38    4:r349 l0     0    3:r350 l0     0
    2:r351 l0     0
+++Costs: overall -71, reg -71, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9]
;;  ref usage 	r0={52d,24u} r1={50d,16u} r2={49d,15u} r4={54d,20u} r5={66d,32u} r6={1d,21u} r7={48d,132u} r8={33d} r9={33d} r10={33d} r11={33d} r12={33d} r13={33d} r14={33d} r15={33d} r16={1d,20u} r17={114d,8u} r18={33d} r19={33d} r20={1d,199u} r21={43d,9u} r22={34d} r23={34d} r24={34d} r25={34d} r26={34d} r27={34d} r28={34d} r29={33d} r30={33d} r31={33d} r32={33d} r33={33d} r34={33d} r35={33d} r36={33d} r37={48d,14u} r38={48d,14u} r39={33d} r40={33d} r45={33d} r46={33d} r47={33d} r48={33d} r49={33d} r50={33d} r51={33d} r52={33d} r53={33d} r54={33d} r55={33d} r56={33d} r57={33d} r58={33d} r59={33d} r60={33d} r61={33d} r62={33d} r63={33d} r64={33d} r65={33d} r66={33d} r67={33d} r68={33d} r69={33d} r70={33d} r71={33d} r72={33d} r73={33d} r74={33d} r75={33d} r76={33d} r77={33d} r78={33d} r79={33d} r80={33d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={5d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,3u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,2u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={3d,4u} r324={3d,4u} r325={2d,3u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} 
;;    total ref usage 3735{2935d,800u,0e} in 556{523 regular + 33 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 285 286
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.6164+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":21 1012 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 3 7 2 (set (reg:SF 285)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":23 127 {*movsf_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 285)) "test_lib.c":23 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 285)
        (nil)))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -14 [0xfffffffffffffff2])) [0 obis+0 S4 A16])
        (const_int 0 [0])) "test_lib.c":24 82 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 obis+4 S2 A16])
        (const_int 0 [0])) "test_lib.c":24 83 {*movhi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20480 [0xffffffffffffb000])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":35 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (mem/c:DI (reg:DI 286) [0 MEM[(void *)&serport_params]+0 S8 A64])
        (const_int 8751747723086357551 [0x7974742f7665642f])) "test_lib.c":35 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:HI (plus:DI (reg:DI 286)
                (const_int 8 [0x8])) [0 MEM[(void *)&serport_params]+8 S2 A64])
        (const_int 13395 [0x3453])) "test_lib.c":35 83 {*movhi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:QI (plus:DI (reg:DI 286)
                (const_int 10 [0xa])) [0 MEM[(void *)&serport_params]+10 S1 A16])
        (const_int 0 [0])) "test_lib.c":35 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 286)
        (nil)))
(insn 14 13 15 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20448 [0xffffffffffffb020])) [0 serport_params.baudrate+0 S1 A64])
        (const_int 10 [0xa])) "test_lib.c":36 84 {*movqi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20447 [0xffffffffffffb021])) [0 serport_params.databits+0 S1 A8])
        (const_int 8 [0x8])) "test_lib.c":37 84 {*movqi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20446 [0xffffffffffffb022])) [0 serport_params.stopbits+0 S1 A16])
        (const_int 1 [0x1])) "test_lib.c":38 84 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20445 [0xffffffffffffb023])) [0 serport_params.parity+0 S1 A8])
        (const_int 0 [0])) "test_lib.c":39 84 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20444 [0xffffffffffffb024])) [0 serport_params.handshake+0 S1 A32])
        (const_int 0 [0])) "test_lib.c":40 84 {*movqi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20443 [0xffffffffffffb025])) [0 serport_params.infmode+0 S1 A8])
        (const_int 1 [0x1])) "test_lib.c":41 84 {*movqi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -9660 [0xffffffffffffda44])) [0 meter_comm_params.inf_type+0 S1 A32])
        (const_int 1 [0x1])) "test_lib.c":43 84 {*movqi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -9659 [0xffffffffffffda45])) [0 meter_comm_params.meter_type+0 S1 A8])
        (const_int 1 [0x1])) "test_lib.c":44 84 {*movqi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -9652 [0xffffffffffffda4c])) [0 meter_comm_params.meter_addr_format+0 S1 A32])
        (const_int 1 [0x1])) "test_lib.c":45 84 {*movqi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:QI 87 [ _1 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -9652 [0xffffffffffffda4c])) [0 meter_comm_params.meter_addr_format+0 S1 A32])) "test_lib.c":47 84 {*movqi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _1 ])
            (const_int 1 [0x1]))) "test_lib.c":47 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 87 [ _1 ])
        (nil)))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "test_lib.c":47 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 604 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -9656 [0xffffffffffffda48])) [3 meter_comm_params.meter_id+0 S4 A64])
        (const_int 3 [0x3])) "test_lib.c":49 82 {*movsi_internal}
     (nil))
(jump_insn 604 27 605 3 (set (pc)
        (label_ref 33)) 659 {jump}
     (nil)
 -> 33)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 605 604 30)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 30 605 31 4 2 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -9656 [0xffffffffffffda48])) [3 meter_comm_params.meter_id+0 S4 A64])
        (const_int 19 [0x13])) "test_lib.c":53 82 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 287 288 289 290 291 292
(code_label 33 32 34 5 3 (nil) [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20480 [0xffffffffffffb000])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":55 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 36 35 37 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -9624 [0xffffffffffffda68])) [1 meter_comm_params.interface_params+0 S8 A64])
        (reg:DI 287)) "test_lib.c":55 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 287)
        (nil)))
(insn 37 36 38 5 (set (reg:SI 88 [ _2 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -9656 [0xffffffffffffda48])) [3 meter_comm_params.meter_id+0 S4 A64])) "test_lib.c":56 82 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":56 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 289)
                (plus:DI (reg:DI 288)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":56 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 288)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 5 (set (reg:SI 2 cx)
        (reg:SI 88 [ _2 ])) "test_lib.c":56 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _2 ])
        (nil)))
(insn 41 40 42 5 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f33f7721cf0 *.LC1>)) "test_lib.c":56 81 {*movdi_internal}
     (nil))
(insn 42 41 43 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f33f7749000 *.LC2>)) "test_lib.c":56 81 {*movdi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:DI 5 di)
        (reg:DI 289)) "test_lib.c":56 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 289)
        (nil)))
(insn 44 43 45 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":56 84 {*movqi_internal}
     (nil))
(call_insn 45 44 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7f33f780ff00 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) "test_lib.c":56 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 290)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":57 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 5 (parallel [
            (set (reg:DI 291)
                (plus:DI (reg:DI 290)
                    (const_int 184 [0xb8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":57 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 290)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 5 (set (mem/c:SI (reg:DI 291) [0 MEM[(void *)&meter_comm_params + 184B]+0 S4 A64])
        (const_int 829714028 [0x31746e6c])) "test_lib.c":57 82 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (mem/c:QI (plus:DI (reg:DI 291)
                (const_int 4 [0x4])) [0 MEM[(void *)&meter_comm_params + 184B]+4 S1 A32])
        (const_int 0 [0])) "test_lib.c":57 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 291)
        (nil)))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 292)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":59 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 292)) "test_lib.c":59 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 292)
        (nil)))
(call_insn 52 51 53 5 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_comm") [flags 0x41]  <function_decl 0x7f33f76c9d00 init_comm>) [0 init_comm S1 A8])
            (const_int 0 [0]))) "test_lib.c":59 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 5 (set (reg:QI 89 [ _3 ])
        (reg:QI 0 ax)) "test_lib.c":59 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 54 53 55 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:QI 89 [ _3 ])
            (const_int 0 [0]))) "test_lib.c":59 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ _3 ])
        (nil)))
(jump_insn 55 54 56 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "test_lib.c":59 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 62)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f33f7749090 *.LC3>)) "test_lib.c":61 81 {*movdi_internal}
     (nil))
(call_insn 58 57 59 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":61 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 59 58 606 6 (set (reg:SI 274 [ _189 ])
        (const_int -1 [0xffffffffffffffff])) "test_lib.c":62 82 {*movsi_internal}
     (nil))
(jump_insn 606 59 607 6 (set (pc)
        (label_ref 588)) "test_lib.c":62 659 {jump}
     (nil)
 -> 588)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

(barrier 607 606 62)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 293
(code_label 62 607 63 7 4 (nil) [1 uses])
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f33f7749120 *.LC4>)) "test_lib.c":65 81 {*movdi_internal}
     (nil))
(call_insn 65 64 66 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":65 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 66 65 67 7 (parallel [
            (set (reg:DI 293)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":67 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg:DI 293)) "test_lib.c":67 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 293)
        (nil)))
(call_insn 68 67 69 7 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("connect_to_meter") [flags 0x41]  <function_decl 0x7f33f76c9e00 connect_to_meter>) [0 connect_to_meter S1 A8])
            (const_int 0 [0]))) "test_lib.c":67 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 7 (set (reg:QI 90 [ _4 ])
        (reg:QI 0 ax)) "test_lib.c":67 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 70 69 71 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:QI 90 [ _4 ])
            (const_int 0 [0]))) "test_lib.c":67 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 90 [ _4 ])
        (nil)))
(jump_insn 71 70 72 7 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "test_lib.c":67 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 78)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f33f77491b0 *.LC5>)) "test_lib.c":69 81 {*movdi_internal}
     (nil))
(call_insn 74 73 75 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":69 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 74 608 8 (set (reg:SI 274 [ _189 ])
        (const_int -1 [0xffffffffffffffff])) "test_lib.c":70 82 {*movsi_internal}
     (nil))
(jump_insn 608 75 609 8 (set (pc)
        (label_ref 588)) "test_lib.c":70 659 {jump}
     (nil)
 -> 588)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

(barrier 609 608 78)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 294 295
(code_label 78 609 79 9 6 (nil) [1 uses])
(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 9 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":76 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 81 80 82 9 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":76 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 82 81 83 9 (set (reg:DI 4 si)
        (reg:DI 294)) "test_lib.c":76 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 294)
        (nil)))
(insn 83 82 84 9 (set (reg:DI 5 di)
        (reg:DI 295)) "test_lib.c":76 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 295)
        (nil)))
(call_insn 84 83 85 9 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_nameplate_details") [flags 0x41]  <function_decl 0x7f33f76ea000 get_nameplate_details>) [0 get_nameplate_details S1 A8])
            (const_int 0 [0]))) "test_lib.c":76 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 9 (set (reg:QI 91 [ _5 ])
        (reg:QI 0 ax)) "test_lib.c":76 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 86 85 87 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:QI 91 [ _5 ])
            (const_int 0 [0]))) "test_lib.c":76 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 91 [ _5 ])
        (nil)))
(jump_insn 87 86 88 9 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "test_lib.c":76 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 94)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f33f7749240 *.LC6>)) "test_lib.c":78 81 {*movdi_internal}
     (nil))
(call_insn 90 89 91 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":78 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 91 90 610 10 (set (reg:SI 274 [ _189 ])
        (const_int -1 [0xffffffffffffffff])) "test_lib.c":79 82 {*movsi_internal}
     (nil))
(jump_insn 610 91 611 10 (set (pc)
        (label_ref 588)) "test_lib.c":79 659 {jump}
     (nil)
 -> 588)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

(barrier 611 610 94)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 275 276 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320
(code_label 94 611 95 11 7 (nil) [1 uses])
(note 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f33f77492d0 *.LC7>)) "test_lib.c":83 81 {*movdi_internal}
     (nil))
(call_insn 97 96 98 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":83 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 98 97 99 11 (set (reg:QI 92 [ _6 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20427 [0xffffffffffffb035])) [0 name_plate_info.meter_ser_num.param_obis_code+5 S1 A8])) "test_lib.c":91 84 {*movqi_internal}
     (nil))
(insn 99 98 100 11 (set (reg:SI 93 [ _7 ])
        (zero_extend:SI (reg:QI 92 [ _6 ]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 92 [ _6 ])
        (nil)))
(insn 100 99 101 11 (set (reg:QI 94 [ _8 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20428 [0xffffffffffffb034])) [0 name_plate_info.meter_ser_num.param_obis_code+4 S1 A32])) "test_lib.c":90 84 {*movqi_internal}
     (nil))
(insn 101 100 102 11 (set (reg:SI 95 [ _9 ])
        (zero_extend:SI (reg:QI 94 [ _8 ]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 94 [ _8 ])
        (nil)))
(insn 102 101 103 11 (set (reg:QI 96 [ _10 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20429 [0xffffffffffffb033])) [0 name_plate_info.meter_ser_num.param_obis_code+3 S1 A8])) "test_lib.c":89 84 {*movqi_internal}
     (nil))
(insn 103 102 104 11 (set (reg:SI 97 [ _11 ])
        (zero_extend:SI (reg:QI 96 [ _10 ]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 96 [ _10 ])
        (nil)))
(insn 104 103 105 11 (set (reg:QI 98 [ _12 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20430 [0xffffffffffffb032])) [0 name_plate_info.meter_ser_num.param_obis_code+2 S1 A16])) "test_lib.c":88 84 {*movqi_internal}
     (nil))
(insn 105 104 106 11 (set (reg:SI 99 [ _13 ])
        (zero_extend:SI (reg:QI 98 [ _12 ]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 98 [ _12 ])
        (nil)))
(insn 106 105 107 11 (set (reg:QI 100 [ _14 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20431 [0xffffffffffffb031])) [0 name_plate_info.meter_ser_num.param_obis_code+1 S1 A8])) "test_lib.c":87 84 {*movqi_internal}
     (nil))
(insn 107 106 108 11 (set (reg:SI 101 [ _15 ])
        (zero_extend:SI (reg:QI 100 [ _14 ]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 100 [ _14 ])
        (nil)))
(insn 108 107 109 11 (set (reg:QI 102 [ _16 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20432 [0xffffffffffffb030])) [0 name_plate_info.meter_ser_num.param_obis_code+0 S1 A64])) "test_lib.c":86 84 {*movqi_internal}
     (nil))
(insn 109 108 110 11 (set (reg:SI 103 [ _17 ])
        (zero_extend:SI (reg:QI 102 [ _16 ]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 102 [ _16 ])
        (nil)))
(insn 110 109 111 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 111 110 112 11 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 112 111 113 11 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg:DI 296)
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 296)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 297)) "test_lib.c":85 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 297)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 114 113 115 11 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 115 114 116 11 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg:DI 298)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 298)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 299)) "test_lib.c":85 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 299)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 117 116 118 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 93 [ _7 ])) "test_lib.c":85 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 93 [ _7 ])
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 118 117 119 11 (set (reg:SI 38 r9)
        (reg:SI 95 [ _9 ])) "test_lib.c":85 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ _9 ])
        (nil)))
(insn 119 118 120 11 (set (reg:SI 37 r8)
        (reg:SI 97 [ _11 ])) "test_lib.c":85 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
        (nil)))
(insn 120 119 121 11 (set (reg:SI 2 cx)
        (reg:SI 99 [ _13 ])) "test_lib.c":85 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ _13 ])
        (nil)))
(insn 121 120 122 11 (set (reg:SI 1 dx)
        (reg:SI 101 [ _15 ])) "test_lib.c":85 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101 [ _15 ])
        (nil)))
(insn 122 121 123 11 (set (reg:SI 4 si)
        (reg:SI 103 [ _17 ])) "test_lib.c":85 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103 [ _17 ])
        (nil)))
(insn 123 122 124 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f33f7749360 *.LC8>)) "test_lib.c":85 81 {*movdi_internal}
     (nil))
(insn 124 123 125 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":85 84 {*movqi_internal}
     (nil))
(call_insn 125 124 126 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 32 [0x20]))) "test_lib.c":85 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (expr_list:REG_UNUSED (reg:SI 0 ax)
                                (nil))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 126 125 127 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 127 126 128 11 (set (reg:QI 104 [ _18 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20373 [0xffffffffffffb06b])) [0 name_plate_info.manf_name.param_obis_code+5 S1 A8])) "test_lib.c":102 84 {*movqi_internal}
     (nil))
(insn 128 127 129 11 (set (reg:SI 105 [ _19 ])
        (zero_extend:SI (reg:QI 104 [ _18 ]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 104 [ _18 ])
        (nil)))
(insn 129 128 130 11 (set (reg:QI 106 [ _20 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20374 [0xffffffffffffb06a])) [0 name_plate_info.manf_name.param_obis_code+4 S1 A16])) "test_lib.c":101 84 {*movqi_internal}
     (nil))
(insn 130 129 131 11 (set (reg:SI 107 [ _21 ])
        (zero_extend:SI (reg:QI 106 [ _20 ]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 106 [ _20 ])
        (nil)))
(insn 131 130 132 11 (set (reg:QI 108 [ _22 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20375 [0xffffffffffffb069])) [0 name_plate_info.manf_name.param_obis_code+3 S1 A8])) "test_lib.c":100 84 {*movqi_internal}
     (nil))
(insn 132 131 133 11 (set (reg:SI 109 [ _23 ])
        (zero_extend:SI (reg:QI 108 [ _22 ]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 108 [ _22 ])
        (nil)))
(insn 133 132 134 11 (set (reg:QI 110 [ _24 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20376 [0xffffffffffffb068])) [0 name_plate_info.manf_name.param_obis_code+2 S1 A64])) "test_lib.c":99 84 {*movqi_internal}
     (nil))
(insn 134 133 135 11 (set (reg:SI 111 [ _25 ])
        (zero_extend:SI (reg:QI 110 [ _24 ]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 110 [ _24 ])
        (nil)))
(insn 135 134 136 11 (set (reg:QI 112 [ _26 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20377 [0xffffffffffffb067])) [0 name_plate_info.manf_name.param_obis_code+1 S1 A8])) "test_lib.c":98 84 {*movqi_internal}
     (nil))
(insn 136 135 137 11 (set (reg:SI 113 [ _27 ])
        (zero_extend:SI (reg:QI 112 [ _26 ]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 112 [ _26 ])
        (nil)))
(insn 137 136 138 11 (set (reg:QI 114 [ _28 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20378 [0xffffffffffffb066])) [0 name_plate_info.manf_name.param_obis_code+0 S1 A16])) "test_lib.c":97 84 {*movqi_internal}
     (nil))
(insn 138 137 139 11 (set (reg:SI 115 [ _29 ])
        (zero_extend:SI (reg:QI 114 [ _28 ]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 114 [ _28 ])
        (nil)))
(insn 139 138 140 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 140 139 141 11 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 141 140 142 11 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg:DI 300)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 300)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 301)) "test_lib.c":96 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 301)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 143 142 144 11 (parallel [
            (set (reg:DI 302)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 144 143 145 11 (parallel [
            (set (reg:DI 303)
                (plus:DI (reg:DI 302)
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 302)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 303)) "test_lib.c":96 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 303)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 146 145 147 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 105 [ _19 ])) "test_lib.c":96 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 105 [ _19 ])
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 147 146 148 11 (set (reg:SI 38 r9)
        (reg:SI 107 [ _21 ])) "test_lib.c":96 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107 [ _21 ])
        (nil)))
(insn 148 147 149 11 (set (reg:SI 37 r8)
        (reg:SI 109 [ _23 ])) "test_lib.c":96 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109 [ _23 ])
        (nil)))
(insn 149 148 150 11 (set (reg:SI 2 cx)
        (reg:SI 111 [ _25 ])) "test_lib.c":96 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111 [ _25 ])
        (nil)))
(insn 150 149 151 11 (set (reg:SI 1 dx)
        (reg:SI 113 [ _27 ])) "test_lib.c":96 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113 [ _27 ])
        (nil)))
(insn 151 150 152 11 (set (reg:SI 4 si)
        (reg:SI 115 [ _29 ])) "test_lib.c":96 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115 [ _29 ])
        (nil)))
(insn 152 151 153 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f33f7749360 *.LC8>)) "test_lib.c":96 81 {*movdi_internal}
     (nil))
(insn 153 152 154 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":96 84 {*movqi_internal}
     (nil))
(call_insn 154 153 155 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 32 [0x20]))) "test_lib.c":96 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (expr_list:REG_UNUSED (reg:SI 0 ax)
                                (nil))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 155 154 156 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 156 155 157 11 (set (reg:QI 116 [ _30 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20319 [0xffffffffffffb0a1])) [0 name_plate_info.fw_vwesion.param_obis_code+5 S1 A8])) "test_lib.c":113 84 {*movqi_internal}
     (nil))
(insn 157 156 158 11 (set (reg:SI 117 [ _31 ])
        (zero_extend:SI (reg:QI 116 [ _30 ]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 116 [ _30 ])
        (nil)))
(insn 158 157 159 11 (set (reg:QI 118 [ _32 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20320 [0xffffffffffffb0a0])) [0 name_plate_info.fw_vwesion.param_obis_code+4 S1 A64])) "test_lib.c":112 84 {*movqi_internal}
     (nil))
(insn 159 158 160 11 (set (reg:SI 119 [ _33 ])
        (zero_extend:SI (reg:QI 118 [ _32 ]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 118 [ _32 ])
        (nil)))
(insn 160 159 161 11 (set (reg:QI 120 [ _34 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20321 [0xffffffffffffb09f])) [0 name_plate_info.fw_vwesion.param_obis_code+3 S1 A8])) "test_lib.c":111 84 {*movqi_internal}
     (nil))
(insn 161 160 162 11 (set (reg:SI 121 [ _35 ])
        (zero_extend:SI (reg:QI 120 [ _34 ]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 120 [ _34 ])
        (nil)))
(insn 162 161 163 11 (set (reg:QI 122 [ _36 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20322 [0xffffffffffffb09e])) [0 name_plate_info.fw_vwesion.param_obis_code+2 S1 A16])) "test_lib.c":110 84 {*movqi_internal}
     (nil))
(insn 163 162 164 11 (set (reg:SI 123 [ _37 ])
        (zero_extend:SI (reg:QI 122 [ _36 ]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 122 [ _36 ])
        (nil)))
(insn 164 163 165 11 (set (reg:QI 124 [ _38 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20323 [0xffffffffffffb09d])) [0 name_plate_info.fw_vwesion.param_obis_code+1 S1 A8])) "test_lib.c":109 84 {*movqi_internal}
     (nil))
(insn 165 164 166 11 (set (reg:SI 125 [ _39 ])
        (zero_extend:SI (reg:QI 124 [ _38 ]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 124 [ _38 ])
        (nil)))
(insn 166 165 167 11 (set (reg:QI 126 [ _40 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20324 [0xffffffffffffb09c])) [0 name_plate_info.fw_vwesion.param_obis_code+0 S1 A32])) "test_lib.c":108 84 {*movqi_internal}
     (nil))
(insn 167 166 168 11 (set (reg:SI 127 [ _41 ])
        (zero_extend:SI (reg:QI 126 [ _40 ]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 126 [ _40 ])
        (nil)))
(insn 168 167 169 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 169 168 170 11 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 170 169 171 11 (parallel [
            (set (reg:DI 305)
                (plus:DI (reg:DI 304)
                    (const_int 130 [0x82])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 304)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 305)) "test_lib.c":107 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 305)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 172 171 173 11 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 173 172 174 11 (parallel [
            (set (reg:DI 307)
                (plus:DI (reg:DI 306)
                    (const_int 114 [0x72])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 306)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 174 173 175 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 307)) "test_lib.c":107 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 307)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 175 174 176 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 117 [ _31 ])) "test_lib.c":107 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 117 [ _31 ])
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 176 175 177 11 (set (reg:SI 38 r9)
        (reg:SI 119 [ _33 ])) "test_lib.c":107 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119 [ _33 ])
        (nil)))
(insn 177 176 178 11 (set (reg:SI 37 r8)
        (reg:SI 121 [ _35 ])) "test_lib.c":107 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121 [ _35 ])
        (nil)))
(insn 178 177 179 11 (set (reg:SI 2 cx)
        (reg:SI 123 [ _37 ])) "test_lib.c":107 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123 [ _37 ])
        (nil)))
(insn 179 178 180 11 (set (reg:SI 1 dx)
        (reg:SI 125 [ _39 ])) "test_lib.c":107 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125 [ _39 ])
        (nil)))
(insn 180 179 181 11 (set (reg:SI 4 si)
        (reg:SI 127 [ _41 ])) "test_lib.c":107 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 127 [ _41 ])
        (nil)))
(insn 181 180 182 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f33f7749360 *.LC8>)) "test_lib.c":107 81 {*movdi_internal}
     (nil))
(insn 182 181 183 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":107 84 {*movqi_internal}
     (nil))
(call_insn 183 182 184 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 32 [0x20]))) "test_lib.c":107 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (expr_list:REG_UNUSED (reg:SI 0 ax)
                                (nil))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 184 183 185 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 185 184 186 11 (set (reg:QI 128 [ _42 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20248 [0xffffffffffffb0e8])) [0 name_plate_info.meter_type.param_value+0 S1 A64])) "test_lib.c":126 84 {*movqi_internal}
     (nil))
(insn 186 185 187 11 (set (reg:SI 129 [ _43 ])
        (sign_extend:SI (reg:QI 128 [ _42 ]))) "test_lib.c":118 151 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 128 [ _42 ])
        (nil)))
(insn 187 186 188 11 (set (reg:QI 130 [ _44 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20265 [0xffffffffffffb0d7])) [0 name_plate_info.meter_type.param_obis_code+5 S1 A8])) "test_lib.c":124 84 {*movqi_internal}
     (nil))
(insn 188 187 189 11 (set (reg:SI 131 [ _45 ])
        (zero_extend:SI (reg:QI 130 [ _44 ]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 130 [ _44 ])
        (nil)))
(insn 189 188 190 11 (set (reg:QI 132 [ _46 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20266 [0xffffffffffffb0d6])) [0 name_plate_info.meter_type.param_obis_code+4 S1 A16])) "test_lib.c":123 84 {*movqi_internal}
     (nil))
(insn 190 189 191 11 (set (reg:SI 133 [ _47 ])
        (zero_extend:SI (reg:QI 132 [ _46 ]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 132 [ _46 ])
        (nil)))
(insn 191 190 192 11 (set (reg:QI 134 [ _48 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20267 [0xffffffffffffb0d5])) [0 name_plate_info.meter_type.param_obis_code+3 S1 A8])) "test_lib.c":122 84 {*movqi_internal}
     (nil))
(insn 192 191 193 11 (set (reg:SI 135 [ _49 ])
        (zero_extend:SI (reg:QI 134 [ _48 ]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 134 [ _48 ])
        (nil)))
(insn 193 192 194 11 (set (reg:QI 136 [ _50 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20268 [0xffffffffffffb0d4])) [0 name_plate_info.meter_type.param_obis_code+2 S1 A32])) "test_lib.c":121 84 {*movqi_internal}
     (nil))
(insn 194 193 195 11 (set (reg:SI 137 [ _51 ])
        (zero_extend:SI (reg:QI 136 [ _50 ]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 136 [ _50 ])
        (nil)))
(insn 195 194 196 11 (set (reg:QI 138 [ _52 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20269 [0xffffffffffffb0d3])) [0 name_plate_info.meter_type.param_obis_code+1 S1 A8])) "test_lib.c":120 84 {*movqi_internal}
     (nil))
(insn 196 195 197 11 (set (reg:SI 139 [ _53 ])
        (zero_extend:SI (reg:QI 138 [ _52 ]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 138 [ _52 ])
        (nil)))
(insn 197 196 198 11 (set (reg:QI 140 [ _54 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20270 [0xffffffffffffb0d2])) [0 name_plate_info.meter_type.param_obis_code+0 S1 A16])) "test_lib.c":119 84 {*movqi_internal}
     (nil))
(insn 198 197 199 11 (set (reg:SI 141 [ _55 ])
        (zero_extend:SI (reg:QI 140 [ _54 ]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 140 [ _54 ])
        (nil)))
(insn 199 198 200 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":118 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 200 199 201 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 129 [ _43 ])) "test_lib.c":118 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 129 [ _43 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 201 200 202 11 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":118 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 202 201 203 11 (parallel [
            (set (reg:DI 309)
                (plus:DI (reg:DI 308)
                    (const_int 168 [0xa8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":118 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 308)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 203 202 204 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 309)) "test_lib.c":118 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 309)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 204 203 205 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 131 [ _45 ])) "test_lib.c":118 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 131 [ _45 ])
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 205 204 206 11 (set (reg:SI 38 r9)
        (reg:SI 133 [ _47 ])) "test_lib.c":118 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133 [ _47 ])
        (nil)))
(insn 206 205 207 11 (set (reg:SI 37 r8)
        (reg:SI 135 [ _49 ])) "test_lib.c":118 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135 [ _49 ])
        (nil)))
(insn 207 206 208 11 (set (reg:SI 2 cx)
        (reg:SI 137 [ _51 ])) "test_lib.c":118 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137 [ _51 ])
        (nil)))
(insn 208 207 209 11 (set (reg:SI 1 dx)
        (reg:SI 139 [ _53 ])) "test_lib.c":118 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 139 [ _53 ])
        (nil)))
(insn 209 208 210 11 (set (reg:SI 4 si)
        (reg:SI 141 [ _55 ])) "test_lib.c":118 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 141 [ _55 ])
        (nil)))
(insn 210 209 211 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f33f77493f0 *.LC9>)) "test_lib.c":118 81 {*movdi_internal}
     (nil))
(insn 211 210 212 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":118 84 {*movqi_internal}
     (nil))
(call_insn 212 211 213 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 32 [0x20]))) "test_lib.c":118 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (expr_list:REG_UNUSED (reg:SI 0 ax)
                                (nil))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 213 212 214 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":118 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 214 213 215 11 (set (reg:SI 275 [ _221 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20194 [0xffffffffffffb11e])) [0 MEM[(char * {ref-all})&name_plate_info + 238B]+0 S4 A16])) "test_lib.c":129 82 {*movsi_internal}
     (nil))
(insn 215 214 216 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 275 [ _221 ])) "test_lib.c":129 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 275 [ _221 ])
        (nil)))
(insn 216 215 217 11 (set (reg:SF 142 [ p_flt_ptr.0_56 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":130 127 {*movsf_internal}
     (nil))
(insn 217 216 218 11 (set (reg:DF 143 [ _57 ])
        (float_extend:DF (reg:SF 142 [ p_flt_ptr.0_56 ]))) "test_lib.c":130 154 {*extendsfdf2}
     (expr_list:REG_DEAD (reg:SF 142 [ p_flt_ptr.0_56 ])
        (nil)))
(insn 218 217 219 11 (set (reg:QI 144 [ _58 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20211 [0xffffffffffffb10d])) [0 name_plate_info.int_ct_ratio.param_obis_code+5 S1 A8])) "test_lib.c":136 84 {*movqi_internal}
     (nil))
(insn 219 218 220 11 (set (reg:SI 145 [ _59 ])
        (zero_extend:SI (reg:QI 144 [ _58 ]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 144 [ _58 ])
        (nil)))
(insn 220 219 221 11 (set (reg:QI 146 [ _60 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20212 [0xffffffffffffb10c])) [0 name_plate_info.int_ct_ratio.param_obis_code+4 S1 A32])) "test_lib.c":135 84 {*movqi_internal}
     (nil))
(insn 221 220 222 11 (set (reg:SI 147 [ _61 ])
        (zero_extend:SI (reg:QI 146 [ _60 ]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 146 [ _60 ])
        (nil)))
(insn 222 221 223 11 (set (reg:QI 148 [ _62 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20213 [0xffffffffffffb10b])) [0 name_plate_info.int_ct_ratio.param_obis_code+3 S1 A8])) "test_lib.c":134 84 {*movqi_internal}
     (nil))
(insn 223 222 224 11 (set (reg:SI 149 [ _63 ])
        (zero_extend:SI (reg:QI 148 [ _62 ]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 148 [ _62 ])
        (nil)))
(insn 224 223 225 11 (set (reg:QI 150 [ _64 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20214 [0xffffffffffffb10a])) [0 name_plate_info.int_ct_ratio.param_obis_code+2 S1 A16])) "test_lib.c":133 84 {*movqi_internal}
     (nil))
(insn 225 224 226 11 (set (reg:SI 151 [ _65 ])
        (zero_extend:SI (reg:QI 150 [ _64 ]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 150 [ _64 ])
        (nil)))
(insn 226 225 227 11 (set (reg:QI 152 [ _66 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20215 [0xffffffffffffb109])) [0 name_plate_info.int_ct_ratio.param_obis_code+1 S1 A8])) "test_lib.c":132 84 {*movqi_internal}
     (nil))
(insn 227 226 228 11 (set (reg:SI 153 [ _67 ])
        (zero_extend:SI (reg:QI 152 [ _66 ]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 152 [ _66 ])
        (nil)))
(insn 228 227 229 11 (set (reg:QI 154 [ _68 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20216 [0xffffffffffffb108])) [0 name_plate_info.int_ct_ratio.param_obis_code+0 S1 A64])) "test_lib.c":131 84 {*movqi_internal}
     (nil))
(insn 229 228 230 11 (set (reg:SI 155 [ _69 ])
        (zero_extend:SI (reg:QI 154 [ _68 ]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 154 [ _68 ])
        (nil)))
(insn 230 229 231 11 (parallel [
            (set (reg:DI 310)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":130 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 231 230 232 11 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg:DI 310)
                    (const_int 222 [0xde])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":130 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 310)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 232 231 233 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 311)) "test_lib.c":130 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 311)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 233 232 234 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 145 [ _59 ])) "test_lib.c":130 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 145 [ _59 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 234 233 235 11 (set (reg:DF 21 xmm0)
        (reg:DF 143 [ _57 ])) "test_lib.c":130 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 143 [ _57 ])
        (nil)))
(insn 235 234 236 11 (set (reg:SI 38 r9)
        (reg:SI 147 [ _61 ])) "test_lib.c":130 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 147 [ _61 ])
        (nil)))
(insn 236 235 237 11 (set (reg:SI 37 r8)
        (reg:SI 149 [ _63 ])) "test_lib.c":130 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 149 [ _63 ])
        (nil)))
(insn 237 236 238 11 (set (reg:SI 2 cx)
        (reg:SI 151 [ _65 ])) "test_lib.c":130 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 151 [ _65 ])
        (nil)))
(insn 238 237 239 11 (set (reg:SI 1 dx)
        (reg:SI 153 [ _67 ])) "test_lib.c":130 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 153 [ _67 ])
        (nil)))
(insn 239 238 240 11 (set (reg:SI 4 si)
        (reg:SI 155 [ _69 ])) "test_lib.c":130 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 155 [ _69 ])
        (nil)))
(insn 240 239 241 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":130 81 {*movdi_internal}
     (nil))
(insn 241 240 242 11 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":130 84 {*movqi_internal}
     (nil))
(call_insn 242 241 243 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":130 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:SI 1 dx)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 243 242 244 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":130 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 244 243 245 11 (set (reg:SF 312)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":142 127 {*movsf_internal}
     (nil))
(insn 245 244 246 11 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 312)) "test_lib.c":142 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 312)
        (nil)))
(insn 246 245 247 11 (set (reg:SI 276 [ _225 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20140 [0xffffffffffffb154])) [0 MEM[(char * {ref-all})&name_plate_info + 292B]+0 S4 A32])) "test_lib.c":143 82 {*movsi_internal}
     (nil))
(insn 247 246 248 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 276 [ _225 ])) "test_lib.c":143 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 276 [ _225 ])
        (nil)))
(insn 248 247 249 11 (set (reg:SF 156 [ p_flt_ptr.1_70 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":144 127 {*movsf_internal}
     (nil))
(insn 249 248 250 11 (set (reg:DF 157 [ _71 ])
        (float_extend:DF (reg:SF 156 [ p_flt_ptr.1_70 ]))) "test_lib.c":144 154 {*extendsfdf2}
     (expr_list:REG_DEAD (reg:SF 156 [ p_flt_ptr.1_70 ])
        (nil)))
(insn 250 249 251 11 (set (reg:QI 158 [ _72 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20157 [0xffffffffffffb143])) [0 name_plate_info.int_pt_ratio.param_obis_code+5 S1 A8])) "test_lib.c":150 84 {*movqi_internal}
     (nil))
(insn 251 250 252 11 (set (reg:SI 159 [ _73 ])
        (zero_extend:SI (reg:QI 158 [ _72 ]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 158 [ _72 ])
        (nil)))
(insn 252 251 253 11 (set (reg:QI 160 [ _74 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20158 [0xffffffffffffb142])) [0 name_plate_info.int_pt_ratio.param_obis_code+4 S1 A16])) "test_lib.c":149 84 {*movqi_internal}
     (nil))
(insn 253 252 254 11 (set (reg:SI 161 [ _75 ])
        (zero_extend:SI (reg:QI 160 [ _74 ]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 160 [ _74 ])
        (nil)))
(insn 254 253 255 11 (set (reg:QI 162 [ _76 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20159 [0xffffffffffffb141])) [0 name_plate_info.int_pt_ratio.param_obis_code+3 S1 A8])) "test_lib.c":148 84 {*movqi_internal}
     (nil))
(insn 255 254 256 11 (set (reg:SI 163 [ _77 ])
        (zero_extend:SI (reg:QI 162 [ _76 ]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 162 [ _76 ])
        (nil)))
(insn 256 255 257 11 (set (reg:QI 164 [ _78 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20160 [0xffffffffffffb140])) [0 name_plate_info.int_pt_ratio.param_obis_code+2 S1 A64])) "test_lib.c":147 84 {*movqi_internal}
     (nil))
(insn 257 256 258 11 (set (reg:SI 165 [ _79 ])
        (zero_extend:SI (reg:QI 164 [ _78 ]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 164 [ _78 ])
        (nil)))
(insn 258 257 259 11 (set (reg:QI 166 [ _80 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20161 [0xffffffffffffb13f])) [0 name_plate_info.int_pt_ratio.param_obis_code+1 S1 A8])) "test_lib.c":146 84 {*movqi_internal}
     (nil))
(insn 259 258 260 11 (set (reg:SI 167 [ _81 ])
        (zero_extend:SI (reg:QI 166 [ _80 ]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 166 [ _80 ])
        (nil)))
(insn 260 259 261 11 (set (reg:QI 168 [ _82 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20162 [0xffffffffffffb13e])) [0 name_plate_info.int_pt_ratio.param_obis_code+0 S1 A16])) "test_lib.c":145 84 {*movqi_internal}
     (nil))
(insn 261 260 262 11 (set (reg:SI 169 [ _83 ])
        (zero_extend:SI (reg:QI 168 [ _82 ]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 168 [ _82 ])
        (nil)))
(insn 262 261 263 11 (parallel [
            (set (reg:DI 313)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 263 262 264 11 (parallel [
            (set (reg:DI 314)
                (plus:DI (reg:DI 313)
                    (const_int 276 [0x114])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":144 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 313)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 264 263 265 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 314)) "test_lib.c":144 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 314)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 265 264 266 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 159 [ _73 ])) "test_lib.c":144 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 159 [ _73 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 266 265 267 11 (set (reg:DF 21 xmm0)
        (reg:DF 157 [ _71 ])) "test_lib.c":144 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 157 [ _71 ])
        (nil)))
(insn 267 266 268 11 (set (reg:SI 38 r9)
        (reg:SI 161 [ _75 ])) "test_lib.c":144 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 161 [ _75 ])
        (nil)))
(insn 268 267 269 11 (set (reg:SI 37 r8)
        (reg:SI 163 [ _77 ])) "test_lib.c":144 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 163 [ _77 ])
        (nil)))
(insn 269 268 270 11 (set (reg:SI 2 cx)
        (reg:SI 165 [ _79 ])) "test_lib.c":144 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 165 [ _79 ])
        (nil)))
(insn 270 269 271 11 (set (reg:SI 1 dx)
        (reg:SI 167 [ _81 ])) "test_lib.c":144 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 167 [ _81 ])
        (nil)))
(insn 271 270 272 11 (set (reg:SI 4 si)
        (reg:SI 169 [ _83 ])) "test_lib.c":144 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169 [ _83 ])
        (nil)))
(insn 272 271 273 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":144 81 {*movdi_internal}
     (nil))
(insn 273 272 274 11 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":144 84 {*movqi_internal}
     (nil))
(call_insn 274 273 275 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":144 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:SI 1 dx)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 275 274 276 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 276 275 277 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f33f7749510 *.LC11>)) "test_lib.c":156 81 {*movdi_internal}
     (nil))
(call_insn 277 276 278 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":156 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 278 277 279 11 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -11344 [0xffffffffffffd3b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 279 278 280 11 (parallel [
            (set (reg:DI 316)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -13024 [0xffffffffffffcd20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 280 279 281 11 (parallel [
            (set (reg:DI 317)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -14704 [0xffffffffffffc690])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 281 280 282 11 (parallel [
            (set (reg:DI 318)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16384 [0xffffffffffffc000])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 282 281 283 11 (parallel [
            (set (reg:DI 319)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -18064 [0xffffffffffffb970])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 283 282 284 11 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 284 283 285 11 (set (reg:DI 38 r9)
        (reg:DI 315)) "test_lib.c":166 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 315)
        (nil)))
(insn 285 284 286 11 (set (reg:DI 37 r8)
        (reg:DI 316)) "test_lib.c":166 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 316)
        (nil)))
(insn 286 285 287 11 (set (reg:DI 2 cx)
        (reg:DI 317)) "test_lib.c":166 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 317)
        (nil)))
(insn 287 286 288 11 (set (reg:DI 1 dx)
        (reg:DI 318)) "test_lib.c":166 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 318)
        (nil)))
(insn 288 287 289 11 (set (reg:DI 4 si)
        (reg:DI 319)) "test_lib.c":166 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 319)
        (nil)))
(insn 289 288 290 11 (set (reg:DI 5 di)
        (reg:DI 320)) "test_lib.c":166 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 320)
        (nil)))
(call_insn 290 289 291 11 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_obis_codes") [flags 0x41]  <function_decl 0x7f33f76f9e00 get_obis_codes>) [0 get_obis_codes S1 A8])
            (const_int 0 [0]))) "test_lib.c":166 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 291 290 292 11 (set (reg:QI 170 [ _84 ])
        (reg:QI 0 ax)) "test_lib.c":166 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 292 291 293 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:QI 170 [ _84 ])
            (const_int 0 [0]))) "test_lib.c":166 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 170 [ _84 ])
        (nil)))
(jump_insn 293 292 294 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) "test_lib.c":166 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 301)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274
(note 294 293 295 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f33f77495a0 *.LC12>)) "test_lib.c":169 81 {*movdi_internal}
     (nil))
(insn 296 295 297 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":169 84 {*movqi_internal}
     (nil))
(call_insn 297 296 298 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test_lib.c":169 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 298 297 612 12 (set (reg:SI 274 [ _189 ])
        (const_int -1 [0xffffffffffffffff])) "test_lib.c":170 82 {*movsi_internal}
     (nil))
(jump_insn 612 298 613 12 (set (pc)
        (label_ref 588)) "test_lib.c":170 659 {jump}
     (nil)
 -> 588)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

(barrier 613 612 301)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 321
(code_label 301 613 302 13 8 (nil) [1 uses])
(note 302 301 303 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 13 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -19440 [0xffffffffffffb410])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":174 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 304 303 305 13 (set (reg:DI 1 dx)
        (const_int 1366 [0x556])) "test_lib.c":174 81 {*movdi_internal}
     (nil))
(insn 305 304 306 13 (set (reg:SI 4 si)
        (const_int 0 [0])) "test_lib.c":174 82 {*movsi_internal}
     (nil))
(insn 306 305 307 13 (set (reg:DI 5 di)
        (reg:DI 321)) "test_lib.c":174 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 321)
        (nil)))
(call_insn 307 306 308 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f33f7805f00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "test_lib.c":174 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 308 307 309 13 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])
        (const_int 0 [0])) "test_lib.c":424 84 {*movqi_internal}
     (nil))
(insn 309 308 614 13 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])
        (const_int 0 [0])) "test_lib.c":427 84 {*movqi_internal}
     (nil))
(jump_insn 614 309 615 13 (set (pc)
        (label_ref 573)) "test_lib.c":427 659 {jump}
     (nil)
 -> 573)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 615 614 575)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       17
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 171 172 173 322
(code_label 575 615 312 14 11 (nil) [1 uses])
(note 312 575 313 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 14 (set (reg:SI 171 [ _85 ])
        (zero_extend:SI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8]))) "test_lib.c":432 136 {*zero_extendqisi2}
     (nil))
(insn 314 313 315 14 (set (reg:SI 4 si)
        (reg:SI 171 [ _85 ])) "test_lib.c":432 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 171 [ _85 ])
        (nil)))
(insn 315 314 316 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f33f7749630 *.LC13>)) "test_lib.c":432 81 {*movdi_internal}
     (nil))
(insn 316 315 317 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":432 84 {*movqi_internal}
     (nil))
(call_insn 317 316 318 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test_lib.c":432 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 318 317 319 14 (set (reg:SI 172 [ _86 ])
        (zero_extend:SI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8]))) "test_lib.c":433 136 {*zero_extendqisi2}
     (nil))
(insn 319 318 320 14 (parallel [
            (set (reg:DI 322)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":433 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 320 319 321 14 (set (reg:SI 4 si)
        (reg:SI 172 [ _86 ])) "test_lib.c":433 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 172 [ _86 ])
        (nil)))
(insn 321 320 322 14 (set (reg:DI 5 di)
        (reg:DI 322)) "test_lib.c":433 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 322)
        (nil)))
(call_insn 322 321 323 14 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_event_data_all") [flags 0x41]  <function_decl 0x7f33f76ea500 get_event_data_all>) [0 get_event_data_all S1 A8])
            (const_int 0 [0]))) "test_lib.c":433 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 323 322 324 14 (set (reg:QI 173 [ _87 ])
        (reg:QI 0 ax)) "test_lib.c":433 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 324 323 325 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:QI 173 [ _87 ])
            (const_int 0 [0]))) "test_lib.c":433 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 173 [ _87 ])
        (nil)))
(jump_insn 325 324 326 14 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 568)
            (pc))) "test_lib.c":433 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 568)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 277 278 279 280 281 282 283 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348
(note 326 325 327 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 15 (parallel [
            (set (reg/f:DI 323)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":435 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 328 327 329 15 (parallel [
            (set (reg/f:DI 324)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9460 [0xffffffffffffdb0c])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":435 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 329 328 330 15 (set (reg:DI 325)
        (const_int 75 [0x4b])) "test_lib.c":435 81 {*movdi_internal}
     (nil))
(insn 330 329 331 15 (parallel [
            (set (reg:DI 325)
                (const_int 0 [0]))
            (set (reg/f:DI 323)
                (plus:DI (ashift:DI (reg:DI 325)
                        (const_int 3 [0x3]))
                    (reg/f:DI 323)))
            (set (reg/f:DI 324)
                (plus:DI (ashift:DI (reg:DI 325)
                        (const_int 3 [0x3]))
                    (reg/f:DI 324)))
            (set (mem/c:BLK (reg/f:DI 323) [0 MEM[(char * {ref-all})&event_val_info]+0 S600 A64])
                (mem/c:BLK (reg/f:DI 324) [0 MEM[(char * {ref-all})&meter_comm_params + 204B]+0 S600 A32]))
            (use (reg:DI 325))
        ]) "test_lib.c":435 944 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 325)
        (nil)))
(insn 331 330 332 15 (set (reg:HI 326)
        (mem/c:HI (reg/f:DI 324) [0 MEM[(char * {ref-all})&meter_comm_params + 204B]+600 S2 A32])) "test_lib.c":435 83 {*movhi_internal}
     (nil))
(insn 332 331 333 15 (set (mem/c:HI (reg/f:DI 323) [0 MEM[(char * {ref-all})&event_val_info]+600 S2 A64])
        (reg:HI 326)) "test_lib.c":435 83 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 326)
        (nil)))
(insn 333 332 334 15 (set (reg/f:DI 323)
        (plus:DI (reg/f:DI 323)
            (const_int 2 [0x2]))) "test_lib.c":435 214 {*leadi}
     (expr_list:REG_UNUSED (reg/f:DI 323)
        (nil)))
(insn 334 333 335 15 (set (reg/f:DI 324)
        (plus:DI (reg/f:DI 324)
            (const_int 2 [0x2]))) "test_lib.c":435 214 {*leadi}
     (expr_list:REG_UNUSED (reg/f:DI 324)
        (nil)))
(insn 335 334 336 15 (set (reg:SF 327)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":437 127 {*movsf_internal}
     (nil))
(insn 336 335 337 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 327)) "test_lib.c":437 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 327)
        (nil)))
(insn 337 336 338 15 (set (reg:SI 174 [ _88 ])
        (zero_extend:SI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8]))) "test_lib.c":438 136 {*zero_extendqisi2}
     (nil))
(insn 338 337 339 15 (set (reg:SI 4 si)
        (reg:SI 174 [ _88 ])) "test_lib.c":438 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 174 [ _88 ])
        (nil)))
(insn 339 338 340 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f33f77496c0 *.LC14>)) "test_lib.c":438 81 {*movdi_internal}
     (nil))
(insn 340 339 341 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":438 84 {*movqi_internal}
     (nil))
(call_insn 341 340 342 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test_lib.c":438 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 342 341 343 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f33f77492d0 *.LC7>)) "test_lib.c":439 81 {*movdi_internal}
     (nil))
(call_insn 343 342 344 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":439 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 344 343 345 15 (set (reg:SF 328)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":441 127 {*movsf_internal}
     (nil))
(insn 345 344 346 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 328)) "test_lib.c":441 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 328)
        (nil)))
(insn 346 345 347 15 (set (reg:SI 277 [ _243 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -19640 [0xffffffffffffb348])) [0 MEM[(char * {ref-all})&event_val_info + 408B]+0 S4 A64])) "test_lib.c":442 82 {*movsi_internal}
     (nil))
(insn 347 346 348 15 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 277 [ _243 ])) "test_lib.c":442 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 277 [ _243 ])
        (nil)))
(insn 348 347 349 15 (set (reg:SF 175 [ p_flt_ptr.2_89 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":443 127 {*movsf_internal}
     (nil))
(insn 349 348 350 15 (set (reg:DF 176 [ _90 ])
        (float_extend:DF (reg:SF 175 [ p_flt_ptr.2_89 ]))) "test_lib.c":443 154 {*extendsfdf2}
     (expr_list:REG_DEAD (reg:SF 175 [ p_flt_ptr.2_89 ])
        (nil)))
(insn 350 349 351 15 (set (reg:QI 177 [ _91 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19657 [0xffffffffffffb337])) [0 event_val_info.kwh.param_obis_code+5 S1 A8])) "test_lib.c":446 84 {*movqi_internal}
     (nil))
(insn 351 350 352 15 (set (reg:SI 178 [ _92 ])
        (zero_extend:SI (reg:QI 177 [ _91 ]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 177 [ _91 ])
        (nil)))
(insn 352 351 353 15 (set (reg:QI 179 [ _93 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19658 [0xffffffffffffb336])) [0 event_val_info.kwh.param_obis_code+4 S1 A16])) "test_lib.c":446 84 {*movqi_internal}
     (nil))
(insn 353 352 354 15 (set (reg:SI 180 [ _94 ])
        (zero_extend:SI (reg:QI 179 [ _93 ]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 179 [ _93 ])
        (nil)))
(insn 354 353 355 15 (set (reg:QI 181 [ _95 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19659 [0xffffffffffffb335])) [0 event_val_info.kwh.param_obis_code+3 S1 A8])) "test_lib.c":445 84 {*movqi_internal}
     (nil))
(insn 355 354 356 15 (set (reg:SI 182 [ _96 ])
        (zero_extend:SI (reg:QI 181 [ _95 ]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 181 [ _95 ])
        (nil)))
(insn 356 355 357 15 (set (reg:QI 183 [ _97 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19660 [0xffffffffffffb334])) [0 event_val_info.kwh.param_obis_code+2 S1 A32])) "test_lib.c":445 84 {*movqi_internal}
     (nil))
(insn 357 356 358 15 (set (reg:SI 184 [ _98 ])
        (zero_extend:SI (reg:QI 183 [ _97 ]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 183 [ _97 ])
        (nil)))
(insn 358 357 359 15 (set (reg:QI 185 [ _99 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19661 [0xffffffffffffb333])) [0 event_val_info.kwh.param_obis_code+1 S1 A8])) "test_lib.c":444 84 {*movqi_internal}
     (nil))
(insn 359 358 360 15 (set (reg:SI 186 [ _100 ])
        (zero_extend:SI (reg:QI 185 [ _99 ]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 185 [ _99 ])
        (nil)))
(insn 360 359 361 15 (set (reg:QI 187 [ _101 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19662 [0xffffffffffffb332])) [0 event_val_info.kwh.param_obis_code+0 S1 A16])) "test_lib.c":444 84 {*movqi_internal}
     (nil))
(insn 361 360 362 15 (set (reg:SI 188 [ _102 ])
        (zero_extend:SI (reg:QI 187 [ _101 ]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 187 [ _101 ])
        (nil)))
(insn 362 361 363 15 (parallel [
            (set (reg:DI 329)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":443 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 363 362 364 15 (parallel [
            (set (reg:DI 330)
                (plus:DI (reg:DI 329)
                    (const_int 392 [0x188])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":443 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 329)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 364 363 365 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 330)) "test_lib.c":443 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 330)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 365 364 366 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 178 [ _92 ])) "test_lib.c":443 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 178 [ _92 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 366 365 367 15 (set (reg:DF 21 xmm0)
        (reg:DF 176 [ _90 ])) "test_lib.c":443 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 176 [ _90 ])
        (nil)))
(insn 367 366 368 15 (set (reg:SI 38 r9)
        (reg:SI 180 [ _94 ])) "test_lib.c":443 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 180 [ _94 ])
        (nil)))
(insn 368 367 369 15 (set (reg:SI 37 r8)
        (reg:SI 182 [ _96 ])) "test_lib.c":443 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 182 [ _96 ])
        (nil)))
(insn 369 368 370 15 (set (reg:SI 2 cx)
        (reg:SI 184 [ _98 ])) "test_lib.c":443 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 184 [ _98 ])
        (nil)))
(insn 370 369 371 15 (set (reg:SI 1 dx)
        (reg:SI 186 [ _100 ])) "test_lib.c":443 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 186 [ _100 ])
        (nil)))
(insn 371 370 372 15 (set (reg:SI 4 si)
        (reg:SI 188 [ _102 ])) "test_lib.c":443 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 188 [ _102 ])
        (nil)))
(insn 372 371 373 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":443 81 {*movdi_internal}
     (nil))
(insn 373 372 374 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":443 84 {*movqi_internal}
     (nil))
(call_insn 374 373 375 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":443 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:SI 1 dx)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 375 374 376 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":443 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 376 375 377 15 (set (reg:SF 331)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":450 127 {*movsf_internal}
     (nil))
(insn 377 376 378 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 331)) "test_lib.c":450 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 331)
        (nil)))
(insn 378 377 379 15 (set (reg:SI 278 [ _247 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -19910 [0xffffffffffffb23a])) [0 MEM[(char * {ref-all})&event_val_info + 138B]+0 S4 A16])) "test_lib.c":451 82 {*movsi_internal}
     (nil))
(insn 379 378 380 15 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 278 [ _247 ])) "test_lib.c":451 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 278 [ _247 ])
        (nil)))
(insn 380 379 381 15 (set (reg:SF 189 [ p_flt_ptr.3_103 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":452 127 {*movsf_internal}
     (nil))
(insn 381 380 382 15 (set (reg:DF 190 [ _104 ])
        (float_extend:DF (reg:SF 189 [ p_flt_ptr.3_103 ]))) "test_lib.c":452 154 {*extendsfdf2}
     (expr_list:REG_DEAD (reg:SF 189 [ p_flt_ptr.3_103 ])
        (nil)))
(insn 382 381 383 15 (set (reg:QI 191 [ _105 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19927 [0xffffffffffffb229])) [0 event_val_info.cur_iy.param_obis_code+5 S1 A8])) "test_lib.c":455 84 {*movqi_internal}
     (nil))
(insn 383 382 384 15 (set (reg:SI 192 [ _106 ])
        (zero_extend:SI (reg:QI 191 [ _105 ]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 191 [ _105 ])
        (nil)))
(insn 384 383 385 15 (set (reg:QI 193 [ _107 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19928 [0xffffffffffffb228])) [0 event_val_info.cur_iy.param_obis_code+4 S1 A64])) "test_lib.c":455 84 {*movqi_internal}
     (nil))
(insn 385 384 386 15 (set (reg:SI 194 [ _108 ])
        (zero_extend:SI (reg:QI 193 [ _107 ]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 193 [ _107 ])
        (nil)))
(insn 386 385 387 15 (set (reg:QI 195 [ _109 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19929 [0xffffffffffffb227])) [0 event_val_info.cur_iy.param_obis_code+3 S1 A8])) "test_lib.c":454 84 {*movqi_internal}
     (nil))
(insn 387 386 388 15 (set (reg:SI 196 [ _110 ])
        (zero_extend:SI (reg:QI 195 [ _109 ]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 195 [ _109 ])
        (nil)))
(insn 388 387 389 15 (set (reg:QI 197 [ _111 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19930 [0xffffffffffffb226])) [0 event_val_info.cur_iy.param_obis_code+2 S1 A16])) "test_lib.c":454 84 {*movqi_internal}
     (nil))
(insn 389 388 390 15 (set (reg:SI 198 [ _112 ])
        (zero_extend:SI (reg:QI 197 [ _111 ]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 197 [ _111 ])
        (nil)))
(insn 390 389 391 15 (set (reg:QI 199 [ _113 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19931 [0xffffffffffffb225])) [0 event_val_info.cur_iy.param_obis_code+1 S1 A8])) "test_lib.c":453 84 {*movqi_internal}
     (nil))
(insn 391 390 392 15 (set (reg:SI 200 [ _114 ])
        (zero_extend:SI (reg:QI 199 [ _113 ]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 199 [ _113 ])
        (nil)))
(insn 392 391 393 15 (set (reg:QI 201 [ _115 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19932 [0xffffffffffffb224])) [0 event_val_info.cur_iy.param_obis_code+0 S1 A32])) "test_lib.c":453 84 {*movqi_internal}
     (nil))
(insn 393 392 394 15 (set (reg:SI 202 [ _116 ])
        (zero_extend:SI (reg:QI 201 [ _115 ]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 201 [ _115 ])
        (nil)))
(insn 394 393 395 15 (parallel [
            (set (reg:DI 332)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":452 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 395 394 396 15 (parallel [
            (set (reg:DI 333)
                (plus:DI (reg:DI 332)
                    (const_int 122 [0x7a])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":452 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 332)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 396 395 397 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 333)) "test_lib.c":452 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 333)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 397 396 398 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 192 [ _106 ])) "test_lib.c":452 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 192 [ _106 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 398 397 399 15 (set (reg:DF 21 xmm0)
        (reg:DF 190 [ _104 ])) "test_lib.c":452 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 190 [ _104 ])
        (nil)))
(insn 399 398 400 15 (set (reg:SI 38 r9)
        (reg:SI 194 [ _108 ])) "test_lib.c":452 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 194 [ _108 ])
        (nil)))
(insn 400 399 401 15 (set (reg:SI 37 r8)
        (reg:SI 196 [ _110 ])) "test_lib.c":452 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 196 [ _110 ])
        (nil)))
(insn 401 400 402 15 (set (reg:SI 2 cx)
        (reg:SI 198 [ _112 ])) "test_lib.c":452 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 198 [ _112 ])
        (nil)))
(insn 402 401 403 15 (set (reg:SI 1 dx)
        (reg:SI 200 [ _114 ])) "test_lib.c":452 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 200 [ _114 ])
        (nil)))
(insn 403 402 404 15 (set (reg:SI 4 si)
        (reg:SI 202 [ _116 ])) "test_lib.c":452 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 202 [ _116 ])
        (nil)))
(insn 404 403 405 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":452 81 {*movdi_internal}
     (nil))
(insn 405 404 406 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":452 84 {*movqi_internal}
     (nil))
(call_insn 406 405 407 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":452 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:SI 1 dx)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 407 406 408 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":452 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 408 407 409 15 (set (reg:SF 334)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":459 127 {*movsf_internal}
     (nil))
(insn 409 408 410 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 334)) "test_lib.c":459 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 334)
        (nil)))
(insn 410 409 411 15 (set (reg:SI 279 [ _251 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -19856 [0xffffffffffffb270])) [0 MEM[(char * {ref-all})&event_val_info + 192B]+0 S4 A64])) "test_lib.c":460 82 {*movsi_internal}
     (nil))
(insn 411 410 412 15 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 279 [ _251 ])) "test_lib.c":460 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 279 [ _251 ])
        (nil)))
(insn 412 411 413 15 (set (reg:SF 203 [ p_flt_ptr.4_117 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":461 127 {*movsf_internal}
     (nil))
(insn 413 412 414 15 (set (reg:DF 204 [ _118 ])
        (float_extend:DF (reg:SF 203 [ p_flt_ptr.4_117 ]))) "test_lib.c":461 154 {*extendsfdf2}
     (expr_list:REG_DEAD (reg:SF 203 [ p_flt_ptr.4_117 ])
        (nil)))
(insn 414 413 415 15 (set (reg:QI 205 [ _119 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19873 [0xffffffffffffb25f])) [0 event_val_info.cur_ib.param_obis_code+5 S1 A8])) "test_lib.c":464 84 {*movqi_internal}
     (nil))
(insn 415 414 416 15 (set (reg:SI 206 [ _120 ])
        (zero_extend:SI (reg:QI 205 [ _119 ]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 205 [ _119 ])
        (nil)))
(insn 416 415 417 15 (set (reg:QI 207 [ _121 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19874 [0xffffffffffffb25e])) [0 event_val_info.cur_ib.param_obis_code+4 S1 A16])) "test_lib.c":464 84 {*movqi_internal}
     (nil))
(insn 417 416 418 15 (set (reg:SI 208 [ _122 ])
        (zero_extend:SI (reg:QI 207 [ _121 ]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 207 [ _121 ])
        (nil)))
(insn 418 417 419 15 (set (reg:QI 209 [ _123 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19875 [0xffffffffffffb25d])) [0 event_val_info.cur_ib.param_obis_code+3 S1 A8])) "test_lib.c":463 84 {*movqi_internal}
     (nil))
(insn 419 418 420 15 (set (reg:SI 210 [ _124 ])
        (zero_extend:SI (reg:QI 209 [ _123 ]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 209 [ _123 ])
        (nil)))
(insn 420 419 421 15 (set (reg:QI 211 [ _125 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19876 [0xffffffffffffb25c])) [0 event_val_info.cur_ib.param_obis_code+2 S1 A32])) "test_lib.c":463 84 {*movqi_internal}
     (nil))
(insn 421 420 422 15 (set (reg:SI 212 [ _126 ])
        (zero_extend:SI (reg:QI 211 [ _125 ]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 211 [ _125 ])
        (nil)))
(insn 422 421 423 15 (set (reg:QI 213 [ _127 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19877 [0xffffffffffffb25b])) [0 event_val_info.cur_ib.param_obis_code+1 S1 A8])) "test_lib.c":462 84 {*movqi_internal}
     (nil))
(insn 423 422 424 15 (set (reg:SI 214 [ _128 ])
        (zero_extend:SI (reg:QI 213 [ _127 ]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 213 [ _127 ])
        (nil)))
(insn 424 423 425 15 (set (reg:QI 215 [ _129 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19878 [0xffffffffffffb25a])) [0 event_val_info.cur_ib.param_obis_code+0 S1 A16])) "test_lib.c":462 84 {*movqi_internal}
     (nil))
(insn 425 424 426 15 (set (reg:SI 216 [ _130 ])
        (zero_extend:SI (reg:QI 215 [ _129 ]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 215 [ _129 ])
        (nil)))
(insn 426 425 427 15 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":461 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 427 426 428 15 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg:DI 335)
                    (const_int 176 [0xb0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":461 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 335)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 428 427 429 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 336)) "test_lib.c":461 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 336)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 429 428 430 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 206 [ _120 ])) "test_lib.c":461 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 206 [ _120 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 430 429 431 15 (set (reg:DF 21 xmm0)
        (reg:DF 204 [ _118 ])) "test_lib.c":461 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 204 [ _118 ])
        (nil)))
(insn 431 430 432 15 (set (reg:SI 38 r9)
        (reg:SI 208 [ _122 ])) "test_lib.c":461 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 208 [ _122 ])
        (nil)))
(insn 432 431 433 15 (set (reg:SI 37 r8)
        (reg:SI 210 [ _124 ])) "test_lib.c":461 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 210 [ _124 ])
        (nil)))
(insn 433 432 434 15 (set (reg:SI 2 cx)
        (reg:SI 212 [ _126 ])) "test_lib.c":461 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 212 [ _126 ])
        (nil)))
(insn 434 433 435 15 (set (reg:SI 1 dx)
        (reg:SI 214 [ _128 ])) "test_lib.c":461 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 214 [ _128 ])
        (nil)))
(insn 435 434 436 15 (set (reg:SI 4 si)
        (reg:SI 216 [ _130 ])) "test_lib.c":461 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 216 [ _130 ])
        (nil)))
(insn 436 435 437 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":461 81 {*movdi_internal}
     (nil))
(insn 437 436 438 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":461 84 {*movqi_internal}
     (nil))
(call_insn 438 437 439 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":461 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:SI 1 dx)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 439 438 440 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":461 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 440 439 441 15 (set (reg:SF 337)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":468 127 {*movsf_internal}
     (nil))
(insn 441 440 442 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 337)) "test_lib.c":468 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 337)
        (nil)))
(insn 442 441 443 15 (set (reg:SI 280 [ _255 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -19910 [0xffffffffffffb23a])) [0 MEM[(char * {ref-all})&event_val_info + 138B]+0 S4 A16])) "test_lib.c":469 82 {*movsi_internal}
     (nil))
(insn 443 442 444 15 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 280 [ _255 ])) "test_lib.c":469 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 280 [ _255 ])
        (nil)))
(insn 444 443 445 15 (set (reg:SF 217 [ p_flt_ptr.5_131 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":470 127 {*movsf_internal}
     (nil))
(insn 445 444 446 15 (set (reg:DF 218 [ _132 ])
        (float_extend:DF (reg:SF 217 [ p_flt_ptr.5_131 ]))) "test_lib.c":470 154 {*extendsfdf2}
     (expr_list:REG_DEAD (reg:SF 217 [ p_flt_ptr.5_131 ])
        (nil)))
(insn 446 445 447 15 (set (reg:QI 219 [ _133 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19927 [0xffffffffffffb229])) [0 event_val_info.cur_iy.param_obis_code+5 S1 A8])) "test_lib.c":473 84 {*movqi_internal}
     (nil))
(insn 447 446 448 15 (set (reg:SI 220 [ _134 ])
        (zero_extend:SI (reg:QI 219 [ _133 ]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 219 [ _133 ])
        (nil)))
(insn 448 447 449 15 (set (reg:QI 221 [ _135 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19928 [0xffffffffffffb228])) [0 event_val_info.cur_iy.param_obis_code+4 S1 A64])) "test_lib.c":473 84 {*movqi_internal}
     (nil))
(insn 449 448 450 15 (set (reg:SI 222 [ _136 ])
        (zero_extend:SI (reg:QI 221 [ _135 ]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 221 [ _135 ])
        (nil)))
(insn 450 449 451 15 (set (reg:QI 223 [ _137 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19929 [0xffffffffffffb227])) [0 event_val_info.cur_iy.param_obis_code+3 S1 A8])) "test_lib.c":472 84 {*movqi_internal}
     (nil))
(insn 451 450 452 15 (set (reg:SI 224 [ _138 ])
        (zero_extend:SI (reg:QI 223 [ _137 ]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 223 [ _137 ])
        (nil)))
(insn 452 451 453 15 (set (reg:QI 225 [ _139 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19930 [0xffffffffffffb226])) [0 event_val_info.cur_iy.param_obis_code+2 S1 A16])) "test_lib.c":472 84 {*movqi_internal}
     (nil))
(insn 453 452 454 15 (set (reg:SI 226 [ _140 ])
        (zero_extend:SI (reg:QI 225 [ _139 ]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 225 [ _139 ])
        (nil)))
(insn 454 453 455 15 (set (reg:QI 227 [ _141 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19931 [0xffffffffffffb225])) [0 event_val_info.cur_iy.param_obis_code+1 S1 A8])) "test_lib.c":471 84 {*movqi_internal}
     (nil))
(insn 455 454 456 15 (set (reg:SI 228 [ _142 ])
        (zero_extend:SI (reg:QI 227 [ _141 ]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 227 [ _141 ])
        (nil)))
(insn 456 455 457 15 (set (reg:QI 229 [ _143 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19932 [0xffffffffffffb224])) [0 event_val_info.cur_iy.param_obis_code+0 S1 A32])) "test_lib.c":471 84 {*movqi_internal}
     (nil))
(insn 457 456 458 15 (set (reg:SI 230 [ _144 ])
        (zero_extend:SI (reg:QI 229 [ _143 ]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 229 [ _143 ])
        (nil)))
(insn 458 457 459 15 (parallel [
            (set (reg:DI 338)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":470 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 459 458 460 15 (parallel [
            (set (reg:DI 339)
                (plus:DI (reg:DI 338)
                    (const_int 122 [0x7a])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":470 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 338)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 460 459 461 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 339)) "test_lib.c":470 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 339)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 461 460 462 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 220 [ _134 ])) "test_lib.c":470 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 220 [ _134 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 462 461 463 15 (set (reg:DF 21 xmm0)
        (reg:DF 218 [ _132 ])) "test_lib.c":470 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 218 [ _132 ])
        (nil)))
(insn 463 462 464 15 (set (reg:SI 38 r9)
        (reg:SI 222 [ _136 ])) "test_lib.c":470 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 222 [ _136 ])
        (nil)))
(insn 464 463 465 15 (set (reg:SI 37 r8)
        (reg:SI 224 [ _138 ])) "test_lib.c":470 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 224 [ _138 ])
        (nil)))
(insn 465 464 466 15 (set (reg:SI 2 cx)
        (reg:SI 226 [ _140 ])) "test_lib.c":470 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 226 [ _140 ])
        (nil)))
(insn 466 465 467 15 (set (reg:SI 1 dx)
        (reg:SI 228 [ _142 ])) "test_lib.c":470 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 228 [ _142 ])
        (nil)))
(insn 467 466 468 15 (set (reg:SI 4 si)
        (reg:SI 230 [ _144 ])) "test_lib.c":470 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 230 [ _144 ])
        (nil)))
(insn 468 467 469 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":470 81 {*movdi_internal}
     (nil))
(insn 469 468 470 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":470 84 {*movqi_internal}
     (nil))
(call_insn 470 469 471 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":470 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:SI 1 dx)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 471 470 472 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":470 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 472 471 473 15 (set (reg:SF 340)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":477 127 {*movsf_internal}
     (nil))
(insn 473 472 474 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 340)) "test_lib.c":477 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 340)
        (nil)))
(insn 474 473 475 15 (set (reg:SI 281 [ _259 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -19802 [0xffffffffffffb2a6])) [0 MEM[(char * {ref-all})&event_val_info + 246B]+0 S4 A16])) "test_lib.c":478 82 {*movsi_internal}
     (nil))
(insn 475 474 476 15 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 281 [ _259 ])) "test_lib.c":478 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 281 [ _259 ])
        (nil)))
(insn 476 475 477 15 (set (reg:SF 231 [ p_flt_ptr.6_145 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":479 127 {*movsf_internal}
     (nil))
(insn 477 476 478 15 (set (reg:DF 232 [ _146 ])
        (float_extend:DF (reg:SF 231 [ p_flt_ptr.6_145 ]))) "test_lib.c":479 154 {*extendsfdf2}
     (expr_list:REG_DEAD (reg:SF 231 [ p_flt_ptr.6_145 ])
        (nil)))
(insn 478 477 479 15 (set (reg:QI 233 [ _147 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19819 [0xffffffffffffb295])) [0 event_val_info.volt_r.param_obis_code+5 S1 A8])) "test_lib.c":482 84 {*movqi_internal}
     (nil))
(insn 479 478 480 15 (set (reg:SI 234 [ _148 ])
        (zero_extend:SI (reg:QI 233 [ _147 ]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 233 [ _147 ])
        (nil)))
(insn 480 479 481 15 (set (reg:QI 235 [ _149 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19820 [0xffffffffffffb294])) [0 event_val_info.volt_r.param_obis_code+4 S1 A32])) "test_lib.c":482 84 {*movqi_internal}
     (nil))
(insn 481 480 482 15 (set (reg:SI 236 [ _150 ])
        (zero_extend:SI (reg:QI 235 [ _149 ]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 235 [ _149 ])
        (nil)))
(insn 482 481 483 15 (set (reg:QI 237 [ _151 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19821 [0xffffffffffffb293])) [0 event_val_info.volt_r.param_obis_code+3 S1 A8])) "test_lib.c":481 84 {*movqi_internal}
     (nil))
(insn 483 482 484 15 (set (reg:SI 238 [ _152 ])
        (zero_extend:SI (reg:QI 237 [ _151 ]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 237 [ _151 ])
        (nil)))
(insn 484 483 485 15 (set (reg:QI 239 [ _153 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19822 [0xffffffffffffb292])) [0 event_val_info.volt_r.param_obis_code+2 S1 A16])) "test_lib.c":481 84 {*movqi_internal}
     (nil))
(insn 485 484 486 15 (set (reg:SI 240 [ _154 ])
        (zero_extend:SI (reg:QI 239 [ _153 ]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 239 [ _153 ])
        (nil)))
(insn 486 485 487 15 (set (reg:QI 241 [ _155 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19823 [0xffffffffffffb291])) [0 event_val_info.volt_r.param_obis_code+1 S1 A8])) "test_lib.c":480 84 {*movqi_internal}
     (nil))
(insn 487 486 488 15 (set (reg:SI 242 [ _156 ])
        (zero_extend:SI (reg:QI 241 [ _155 ]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 241 [ _155 ])
        (nil)))
(insn 488 487 489 15 (set (reg:QI 243 [ _157 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19824 [0xffffffffffffb290])) [0 event_val_info.volt_r.param_obis_code+0 S1 A64])) "test_lib.c":480 84 {*movqi_internal}
     (nil))
(insn 489 488 490 15 (set (reg:SI 244 [ _158 ])
        (zero_extend:SI (reg:QI 243 [ _157 ]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 243 [ _157 ])
        (nil)))
(insn 490 489 491 15 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":479 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 491 490 492 15 (parallel [
            (set (reg:DI 342)
                (plus:DI (reg:DI 341)
                    (const_int 230 [0xe6])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":479 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 341)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 492 491 493 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 342)) "test_lib.c":479 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 342)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 493 492 494 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 234 [ _148 ])) "test_lib.c":479 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 234 [ _148 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 494 493 495 15 (set (reg:DF 21 xmm0)
        (reg:DF 232 [ _146 ])) "test_lib.c":479 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 232 [ _146 ])
        (nil)))
(insn 495 494 496 15 (set (reg:SI 38 r9)
        (reg:SI 236 [ _150 ])) "test_lib.c":479 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 236 [ _150 ])
        (nil)))
(insn 496 495 497 15 (set (reg:SI 37 r8)
        (reg:SI 238 [ _152 ])) "test_lib.c":479 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 238 [ _152 ])
        (nil)))
(insn 497 496 498 15 (set (reg:SI 2 cx)
        (reg:SI 240 [ _154 ])) "test_lib.c":479 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 240 [ _154 ])
        (nil)))
(insn 498 497 499 15 (set (reg:SI 1 dx)
        (reg:SI 242 [ _156 ])) "test_lib.c":479 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 242 [ _156 ])
        (nil)))
(insn 499 498 500 15 (set (reg:SI 4 si)
        (reg:SI 244 [ _158 ])) "test_lib.c":479 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 244 [ _158 ])
        (nil)))
(insn 500 499 501 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":479 81 {*movdi_internal}
     (nil))
(insn 501 500 502 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":479 84 {*movqi_internal}
     (nil))
(call_insn 502 501 503 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":479 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:SI 1 dx)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 503 502 504 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":479 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 504 503 505 15 (set (reg:SF 343)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":487 127 {*movsf_internal}
     (nil))
(insn 505 504 506 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 343)) "test_lib.c":487 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 343)
        (nil)))
(insn 506 505 507 15 (set (reg:SI 282 [ _263 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -19694 [0xffffffffffffb312])) [0 MEM[(char * {ref-all})&event_val_info + 354B]+0 S4 A16])) "test_lib.c":488 82 {*movsi_internal}
     (nil))
(insn 507 506 508 15 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 282 [ _263 ])) "test_lib.c":488 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 282 [ _263 ])
        (nil)))
(insn 508 507 509 15 (set (reg:SF 245 [ p_flt_ptr.7_159 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":489 127 {*movsf_internal}
     (nil))
(insn 509 508 510 15 (set (reg:DF 246 [ _160 ])
        (float_extend:DF (reg:SF 245 [ p_flt_ptr.7_159 ]))) "test_lib.c":489 154 {*extendsfdf2}
     (expr_list:REG_DEAD (reg:SF 245 [ p_flt_ptr.7_159 ])
        (nil)))
(insn 510 509 511 15 (set (reg:QI 247 [ _161 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19711 [0xffffffffffffb301])) [0 event_val_info.volt_b.param_obis_code+5 S1 A8])) "test_lib.c":492 84 {*movqi_internal}
     (nil))
(insn 511 510 512 15 (set (reg:SI 248 [ _162 ])
        (zero_extend:SI (reg:QI 247 [ _161 ]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 247 [ _161 ])
        (nil)))
(insn 512 511 513 15 (set (reg:QI 249 [ _163 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19712 [0xffffffffffffb300])) [0 event_val_info.volt_b.param_obis_code+4 S1 A64])) "test_lib.c":492 84 {*movqi_internal}
     (nil))
(insn 513 512 514 15 (set (reg:SI 250 [ _164 ])
        (zero_extend:SI (reg:QI 249 [ _163 ]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 249 [ _163 ])
        (nil)))
(insn 514 513 515 15 (set (reg:QI 251 [ _165 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19713 [0xffffffffffffb2ff])) [0 event_val_info.volt_b.param_obis_code+3 S1 A8])) "test_lib.c":491 84 {*movqi_internal}
     (nil))
(insn 515 514 516 15 (set (reg:SI 252 [ _166 ])
        (zero_extend:SI (reg:QI 251 [ _165 ]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 251 [ _165 ])
        (nil)))
(insn 516 515 517 15 (set (reg:QI 253 [ _167 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19714 [0xffffffffffffb2fe])) [0 event_val_info.volt_b.param_obis_code+2 S1 A16])) "test_lib.c":491 84 {*movqi_internal}
     (nil))
(insn 517 516 518 15 (set (reg:SI 254 [ _168 ])
        (zero_extend:SI (reg:QI 253 [ _167 ]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 253 [ _167 ])
        (nil)))
(insn 518 517 519 15 (set (reg:QI 255 [ _169 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19715 [0xffffffffffffb2fd])) [0 event_val_info.volt_b.param_obis_code+1 S1 A8])) "test_lib.c":490 84 {*movqi_internal}
     (nil))
(insn 519 518 520 15 (set (reg:SI 256 [ _170 ])
        (zero_extend:SI (reg:QI 255 [ _169 ]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 255 [ _169 ])
        (nil)))
(insn 520 519 521 15 (set (reg:QI 257 [ _171 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19716 [0xffffffffffffb2fc])) [0 event_val_info.volt_b.param_obis_code+0 S1 A32])) "test_lib.c":490 84 {*movqi_internal}
     (nil))
(insn 521 520 522 15 (set (reg:SI 258 [ _172 ])
        (zero_extend:SI (reg:QI 257 [ _171 ]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 257 [ _171 ])
        (nil)))
(insn 522 521 523 15 (parallel [
            (set (reg:DI 344)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":489 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 523 522 524 15 (parallel [
            (set (reg:DI 345)
                (plus:DI (reg:DI 344)
                    (const_int 338 [0x152])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":489 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 344)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 524 523 525 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 345)) "test_lib.c":489 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 345)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 525 524 526 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 248 [ _162 ])) "test_lib.c":489 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 248 [ _162 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 526 525 527 15 (set (reg:DF 21 xmm0)
        (reg:DF 246 [ _160 ])) "test_lib.c":489 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 246 [ _160 ])
        (nil)))
(insn 527 526 528 15 (set (reg:SI 38 r9)
        (reg:SI 250 [ _164 ])) "test_lib.c":489 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 250 [ _164 ])
        (nil)))
(insn 528 527 529 15 (set (reg:SI 37 r8)
        (reg:SI 252 [ _166 ])) "test_lib.c":489 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 252 [ _166 ])
        (nil)))
(insn 529 528 530 15 (set (reg:SI 2 cx)
        (reg:SI 254 [ _168 ])) "test_lib.c":489 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 254 [ _168 ])
        (nil)))
(insn 530 529 531 15 (set (reg:SI 1 dx)
        (reg:SI 256 [ _170 ])) "test_lib.c":489 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 256 [ _170 ])
        (nil)))
(insn 531 530 532 15 (set (reg:SI 4 si)
        (reg:SI 258 [ _172 ])) "test_lib.c":489 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 258 [ _172 ])
        (nil)))
(insn 532 531 533 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":489 81 {*movdi_internal}
     (nil))
(insn 533 532 534 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":489 84 {*movqi_internal}
     (nil))
(call_insn 534 533 535 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":489 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:SI 1 dx)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 535 534 536 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":489 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 536 535 537 15 (set (reg:SF 346)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":496 127 {*movsf_internal}
     (nil))
(insn 537 536 538 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 346)) "test_lib.c":496 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 346)
        (nil)))
(insn 538 537 539 15 (set (reg:SI 283 [ _267 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -19748 [0xffffffffffffb2dc])) [0 MEM[(char * {ref-all})&event_val_info + 300B]+0 S4 A32])) "test_lib.c":497 82 {*movsi_internal}
     (nil))
(insn 539 538 540 15 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 283 [ _267 ])) "test_lib.c":497 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 283 [ _267 ])
        (nil)))
(insn 540 539 541 15 (set (reg:SF 259 [ p_flt_ptr.8_173 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":498 127 {*movsf_internal}
     (nil))
(insn 541 540 542 15 (set (reg:DF 260 [ _174 ])
        (float_extend:DF (reg:SF 259 [ p_flt_ptr.8_173 ]))) "test_lib.c":498 154 {*extendsfdf2}
     (expr_list:REG_DEAD (reg:SF 259 [ p_flt_ptr.8_173 ])
        (nil)))
(insn 542 541 543 15 (set (reg:QI 261 [ _175 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19765 [0xffffffffffffb2cb])) [0 event_val_info.volt_y.param_obis_code+5 S1 A8])) "test_lib.c":501 84 {*movqi_internal}
     (nil))
(insn 543 542 544 15 (set (reg:SI 262 [ _176 ])
        (zero_extend:SI (reg:QI 261 [ _175 ]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 261 [ _175 ])
        (nil)))
(insn 544 543 545 15 (set (reg:QI 263 [ _177 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19766 [0xffffffffffffb2ca])) [0 event_val_info.volt_y.param_obis_code+4 S1 A16])) "test_lib.c":501 84 {*movqi_internal}
     (nil))
(insn 545 544 546 15 (set (reg:SI 264 [ _178 ])
        (zero_extend:SI (reg:QI 263 [ _177 ]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 263 [ _177 ])
        (nil)))
(insn 546 545 547 15 (set (reg:QI 265 [ _179 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19767 [0xffffffffffffb2c9])) [0 event_val_info.volt_y.param_obis_code+3 S1 A8])) "test_lib.c":500 84 {*movqi_internal}
     (nil))
(insn 547 546 548 15 (set (reg:SI 266 [ _180 ])
        (zero_extend:SI (reg:QI 265 [ _179 ]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 265 [ _179 ])
        (nil)))
(insn 548 547 549 15 (set (reg:QI 267 [ _181 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19768 [0xffffffffffffb2c8])) [0 event_val_info.volt_y.param_obis_code+2 S1 A64])) "test_lib.c":500 84 {*movqi_internal}
     (nil))
(insn 549 548 550 15 (set (reg:SI 268 [ _182 ])
        (zero_extend:SI (reg:QI 267 [ _181 ]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 267 [ _181 ])
        (nil)))
(insn 550 549 551 15 (set (reg:QI 269 [ _183 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19769 [0xffffffffffffb2c7])) [0 event_val_info.volt_y.param_obis_code+1 S1 A8])) "test_lib.c":499 84 {*movqi_internal}
     (nil))
(insn 551 550 552 15 (set (reg:SI 270 [ _184 ])
        (zero_extend:SI (reg:QI 269 [ _183 ]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 269 [ _183 ])
        (nil)))
(insn 552 551 553 15 (set (reg:QI 271 [ _185 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19770 [0xffffffffffffb2c6])) [0 event_val_info.volt_y.param_obis_code+0 S1 A16])) "test_lib.c":499 84 {*movqi_internal}
     (nil))
(insn 553 552 554 15 (set (reg:SI 272 [ _186 ])
        (zero_extend:SI (reg:QI 271 [ _185 ]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 271 [ _185 ])
        (nil)))
(insn 554 553 555 15 (parallel [
            (set (reg:DI 347)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":498 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 555 554 556 15 (parallel [
            (set (reg:DI 348)
                (plus:DI (reg:DI 347)
                    (const_int 284 [0x11c])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":498 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 347)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 556 555 557 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 348)) "test_lib.c":498 57 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 348)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 557 556 558 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 262 [ _176 ])) "test_lib.c":498 61 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 262 [ _176 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 558 557 559 15 (set (reg:DF 21 xmm0)
        (reg:DF 260 [ _174 ])) "test_lib.c":498 126 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 260 [ _174 ])
        (nil)))
(insn 559 558 560 15 (set (reg:SI 38 r9)
        (reg:SI 264 [ _178 ])) "test_lib.c":498 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 264 [ _178 ])
        (nil)))
(insn 560 559 561 15 (set (reg:SI 37 r8)
        (reg:SI 266 [ _180 ])) "test_lib.c":498 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 266 [ _180 ])
        (nil)))
(insn 561 560 562 15 (set (reg:SI 2 cx)
        (reg:SI 268 [ _182 ])) "test_lib.c":498 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 268 [ _182 ])
        (nil)))
(insn 562 561 563 15 (set (reg:SI 1 dx)
        (reg:SI 270 [ _184 ])) "test_lib.c":498 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 270 [ _184 ])
        (nil)))
(insn 563 562 564 15 (set (reg:SI 4 si)
        (reg:SI 272 [ _186 ])) "test_lib.c":498 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 272 [ _186 ])
        (nil)))
(insn 564 563 565 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":498 81 {*movdi_internal}
     (nil))
(insn 565 564 566 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":498 84 {*movqi_internal}
     (nil))
(call_insn 566 565 567 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":498 676 {*call_value}
     (expr_list:REG_DEAD (reg:SI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (expr_list:REG_DEAD (reg:SI 2 cx)
                            (expr_list:REG_DEAD (reg:SI 1 dx)
                                (expr_list:REG_UNUSED (reg:SI 0 ax)
                                    (nil)))))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 567 566 568 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":498 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 273 349
(code_label 568 567 569 16 10 (nil) [1 uses])
(note 569 568 570 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 16 (set (reg:QI 273 [ event_class_type.9_187 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])) "test_lib.c":427 84 {*movqi_internal}
     (nil))
(insn 571 570 572 16 (parallel [
            (set (reg:QI 349)
                (plus:QI (reg:QI 273 [ event_class_type.9_187 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":427 221 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 273 [ event_class_type.9_187 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 572 571 573 16 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])
        (reg:QI 349)) "test_lib.c":427 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 349)
        (nil)))
;;  succ:       17 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU,DFS_BACK)
;;              13 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 573 572 574 17 9 (nil) [1 uses])
(note 574 573 576 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 576 574 577 17 (set (reg:CC 17 flags)
        (compare:CC (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])
            (const_int 6 [0x6]))) "test_lib.c":427 5 {*cmpqi_1}
     (nil))
(jump_insn 577 576 578 17 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 575)
            (pc))) "test_lib.c":427 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 575)
;;  succ:       14
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274 350 351
(note 578 577 579 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 579 578 580 18 (parallel [
            (set (reg:DI 350)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":512 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 580 579 581 18 (set (reg:DI 5 di)
        (reg:DI 350)) "test_lib.c":512 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 350)
        (nil)))
(call_insn 581 580 582 18 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_billing_info") [flags 0x41]  <function_decl 0x7f33f76ea900 get_billing_info>) [0 get_billing_info S1 A8])
            (const_int 0 [0]))) "test_lib.c":512 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:QI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 582 581 583 18 (parallel [
            (set (reg:DI 351)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":517 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 583 582 584 18 (set (reg:DI 5 di)
        (reg:DI 351)) "test_lib.c":517 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 351)
        (nil)))
(call_insn 584 583 585 18 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("disconnect_meter") [flags 0x41]  <function_decl 0x7f33f76c9f00 disconnect_meter>) [0 disconnect_meter S1 A8])
            (const_int 0 [0]))) "test_lib.c":517 676 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:QI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 585 584 588 18 (set (reg:SI 274 [ _189 ])
        (const_int 0 [0])) "test_lib.c":519 82 {*movsi_internal}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 (FALLTHRU)
;;              10 [100.0%] 
;;              6 [100.0%] 
;;              8 [100.0%] 
;;              12 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274
;; lr  def 	 0 [ax] 17 [flags] 284
(code_label 588 585 589 19 12 (nil) [4 uses])
(note 589 588 590 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 590 589 594 19 (set (reg:SI 284 [ <retval> ])
        (reg:SI 274 [ _189 ])) 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 274 [ _189 ])
        (nil)))
(insn 594 590 595 19 (set (reg/i:SI 0 ax)
        (reg:SI 284 [ <retval> ])) "test_lib.c":520 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 284 [ <retval> ])
        (nil)))
(insn 595 594 596 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.6164+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "test_lib.c":520 1016 {stack_tls_protect_test_di}
     (nil))
(jump_insn 596 595 602 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 599)
            (pc))) "test_lib.c":520 627 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 599)
;;  succ:       21
;;              20 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 602 596 597 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 597 602 598 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f33f7738900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "test_lib.c":520 665 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 598 597 599)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 1, flags: (RTL)
;;  pred:       19
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 599 598 603 21 13 (nil) [1 uses])
(note 603 599 600 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 600 603 0 21 (use (reg/i:SI 0 ax)) "test_lib.c":520 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

