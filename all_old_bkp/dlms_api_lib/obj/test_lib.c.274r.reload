
;; Function main (main, funcdef_no=5, decl_uid=6116, cgraph_uid=5, symbol_order=5)

      Creating newreg=353
Removing SCRATCH in insn #3 (nop 2)
rescanning insn with uid = 3.
      Creating newreg=354
Removing SCRATCH in insn #595 (nop 3)
rescanning insn with uid = 595.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=20512, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=20496, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r353
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 6:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 7:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) m  (1) rn {*movhi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 10:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=17,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            alt=21: Bad operand -- refuse
            alt=22: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=23,overall=10,losers=1 -- refuse
            alt=24: Bad operand -- refuse
	 Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
      Creating newreg=355, assigning class GENERAL_REGS to r355
   11: r355:DI=0x7974742f7665642f
    Inserting insn reload after:
  617: [r286:DI]=r355:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 617:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 14:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 16:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 17:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 18:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 19:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 20:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 21:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 22:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 23:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) qm  (1) qn {*cmpqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 35:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 38:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 39:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 42:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 46:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 49:  (0) m  (1) qn {*movqi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 50:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 57:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 64:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 66:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 73:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 80:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 81:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 89:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 96:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (1) rBwBz {*call_value}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 98:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 100:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 102:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 104:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 106:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 108:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 110:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 111:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 112:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 114:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 115:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-24)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 123:  (0) r  (1) i {*movdi_internal} (sp_off=-32)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) q  (1) qn {*movqi_internal} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (1) rBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 126:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-32)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 127:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 129:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 131:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 133:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 135:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 137:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 139:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 140:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 141:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 143:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 144:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-24)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 152:  (0) r  (1) i {*movdi_internal} (sp_off=-32)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) q  (1) qn {*movqi_internal} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (1) rBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 155:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-32)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 156:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 158:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 160:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 162:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 164:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 166:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 168:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 169:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 170:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 172:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 173:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-24)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 181:  (0) r  (1) i {*movdi_internal} (sp_off=-32)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 182:  (0) q  (1) qn {*movqi_internal} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (1) rBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 184:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-32)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 185:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) qm {extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 187:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 189:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 191:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 193:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 195:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 197:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 199:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 201:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 202:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-24)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 210:  (0) r  (1) i {*movdi_internal} (sp_off=-32)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 211:  (0) q  (1) qn {*movqi_internal} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (1) rBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 213:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 215:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 216:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 217:  (0) v  (1) vm {*extendsfdf2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 218:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 220:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 222:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 224:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 226:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 228:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 230:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 231:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 240:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 241:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (1) rBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 243:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 244:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 245:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 247:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 248:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 249:  (0) v  (1) vm {*extendsfdf2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 250:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 252:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 254:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 256:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 258:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 260:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 262:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 263:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 264:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 265:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 272:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 273:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (1) rBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 275:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 276:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 278:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 279:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 280:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 281:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 282:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 283:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 290:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 295:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 296:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 303:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 304:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 307:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 308:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 309:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (0) =r  (1) qm {*zero_extendqisi2}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 315:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 316:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 319:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) q {*cmpqi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 327:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 328:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 329:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
            4 Small class reload: reject+=3
          alt=0,overall=38,losers=4,rld_nregs=4
	 Choosing alt 0 in insn 330:  (0) =D  (1) =S  (2) =c  (3) 0  (4) 1  (5) 2 {*rep_movdi_rex64}
      Creating newreg=356 from oldreg=323, assigning class DIREG to r356
      Creating newreg=357 from oldreg=324, assigning class SIREG to r357
  330: {r325:DI=0;r356:DI=r325:DI<<0x3+r356:DI;r357:DI=r325:DI<<0x3+r357:DI;[r356:DI]=[r357:DI];use r325:DI;}
      REG_UNUSED r325:DI
    Inserting insn reload before:
  618: r356:DI=r323:DI
  620: r357:DI=r324:DI
    Inserting insn reload after:
  621: r324:DI=r357:DI
  619: r323:DI=r356:DI

            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 331:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 332:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =r  (1) Ts {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =r  (1) Ts {*leadi}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 335:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 336:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =r  (1) qm {*zero_extendqisi2}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 339:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 340:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 341:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 342:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 344:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 345:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 347:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 348:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 349:  (0) v  (1) vm {*extendsfdf2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 350:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 352:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 354:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 356:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 358:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 360:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 361:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 362:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 363:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 364:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 372:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 373:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (1) rBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 375:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 376:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 377:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 379:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 380:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 381:  (0) v  (1) vm {*extendsfdf2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 382:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 383:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 384:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 386:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 388:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 390:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 392:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 393:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 394:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 395:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 397:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 404:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 405:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (1) rBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 407:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 408:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 409:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 411:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 412:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 413:  (0) v  (1) vm {*extendsfdf2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 414:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 416:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 418:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 420:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 422:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 424:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 426:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 427:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 429:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 436:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 437:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (1) rBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 439:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 440:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 441:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 443:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 444:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 445:  (0) v  (1) vm {*extendsfdf2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 446:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 448:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 449:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 450:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 451:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 452:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 454:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 455:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 456:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 458:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 459:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 468:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 469:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 470:  (1) rBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 471:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 472:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 473:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 475:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 476:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 477:  (0) v  (1) vm {*extendsfdf2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 478:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 480:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 482:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 483:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 484:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 485:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 486:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 488:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 489:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 490:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 491:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 500:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 501:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (1) rBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 503:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 504:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 505:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 507:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 508:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 509:  (0) v  (1) vm {*extendsfdf2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 510:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 511:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 512:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 514:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 516:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 517:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 518:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 520:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 521:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 522:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 523:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 524:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 525:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 532:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 533:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 534:  (1) rBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 535:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 536:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 537:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 538:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 539:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 540:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 541:  (0) v  (1) vm {*extendsfdf2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 542:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 543:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 544:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 545:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 546:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 547:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 548:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 550:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 551:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 552:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 554:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 555:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 557:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 564:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 565:  (0) q  (1) qn {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 566:  (1) rBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 567:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 570:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 571:  (0) =qm  (1) %0  (2) qn {*addqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=615,losers=1,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 572:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 576:  (0) qm  (1) qn {*cmpqi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 579:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 581:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 582:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 584:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) =r  (1) g {*movsi_internal}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r354
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 597:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21

********** Pseudo live ranges #1: **********

  BB 20
   Insn 597: point = 0, n_alt = 0
  BB 21
   Insn 600: point = 0, n_alt = -1
  BB 19
   Insn 596: point = 0, n_alt = -1
   Insn 595: point = 0, n_alt = 0
   Insn 594: point = 1, n_alt = -2
   Insn 590: point = 2, n_alt = -2
  BB 12
   Insn 612: point = 5, n_alt = -1
   Insn 298: point = 5, n_alt = 0
   Insn 297: point = 6, n_alt = 0
   Insn 296: point = 6, n_alt = 1
   Insn 295: point = 6, n_alt = 4
  BB 8
   Insn 608: point = 6, n_alt = -1
   Insn 75: point = 6, n_alt = 0
   Insn 74: point = 7, n_alt = 0
   Insn 73: point = 7, n_alt = 4
  BB 6
   Insn 606: point = 7, n_alt = -1
   Insn 59: point = 7, n_alt = 0
   Insn 58: point = 8, n_alt = 0
   Insn 57: point = 8, n_alt = 4
  BB 10
   Insn 610: point = 8, n_alt = -1
   Insn 91: point = 8, n_alt = 0
   Insn 90: point = 9, n_alt = 0
   Insn 89: point = 9, n_alt = 4
  BB 18
   Insn 585: point = 9, n_alt = 0
   Insn 584: point = 10, n_alt = 0
   Insn 583: point = 10, n_alt = -2
   Insn 582: point = 11, n_alt = 3
   Insn 581: point = 12, n_alt = 0
   Insn 580: point = 12, n_alt = -2
   Insn 579: point = 13, n_alt = 3
  BB 17
   Insn 577: point = 14, n_alt = -1
   Insn 576: point = 14, n_alt = 0
  BB 13
   Insn 614: point = 14, n_alt = -1
   Insn 309: point = 14, n_alt = 6
   Insn 308: point = 14, n_alt = 6
   Insn 307: point = 14, n_alt = 0
   Insn 306: point = 14, n_alt = -2
   Insn 305: point = 15, n_alt = 0
   Insn 304: point = 15, n_alt = 2
   Insn 303: point = 15, n_alt = 3
  BB 11
   Insn 293: point = 16, n_alt = -1
   Insn 292: point = 16, n_alt = 0
   Insn 291: point = 17, n_alt = -2
   Insn 290: point = 18, n_alt = 0
   Insn 289: point = 18, n_alt = -2
   Insn 288: point = 19, n_alt = -2
   Insn 287: point = 20, n_alt = -2
   Insn 286: point = 21, n_alt = -2
   Insn 285: point = 22, n_alt = -2
   Insn 284: point = 23, n_alt = -2
   Insn 283: point = 24, n_alt = 3
   Insn 282: point = 25, n_alt = 3
   Insn 281: point = 26, n_alt = 3
   Insn 280: point = 27, n_alt = 3
   Insn 279: point = 28, n_alt = 3
   Insn 278: point = 29, n_alt = 3
   Insn 277: point = 30, n_alt = 0
   Insn 276: point = 30, n_alt = 4
   Insn 275: point = 30, n_alt = 0
   Insn 274: point = 30, n_alt = 0
   Insn 273: point = 30, n_alt = 1
   Insn 272: point = 30, n_alt = 4
   Insn 271: point = 30, n_alt = -2
   Insn 270: point = 31, n_alt = -2
   Insn 269: point = 32, n_alt = -2
   Insn 268: point = 33, n_alt = -2
   Insn 267: point = 34, n_alt = -2
   Insn 266: point = 35, n_alt = -2
   Insn 265: point = 36, n_alt = 0
   Insn 264: point = 37, n_alt = 0
   Insn 263: point = 38, n_alt = 0
   Insn 262: point = 40, n_alt = 3
   Insn 261: point = 41, n_alt = 0
   Insn 260: point = 43, n_alt = 2
   Insn 259: point = 44, n_alt = 0
   Insn 258: point = 46, n_alt = 2
   Insn 257: point = 47, n_alt = 0
   Insn 256: point = 49, n_alt = 2
   Insn 255: point = 50, n_alt = 0
   Insn 254: point = 52, n_alt = 2
   Insn 253: point = 53, n_alt = 0
   Insn 252: point = 55, n_alt = 2
   Insn 251: point = 56, n_alt = 0
   Insn 250: point = 58, n_alt = 2
   Insn 249: point = 59, n_alt = 2
   Insn 248: point = 61, n_alt = 7
   Insn 247: point = 62, n_alt = 1
   Insn 246: point = 63, n_alt = 0
   Insn 245: point = 64, n_alt = 8
   Insn 244: point = 65, n_alt = 7
   Insn 243: point = 66, n_alt = 0
   Insn 242: point = 66, n_alt = 0
   Insn 241: point = 66, n_alt = 1
   Insn 240: point = 66, n_alt = 4
   Insn 239: point = 66, n_alt = -2
   Insn 238: point = 67, n_alt = -2
   Insn 237: point = 68, n_alt = -2
   Insn 236: point = 69, n_alt = -2
   Insn 235: point = 70, n_alt = -2
   Insn 234: point = 71, n_alt = -2
   Insn 233: point = 72, n_alt = 0
   Insn 232: point = 73, n_alt = 0
   Insn 231: point = 74, n_alt = 0
   Insn 230: point = 76, n_alt = 3
   Insn 229: point = 77, n_alt = 0
   Insn 228: point = 79, n_alt = 2
   Insn 227: point = 80, n_alt = 0
   Insn 226: point = 82, n_alt = 2
   Insn 225: point = 83, n_alt = 0
   Insn 224: point = 85, n_alt = 2
   Insn 223: point = 86, n_alt = 0
   Insn 222: point = 88, n_alt = 2
   Insn 221: point = 89, n_alt = 0
   Insn 220: point = 91, n_alt = 2
   Insn 219: point = 92, n_alt = 0
   Insn 218: point = 94, n_alt = 2
   Insn 217: point = 95, n_alt = 2
   Insn 216: point = 97, n_alt = 7
   Insn 215: point = 98, n_alt = 1
   Insn 214: point = 99, n_alt = 0
   Insn 213: point = 100, n_alt = 0
   Insn 212: point = 100, n_alt = 0
   Insn 211: point = 100, n_alt = 1
   Insn 210: point = 100, n_alt = 4
   Insn 209: point = 100, n_alt = -2
   Insn 208: point = 101, n_alt = -2
   Insn 207: point = 102, n_alt = -2
   Insn 206: point = 103, n_alt = -2
   Insn 205: point = 104, n_alt = -2
   Insn 204: point = 105, n_alt = 0
   Insn 203: point = 106, n_alt = 0
   Insn 202: point = 107, n_alt = 0
   Insn 201: point = 109, n_alt = 3
   Insn 200: point = 110, n_alt = 0
   Insn 199: point = 111, n_alt = 0
   Insn 198: point = 111, n_alt = 0
   Insn 197: point = 113, n_alt = 2
   Insn 196: point = 114, n_alt = 0
   Insn 195: point = 116, n_alt = 2
   Insn 194: point = 117, n_alt = 0
   Insn 193: point = 119, n_alt = 2
   Insn 192: point = 120, n_alt = 0
   Insn 191: point = 122, n_alt = 2
   Insn 190: point = 123, n_alt = 0
   Insn 189: point = 125, n_alt = 2
   Insn 188: point = 126, n_alt = 0
   Insn 187: point = 128, n_alt = 2
   Insn 186: point = 129, n_alt = 0
   Insn 185: point = 131, n_alt = 2
   Insn 184: point = 132, n_alt = 0
   Insn 183: point = 132, n_alt = 0
   Insn 182: point = 132, n_alt = 1
   Insn 181: point = 132, n_alt = 4
   Insn 180: point = 132, n_alt = -2
   Insn 179: point = 133, n_alt = -2
   Insn 178: point = 134, n_alt = -2
   Insn 177: point = 135, n_alt = -2
   Insn 176: point = 136, n_alt = -2
   Insn 175: point = 137, n_alt = 0
   Insn 174: point = 138, n_alt = 0
   Insn 173: point = 139, n_alt = 0
   Insn 172: point = 141, n_alt = 3
   Insn 171: point = 142, n_alt = 0
   Insn 170: point = 143, n_alt = 0
   Insn 169: point = 145, n_alt = 3
   Insn 168: point = 146, n_alt = 0
   Insn 167: point = 146, n_alt = 0
   Insn 166: point = 148, n_alt = 2
   Insn 165: point = 149, n_alt = 0
   Insn 164: point = 151, n_alt = 2
   Insn 163: point = 152, n_alt = 0
   Insn 162: point = 154, n_alt = 2
   Insn 161: point = 155, n_alt = 0
   Insn 160: point = 157, n_alt = 2
   Insn 159: point = 158, n_alt = 0
   Insn 158: point = 160, n_alt = 2
   Insn 157: point = 161, n_alt = 0
   Insn 156: point = 163, n_alt = 2
   Insn 155: point = 164, n_alt = 0
   Insn 154: point = 164, n_alt = 0
   Insn 153: point = 164, n_alt = 1
   Insn 152: point = 164, n_alt = 4
   Insn 151: point = 164, n_alt = -2
   Insn 150: point = 165, n_alt = -2
   Insn 149: point = 166, n_alt = -2
   Insn 148: point = 167, n_alt = -2
   Insn 147: point = 168, n_alt = -2
   Insn 146: point = 169, n_alt = 0
   Insn 145: point = 170, n_alt = 0
   Insn 144: point = 171, n_alt = 0
   Insn 143: point = 173, n_alt = 3
   Insn 142: point = 174, n_alt = 0
   Insn 141: point = 175, n_alt = 0
   Insn 140: point = 177, n_alt = 3
   Insn 139: point = 178, n_alt = 0
   Insn 138: point = 178, n_alt = 0
   Insn 137: point = 180, n_alt = 2
   Insn 136: point = 181, n_alt = 0
   Insn 135: point = 183, n_alt = 2
   Insn 134: point = 184, n_alt = 0
   Insn 133: point = 186, n_alt = 2
   Insn 132: point = 187, n_alt = 0
   Insn 131: point = 189, n_alt = 2
   Insn 130: point = 190, n_alt = 0
   Insn 129: point = 192, n_alt = 2
   Insn 128: point = 193, n_alt = 0
   Insn 127: point = 195, n_alt = 2
   Insn 126: point = 196, n_alt = 0
   Insn 125: point = 196, n_alt = 0
   Insn 124: point = 196, n_alt = 1
   Insn 123: point = 196, n_alt = 4
   Insn 122: point = 196, n_alt = -2
   Insn 121: point = 197, n_alt = -2
   Insn 120: point = 198, n_alt = -2
   Insn 119: point = 199, n_alt = -2
   Insn 118: point = 200, n_alt = -2
   Insn 117: point = 201, n_alt = 0
   Insn 116: point = 202, n_alt = 0
   Insn 115: point = 203, n_alt = 0
   Insn 114: point = 205, n_alt = 3
   Insn 113: point = 206, n_alt = 0
   Insn 112: point = 207, n_alt = 0
   Insn 111: point = 209, n_alt = 3
   Insn 110: point = 210, n_alt = 0
   Insn 109: point = 210, n_alt = 0
   Insn 108: point = 212, n_alt = 2
   Insn 107: point = 213, n_alt = 0
   Insn 106: point = 215, n_alt = 2
   Insn 105: point = 216, n_alt = 0
   Insn 104: point = 218, n_alt = 2
   Insn 103: point = 219, n_alt = 0
   Insn 102: point = 221, n_alt = 2
   Insn 101: point = 222, n_alt = 0
   Insn 100: point = 224, n_alt = 2
   Insn 99: point = 225, n_alt = 0
   Insn 98: point = 227, n_alt = 2
   Insn 97: point = 228, n_alt = 0
   Insn 96: point = 228, n_alt = 4
  BB 9
   Insn 87: point = 228, n_alt = -1
   Insn 86: point = 228, n_alt = 0
   Insn 85: point = 229, n_alt = -2
   Insn 84: point = 230, n_alt = 0
   Insn 83: point = 230, n_alt = -2
   Insn 82: point = 231, n_alt = -2
   Insn 81: point = 232, n_alt = 3
   Insn 80: point = 233, n_alt = 3
  BB 7
   Insn 71: point = 234, n_alt = -1
   Insn 70: point = 234, n_alt = 0
   Insn 69: point = 235, n_alt = -2
   Insn 68: point = 236, n_alt = 0
   Insn 67: point = 236, n_alt = -2
   Insn 66: point = 237, n_alt = 3
   Insn 65: point = 238, n_alt = 0
   Insn 64: point = 238, n_alt = 4
  BB 5
   Insn 55: point = 238, n_alt = -1
   Insn 54: point = 238, n_alt = 0
   Insn 53: point = 239, n_alt = -2
   Insn 52: point = 240, n_alt = 0
   Insn 51: point = 240, n_alt = -2
   Insn 50: point = 241, n_alt = 3
   Insn 49: point = 242, n_alt = 6
   Insn 48: point = 243, n_alt = 1
   Insn 47: point = 243, n_alt = 0
   Insn 46: point = 245, n_alt = 3
   Insn 45: point = 246, n_alt = 0
   Insn 44: point = 246, n_alt = 1
   Insn 43: point = 246, n_alt = -2
   Insn 42: point = 247, n_alt = 4
   Insn 41: point = 247, n_alt = 4
   Insn 40: point = 247, n_alt = -2
   Insn 39: point = 248, n_alt = 3
   Insn 38: point = 250, n_alt = 3
   Insn 37: point = 251, n_alt = 0
   Insn 36: point = 252, n_alt = 5
   Insn 35: point = 253, n_alt = 3
  BB 3
   Insn 604: point = 254, n_alt = -1
   Insn 27: point = 254, n_alt = 1
  BB 4
   Insn 32: point = 254, n_alt = 1
  BB 2
   Insn 25: point = 254, n_alt = -1
   Insn 24: point = 254, n_alt = 0
   Insn 23: point = 255, n_alt = 2
   Insn 22: point = 256, n_alt = 6
   Insn 21: point = 256, n_alt = 6
   Insn 20: point = 256, n_alt = 6
   Insn 19: point = 256, n_alt = 6
   Insn 18: point = 256, n_alt = 6
   Insn 17: point = 256, n_alt = 6
   Insn 16: point = 256, n_alt = 6
   Insn 15: point = 256, n_alt = 6
   Insn 14: point = 256, n_alt = 6
   Insn 13: point = 256, n_alt = 6
   Insn 12: point = 257, n_alt = 3
   Insn 617: point = 257, n_alt = 5
   Insn 11: point = 258, n_alt = 4
   Insn 10: point = 259, n_alt = 3
   Insn 9: point = 260, n_alt = 3
   Insn 8: point = 260, n_alt = 1
   Insn 7: point = 260, n_alt = 8
   Insn 6: point = 261, n_alt = 7
   Insn 3: point = 262, n_alt = 0
  BB 16
   Insn 572: point = 264, n_alt = 6
   Insn 571: point = 265, n_alt = 0
   Insn 570: point = 267, n_alt = 2
  BB 15
   Insn 567: point = 268, n_alt = 0
   Insn 566: point = 268, n_alt = 0
   Insn 565: point = 268, n_alt = 1
   Insn 564: point = 268, n_alt = 4
   Insn 563: point = 268, n_alt = -2
   Insn 562: point = 269, n_alt = -2
   Insn 561: point = 270, n_alt = -2
   Insn 560: point = 271, n_alt = -2
   Insn 559: point = 272, n_alt = -2
   Insn 558: point = 273, n_alt = -2
   Insn 557: point = 274, n_alt = 0
   Insn 556: point = 275, n_alt = 0
   Insn 555: point = 276, n_alt = 0
   Insn 554: point = 278, n_alt = 3
   Insn 553: point = 279, n_alt = 0
   Insn 552: point = 281, n_alt = 2
   Insn 551: point = 282, n_alt = 0
   Insn 550: point = 284, n_alt = 2
   Insn 549: point = 285, n_alt = 0
   Insn 548: point = 287, n_alt = 2
   Insn 547: point = 288, n_alt = 0
   Insn 546: point = 290, n_alt = 2
   Insn 545: point = 291, n_alt = 0
   Insn 544: point = 293, n_alt = 2
   Insn 543: point = 294, n_alt = 0
   Insn 542: point = 296, n_alt = 2
   Insn 541: point = 297, n_alt = 2
   Insn 540: point = 299, n_alt = 7
   Insn 539: point = 300, n_alt = 1
   Insn 538: point = 301, n_alt = 0
   Insn 537: point = 302, n_alt = 8
   Insn 536: point = 303, n_alt = 7
   Insn 535: point = 304, n_alt = 0
   Insn 534: point = 304, n_alt = 0
   Insn 533: point = 304, n_alt = 1
   Insn 532: point = 304, n_alt = 4
   Insn 531: point = 304, n_alt = -2
   Insn 530: point = 305, n_alt = -2
   Insn 529: point = 306, n_alt = -2
   Insn 528: point = 307, n_alt = -2
   Insn 527: point = 308, n_alt = -2
   Insn 526: point = 309, n_alt = -2
   Insn 525: point = 310, n_alt = 0
   Insn 524: point = 311, n_alt = 0
   Insn 523: point = 312, n_alt = 0
   Insn 522: point = 314, n_alt = 3
   Insn 521: point = 315, n_alt = 0
   Insn 520: point = 317, n_alt = 2
   Insn 519: point = 318, n_alt = 0
   Insn 518: point = 320, n_alt = 2
   Insn 517: point = 321, n_alt = 0
   Insn 516: point = 323, n_alt = 2
   Insn 515: point = 324, n_alt = 0
   Insn 514: point = 326, n_alt = 2
   Insn 513: point = 327, n_alt = 0
   Insn 512: point = 329, n_alt = 2
   Insn 511: point = 330, n_alt = 0
   Insn 510: point = 332, n_alt = 2
   Insn 509: point = 333, n_alt = 2
   Insn 508: point = 335, n_alt = 7
   Insn 507: point = 336, n_alt = 1
   Insn 506: point = 337, n_alt = 0
   Insn 505: point = 338, n_alt = 8
   Insn 504: point = 339, n_alt = 7
   Insn 503: point = 340, n_alt = 0
   Insn 502: point = 340, n_alt = 0
   Insn 501: point = 340, n_alt = 1
   Insn 500: point = 340, n_alt = 4
   Insn 499: point = 340, n_alt = -2
   Insn 498: point = 341, n_alt = -2
   Insn 497: point = 342, n_alt = -2
   Insn 496: point = 343, n_alt = -2
   Insn 495: point = 344, n_alt = -2
   Insn 494: point = 345, n_alt = -2
   Insn 493: point = 346, n_alt = 0
   Insn 492: point = 347, n_alt = 0
   Insn 491: point = 348, n_alt = 0
   Insn 490: point = 350, n_alt = 3
   Insn 489: point = 351, n_alt = 0
   Insn 488: point = 353, n_alt = 2
   Insn 487: point = 354, n_alt = 0
   Insn 486: point = 356, n_alt = 2
   Insn 485: point = 357, n_alt = 0
   Insn 484: point = 359, n_alt = 2
   Insn 483: point = 360, n_alt = 0
   Insn 482: point = 362, n_alt = 2
   Insn 481: point = 363, n_alt = 0
   Insn 480: point = 365, n_alt = 2
   Insn 479: point = 366, n_alt = 0
   Insn 478: point = 368, n_alt = 2
   Insn 477: point = 369, n_alt = 2
   Insn 476: point = 371, n_alt = 7
   Insn 475: point = 372, n_alt = 1
   Insn 474: point = 373, n_alt = 0
   Insn 473: point = 374, n_alt = 8
   Insn 472: point = 375, n_alt = 7
   Insn 471: point = 376, n_alt = 0
   Insn 470: point = 376, n_alt = 0
   Insn 469: point = 376, n_alt = 1
   Insn 468: point = 376, n_alt = 4
   Insn 467: point = 376, n_alt = -2
   Insn 466: point = 377, n_alt = -2
   Insn 465: point = 378, n_alt = -2
   Insn 464: point = 379, n_alt = -2
   Insn 463: point = 380, n_alt = -2
   Insn 462: point = 381, n_alt = -2
   Insn 461: point = 382, n_alt = 0
   Insn 460: point = 383, n_alt = 0
   Insn 459: point = 384, n_alt = 0
   Insn 458: point = 386, n_alt = 3
   Insn 457: point = 387, n_alt = 0
   Insn 456: point = 389, n_alt = 2
   Insn 455: point = 390, n_alt = 0
   Insn 454: point = 392, n_alt = 2
   Insn 453: point = 393, n_alt = 0
   Insn 452: point = 395, n_alt = 2
   Insn 451: point = 396, n_alt = 0
   Insn 450: point = 398, n_alt = 2
   Insn 449: point = 399, n_alt = 0
   Insn 448: point = 401, n_alt = 2
   Insn 447: point = 402, n_alt = 0
   Insn 446: point = 404, n_alt = 2
   Insn 445: point = 405, n_alt = 2
   Insn 444: point = 407, n_alt = 7
   Insn 443: point = 408, n_alt = 1
   Insn 442: point = 409, n_alt = 0
   Insn 441: point = 410, n_alt = 8
   Insn 440: point = 411, n_alt = 7
   Insn 439: point = 412, n_alt = 0
   Insn 438: point = 412, n_alt = 0
   Insn 437: point = 412, n_alt = 1
   Insn 436: point = 412, n_alt = 4
   Insn 435: point = 412, n_alt = -2
   Insn 434: point = 413, n_alt = -2
   Insn 433: point = 414, n_alt = -2
   Insn 432: point = 415, n_alt = -2
   Insn 431: point = 416, n_alt = -2
   Insn 430: point = 417, n_alt = -2
   Insn 429: point = 418, n_alt = 0
   Insn 428: point = 419, n_alt = 0
   Insn 427: point = 420, n_alt = 0
   Insn 426: point = 422, n_alt = 3
   Insn 425: point = 423, n_alt = 0
   Insn 424: point = 425, n_alt = 2
   Insn 423: point = 426, n_alt = 0
   Insn 422: point = 428, n_alt = 2
   Insn 421: point = 429, n_alt = 0
   Insn 420: point = 431, n_alt = 2
   Insn 419: point = 432, n_alt = 0
   Insn 418: point = 434, n_alt = 2
   Insn 417: point = 435, n_alt = 0
   Insn 416: point = 437, n_alt = 2
   Insn 415: point = 438, n_alt = 0
   Insn 414: point = 440, n_alt = 2
   Insn 413: point = 441, n_alt = 2
   Insn 412: point = 443, n_alt = 7
   Insn 411: point = 444, n_alt = 1
   Insn 410: point = 445, n_alt = 0
   Insn 409: point = 446, n_alt = 8
   Insn 408: point = 447, n_alt = 7
   Insn 407: point = 448, n_alt = 0
   Insn 406: point = 448, n_alt = 0
   Insn 405: point = 448, n_alt = 1
   Insn 404: point = 448, n_alt = 4
   Insn 403: point = 448, n_alt = -2
   Insn 402: point = 449, n_alt = -2
   Insn 401: point = 450, n_alt = -2
   Insn 400: point = 451, n_alt = -2
   Insn 399: point = 452, n_alt = -2
   Insn 398: point = 453, n_alt = -2
   Insn 397: point = 454, n_alt = 0
   Insn 396: point = 455, n_alt = 0
   Insn 395: point = 456, n_alt = 0
   Insn 394: point = 458, n_alt = 3
   Insn 393: point = 459, n_alt = 0
   Insn 392: point = 461, n_alt = 2
   Insn 391: point = 462, n_alt = 0
   Insn 390: point = 464, n_alt = 2
   Insn 389: point = 465, n_alt = 0
   Insn 388: point = 467, n_alt = 2
   Insn 387: point = 468, n_alt = 0
   Insn 386: point = 470, n_alt = 2
   Insn 385: point = 471, n_alt = 0
   Insn 384: point = 473, n_alt = 2
   Insn 383: point = 474, n_alt = 0
   Insn 382: point = 476, n_alt = 2
   Insn 381: point = 477, n_alt = 2
   Insn 380: point = 479, n_alt = 7
   Insn 379: point = 480, n_alt = 1
   Insn 378: point = 481, n_alt = 0
   Insn 377: point = 482, n_alt = 8
   Insn 376: point = 483, n_alt = 7
   Insn 375: point = 484, n_alt = 0
   Insn 374: point = 484, n_alt = 0
   Insn 373: point = 484, n_alt = 1
   Insn 372: point = 484, n_alt = 4
   Insn 371: point = 484, n_alt = -2
   Insn 370: point = 485, n_alt = -2
   Insn 369: point = 486, n_alt = -2
   Insn 368: point = 487, n_alt = -2
   Insn 367: point = 488, n_alt = -2
   Insn 366: point = 489, n_alt = -2
   Insn 365: point = 490, n_alt = 0
   Insn 364: point = 491, n_alt = 0
   Insn 363: point = 492, n_alt = 0
   Insn 362: point = 494, n_alt = 3
   Insn 361: point = 495, n_alt = 0
   Insn 360: point = 497, n_alt = 2
   Insn 359: point = 498, n_alt = 0
   Insn 358: point = 500, n_alt = 2
   Insn 357: point = 501, n_alt = 0
   Insn 356: point = 503, n_alt = 2
   Insn 355: point = 504, n_alt = 0
   Insn 354: point = 506, n_alt = 2
   Insn 353: point = 507, n_alt = 0
   Insn 352: point = 509, n_alt = 2
   Insn 351: point = 510, n_alt = 0
   Insn 350: point = 512, n_alt = 2
   Insn 349: point = 513, n_alt = 2
   Insn 348: point = 515, n_alt = 7
   Insn 347: point = 516, n_alt = 1
   Insn 346: point = 517, n_alt = 0
   Insn 345: point = 518, n_alt = 8
   Insn 344: point = 519, n_alt = 7
   Insn 343: point = 520, n_alt = 0
   Insn 342: point = 520, n_alt = 4
   Insn 341: point = 520, n_alt = 0
   Insn 340: point = 520, n_alt = 1
   Insn 339: point = 520, n_alt = 4
   Insn 338: point = 520, n_alt = -2
   Insn 337: point = 521, n_alt = 0
   Insn 336: point = 522, n_alt = 8
   Insn 335: point = 523, n_alt = 7
   Insn 334: point = 524, n_alt = 0
   Insn 333: point = 525, n_alt = 0
   Insn 332: point = 526, n_alt = 3
   Insn 331: point = 527, n_alt = 2
   Insn 619: point = 528, n_alt = -2
	Hard reg 1 is preferable by r356 with profit 1
   Insn 621: point = 530, n_alt = -2
	Hard reg 0 is preferable by r357 with profit 1
   Insn 330: point = 532, n_alt = 0
   Insn 620: point = 533, n_alt = -2
	Hard reg 0 is preferable by r357 with profit 2
   Insn 618: point = 535, n_alt = -2
	Hard reg 1 is preferable by r356 with profit 2
   Insn 329: point = 537, n_alt = 2
   Insn 328: point = 538, n_alt = 3
   Insn 327: point = 539, n_alt = 3
  BB 14
   Insn 325: point = 540, n_alt = -1
   Insn 324: point = 540, n_alt = 0
   Insn 323: point = 541, n_alt = -2
   Insn 322: point = 542, n_alt = 0
   Insn 321: point = 542, n_alt = -2
   Insn 320: point = 543, n_alt = -2
   Insn 319: point = 544, n_alt = 3
   Insn 318: point = 545, n_alt = 0
   Insn 317: point = 546, n_alt = 0
   Insn 316: point = 546, n_alt = 1
   Insn 315: point = 546, n_alt = 4
   Insn 314: point = 546, n_alt = -2
   Insn 313: point = 547, n_alt = 0
 r87: [254..255]
 r88: [247..251]
 r89: [238..239]
 r90: [234..235]
 r91: [228..229]
 r92: [226..227]
 r93: [201..225]
 r94: [223..224]
 r95: [200..222]
 r96: [220..221]
 r97: [199..219]
 r98: [217..218]
 r99: [198..216]
 r100: [214..215]
 r101: [197..213]
 r102: [211..212]
 r103: [196..210]
 r104: [194..195]
 r105: [169..193]
 r106: [191..192]
 r107: [168..190]
 r108: [188..189]
 r109: [167..187]
 r110: [185..186]
 r111: [166..184]
 r112: [182..183]
 r113: [165..181]
 r114: [179..180]
 r115: [164..178]
 r116: [162..163]
 r117: [137..161]
 r118: [159..160]
 r119: [136..158]
 r120: [156..157]
 r121: [135..155]
 r122: [153..154]
 r123: [134..152]
 r124: [150..151]
 r125: [133..149]
 r126: [147..148]
 r127: [132..146]
 r128: [130..131]
 r129: [110..129]
 r130: [127..128]
 r131: [105..126]
 r132: [124..125]
 r133: [104..123]
 r134: [121..122]
 r135: [103..120]
 r136: [118..119]
 r137: [102..117]
 r138: [115..116]
 r139: [101..114]
 r140: [112..113]
 r141: [100..111]
 r142: [96..97]
 r143: [71..95]
 r144: [93..94]
 r145: [72..92]
 r146: [90..91]
 r147: [70..89]
 r148: [87..88]
 r149: [69..86]
 r150: [84..85]
 r151: [68..83]
 r152: [81..82]
 r153: [67..80]
 r154: [78..79]
 r155: [66..77]
 r156: [60..61]
 r157: [35..59]
 r158: [57..58]
 r159: [36..56]
 r160: [54..55]
 r161: [34..53]
 r162: [51..52]
 r163: [33..50]
 r164: [48..49]
 r165: [32..47]
 r166: [45..46]
 r167: [31..44]
 r168: [42..43]
 r169: [30..41]
 r170: [16..17]
 r171: [546..547]
 r172: [543..545]
 r173: [540..541]
 r174: [520..521]
 r175: [514..515]
 r176: [489..513]
 r177: [511..512]
 r178: [490..510]
 r179: [508..509]
 r180: [488..507]
 r181: [505..506]
 r182: [487..504]
 r183: [502..503]
 r184: [486..501]
 r185: [499..500]
 r186: [485..498]
 r187: [496..497]
 r188: [484..495]
 r189: [478..479]
 r190: [453..477]
 r191: [475..476]
 r192: [454..474]
 r193: [472..473]
 r194: [452..471]
 r195: [469..470]
 r196: [451..468]
 r197: [466..467]
 r198: [450..465]
 r199: [463..464]
 r200: [449..462]
 r201: [460..461]
 r202: [448..459]
 r203: [442..443]
 r204: [417..441]
 r205: [439..440]
 r206: [418..438]
 r207: [436..437]
 r208: [416..435]
 r209: [433..434]
 r210: [415..432]
 r211: [430..431]
 r212: [414..429]
 r213: [427..428]
 r214: [413..426]
 r215: [424..425]
 r216: [412..423]
 r217: [406..407]
 r218: [381..405]
 r219: [403..404]
 r220: [382..402]
 r221: [400..401]
 r222: [380..399]
 r223: [397..398]
 r224: [379..396]
 r225: [394..395]
 r226: [378..393]
 r227: [391..392]
 r228: [377..390]
 r229: [388..389]
 r230: [376..387]
 r231: [370..371]
 r232: [345..369]
 r233: [367..368]
 r234: [346..366]
 r235: [364..365]
 r236: [344..363]
 r237: [361..362]
 r238: [343..360]
 r239: [358..359]
 r240: [342..357]
 r241: [355..356]
 r242: [341..354]
 r243: [352..353]
 r244: [340..351]
 r245: [334..335]
 r246: [309..333]
 r247: [331..332]
 r248: [310..330]
 r249: [328..329]
 r250: [308..327]
 r251: [325..326]
 r252: [307..324]
 r253: [322..323]
 r254: [306..321]
 r255: [319..320]
 r256: [305..318]
 r257: [316..317]
 r258: [304..315]
 r259: [298..299]
 r260: [273..297]
 r261: [295..296]
 r262: [274..294]
 r263: [292..293]
 r264: [272..291]
 r265: [289..290]
 r266: [271..288]
 r267: [286..287]
 r268: [270..285]
 r269: [283..284]
 r270: [269..282]
 r271: [280..281]
 r272: [268..279]
 r273: [266..267]
 r274: [3..9]
 r275: [98..99]
 r276: [62..63]
 r277: [516..517]
 r278: [480..481]
 r279: [444..445]
 r280: [408..409]
 r281: [372..373]
 r282: [336..337]
 r283: [300..301]
 r284: [1..2]
 r285: [260..261]
 r286: [256..259]
 r287: [252..253]
 r288: [249..250]
 r289: [246..248]
 r290: [244..245]
 r291: [242..243]
 r292: [240..241]
 r293: [236..237]
 r294: [231..233]
 r295: [230..232]
 r296: [208..209]
 r297: [206..207]
 r298: [204..205]
 r299: [202..203]
 r300: [176..177]
 r301: [174..175]
 r302: [172..173]
 r303: [170..171]
 r304: [144..145]
 r305: [142..143]
 r306: [140..141]
 r307: [138..139]
 r308: [108..109]
 r309: [106..107]
 r310: [75..76]
 r311: [73..74]
 r312: [64..65]
 r313: [39..40]
 r314: [37..38]
 r315: [23..29]
 r316: [22..28]
 r317: [21..27]
 r318: [20..26]
 r319: [19..25]
 r320: [18..24]
 r321: [14..15]
 r322: [542..544]
 r323: [536..539] [525..528]
 r324: [534..538] [524..530]
 r325: [532..537]
 r326: [526..527]
 r327: [522..523]
 r328: [518..519]
 r329: [493..494]
 r330: [491..492]
 r331: [482..483]
 r332: [457..458]
 r333: [455..456]
 r334: [446..447]
 r335: [421..422]
 r336: [419..420]
 r337: [410..411]
 r338: [385..386]
 r339: [383..384]
 r340: [374..375]
 r341: [349..350]
 r342: [347..348]
 r343: [338..339]
 r344: [313..314]
 r345: [311..312]
 r346: [302..303]
 r347: [277..278]
 r348: [275..276]
 r349: [264..265]
 r350: [12..13]
 r351: [10..11]
 r353: [262..263]
 r354: [0..0]
 r355: [257..258]
 r356: [529..535]
 r357: [531..533]
Compressing live ranges: from 548 to 345 - 62%
Ranges after the compression:
 r87: [159..160]
 r88: [153..156]
 r89: [145..146]
 r90: [141..142]
 r91: [137..138]
 r92: [135..136]
 r93: [117..134]
 r94: [133..134]
 r95: [117..132]
 r96: [131..132]
 r97: [117..130]
 r98: [129..130]
 r99: [117..128]
 r100: [127..128]
 r101: [117..126]
 r102: [125..126]
 r103: [117..124]
 r104: [115..116]
 r105: [97..114]
 r106: [113..114]
 r107: [97..112]
 r108: [111..112]
 r109: [97..110]
 r110: [109..110]
 r111: [97..108]
 r112: [107..108]
 r113: [97..106]
 r114: [105..106]
 r115: [97..104]
 r116: [95..96]
 r117: [77..94]
 r118: [93..94]
 r119: [77..92]
 r120: [91..92]
 r121: [77..90]
 r122: [89..90]
 r123: [77..88]
 r124: [87..88]
 r125: [77..86]
 r126: [85..86]
 r127: [77..84]
 r128: [75..76]
 r129: [61..74]
 r130: [73..74]
 r131: [57..72]
 r132: [71..72]
 r133: [57..70]
 r134: [69..70]
 r135: [57..68]
 r136: [67..68]
 r137: [57..66]
 r138: [65..66]
 r139: [57..64]
 r140: [63..64]
 r141: [57..62]
 r142: [53..54]
 r143: [37..52]
 r144: [51..52]
 r145: [37..50]
 r146: [49..50]
 r147: [37..48]
 r148: [47..48]
 r149: [37..46]
 r150: [45..46]
 r151: [37..44]
 r152: [43..44]
 r153: [37..42]
 r154: [41..42]
 r155: [37..40]
 r156: [31..32]
 r157: [15..30]
 r158: [29..30]
 r159: [15..28]
 r160: [27..28]
 r161: [15..26]
 r162: [25..26]
 r163: [15..24]
 r164: [23..24]
 r165: [15..22]
 r166: [21..22]
 r167: [15..20]
 r168: [19..20]
 r169: [15..18]
 r170: [11..12]
 r171: [343..344]
 r172: [341..342]
 r173: [339..340]
 r174: [325..326]
 r175: [319..320]
 r176: [303..318]
 r177: [317..318]
 r178: [303..316]
 r179: [315..316]
 r180: [303..314]
 r181: [313..314]
 r182: [303..312]
 r183: [311..312]
 r184: [303..310]
 r185: [309..310]
 r186: [303..308]
 r187: [307..308]
 r188: [303..306]
 r189: [297..298]
 r190: [281..296]
 r191: [295..296]
 r192: [281..294]
 r193: [293..294]
 r194: [281..292]
 r195: [291..292]
 r196: [281..290]
 r197: [289..290]
 r198: [281..288]
 r199: [287..288]
 r200: [281..286]
 r201: [285..286]
 r202: [281..284]
 r203: [275..276]
 r204: [259..274]
 r205: [273..274]
 r206: [259..272]
 r207: [271..272]
 r208: [259..270]
 r209: [269..270]
 r210: [259..268]
 r211: [267..268]
 r212: [259..266]
 r213: [265..266]
 r214: [259..264]
 r215: [263..264]
 r216: [259..262]
 r217: [253..254]
 r218: [237..252]
 r219: [251..252]
 r220: [237..250]
 r221: [249..250]
 r222: [237..248]
 r223: [247..248]
 r224: [237..246]
 r225: [245..246]
 r226: [237..244]
 r227: [243..244]
 r228: [237..242]
 r229: [241..242]
 r230: [237..240]
 r231: [231..232]
 r232: [215..230]
 r233: [229..230]
 r234: [215..228]
 r235: [227..228]
 r236: [215..226]
 r237: [225..226]
 r238: [215..224]
 r239: [223..224]
 r240: [215..222]
 r241: [221..222]
 r242: [215..220]
 r243: [219..220]
 r244: [215..218]
 r245: [209..210]
 r246: [193..208]
 r247: [207..208]
 r248: [193..206]
 r249: [205..206]
 r250: [193..204]
 r251: [203..204]
 r252: [193..202]
 r253: [201..202]
 r254: [193..200]
 r255: [199..200]
 r256: [193..198]
 r257: [197..198]
 r258: [193..196]
 r259: [187..188]
 r260: [171..186]
 r261: [185..186]
 r262: [171..184]
 r263: [183..184]
 r264: [171..182]
 r265: [181..182]
 r266: [171..180]
 r267: [179..180]
 r268: [171..178]
 r269: [177..178]
 r270: [171..176]
 r271: [175..176]
 r272: [171..174]
 r273: [169..170]
 r274: [3..4]
 r275: [55..56]
 r276: [33..34]
 r277: [321..322]
 r278: [299..300]
 r279: [277..278]
 r280: [255..256]
 r281: [233..234]
 r282: [211..212]
 r283: [189..190]
 r284: [1..2]
 r285: [163..164]
 r286: [161..162]
 r287: [157..158]
 r288: [155..156]
 r289: [153..154]
 r290: [151..152]
 r291: [149..150]
 r292: [147..148]
 r293: [143..144]
 r294: [139..140]
 r295: [139..140]
 r296: [123..124]
 r297: [121..122]
 r298: [119..120]
 r299: [117..118]
 r300: [103..104]
 r301: [101..102]
 r302: [99..100]
 r303: [97..98]
 r304: [83..84]
 r305: [81..82]
 r306: [79..80]
 r307: [77..78]
 r308: [59..60]
 r309: [57..58]
 r310: [39..40]
 r311: [37..38]
 r312: [35..36]
 r313: [17..18]
 r314: [15..16]
 r315: [13..14]
 r316: [13..14]
 r317: [13..14]
 r318: [13..14]
 r319: [13..14]
 r320: [13..14]
 r321: [9..10]
 r322: [341..342]
 r323: [337..338] [329..330]
 r324: [335..338] [329..332]
 r325: [333..338]
 r326: [329..330]
 r327: [327..328]
 r328: [323..324]
 r329: [305..306]
 r330: [303..304]
 r331: [301..302]
 r332: [283..284]
 r333: [281..282]
 r334: [279..280]
 r335: [261..262]
 r336: [259..260]
 r337: [257..258]
 r338: [239..240]
 r339: [237..238]
 r340: [235..236]
 r341: [217..218]
 r342: [215..216]
 r343: [213..214]
 r344: [195..196]
 r345: [193..194]
 r346: [191..192]
 r347: [173..174]
 r348: [171..172]
 r349: [167..168]
 r350: [7..8]
 r351: [5..6]
 r353: [165..166]
 r354: [0..0]
 r355: [161..162]
 r356: [331..336]
 r357: [333..334]

********** Assignment #1: **********

	 Assigning to 356 (cl=DIREG, orig=323, freq=3, tfirst=356, tfreq=3)...
	   Assign 5 to reload r356 (freq=3)
	 Assigning to 357 (cl=SIREG, orig=324, freq=3, tfirst=357, tfreq=3)...
	   Assign 4 to reload r357 (freq=3)
	 Assigning to 355 (cl=GENERAL_REGS, orig=355, freq=2, tfirst=355, tfreq=2)...
	   Assign 2 to reload r355 (freq=2)
	 Assigning to 353 (cl=INDEX_REGS, orig=353, freq=1, tfirst=353, tfreq=1)...
	   Assign 0 to reload r353 (freq=1)
	 Assigning to 354 (cl=INDEX_REGS, orig=354, freq=1, tfirst=354, tfreq=1)...
	   Assign 2 to reload r354 (freq=1)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=20512, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=20496, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 23
changing reg in insn 24
changing reg in insn 37
changing reg in insn 40
changing reg in insn 53
changing reg in insn 54
changing reg in insn 69
changing reg in insn 70
changing reg in insn 85
changing reg in insn 86
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 117
changing reg in insn 100
changing reg in insn 101
changing reg in insn 101
changing reg in insn 118
changing reg in insn 102
changing reg in insn 103
changing reg in insn 103
changing reg in insn 119
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 120
changing reg in insn 106
changing reg in insn 107
changing reg in insn 107
changing reg in insn 121
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 122
changing reg in insn 127
changing reg in insn 128
changing reg in insn 128
changing reg in insn 146
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 147
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 148
changing reg in insn 133
changing reg in insn 134
changing reg in insn 134
changing reg in insn 149
changing reg in insn 135
changing reg in insn 136
changing reg in insn 136
changing reg in insn 150
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 151
changing reg in insn 156
changing reg in insn 157
changing reg in insn 157
changing reg in insn 175
changing reg in insn 158
changing reg in insn 159
changing reg in insn 159
changing reg in insn 176
changing reg in insn 160
changing reg in insn 161
changing reg in insn 161
changing reg in insn 177
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 178
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 179
changing reg in insn 166
changing reg in insn 167
changing reg in insn 167
changing reg in insn 180
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 200
changing reg in insn 187
changing reg in insn 188
changing reg in insn 188
changing reg in insn 204
changing reg in insn 189
changing reg in insn 190
changing reg in insn 190
changing reg in insn 205
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 206
changing reg in insn 193
changing reg in insn 194
changing reg in insn 194
changing reg in insn 207
changing reg in insn 195
changing reg in insn 196
changing reg in insn 196
changing reg in insn 208
changing reg in insn 197
changing reg in insn 198
changing reg in insn 198
changing reg in insn 209
changing reg in insn 216
changing reg in insn 217
changing reg in insn 217
changing reg in insn 234
changing reg in insn 218
changing reg in insn 219
changing reg in insn 219
changing reg in insn 233
changing reg in insn 220
changing reg in insn 221
changing reg in insn 221
changing reg in insn 235
changing reg in insn 222
changing reg in insn 223
changing reg in insn 223
changing reg in insn 236
changing reg in insn 224
changing reg in insn 225
changing reg in insn 225
changing reg in insn 237
changing reg in insn 226
changing reg in insn 227
changing reg in insn 227
changing reg in insn 238
changing reg in insn 228
changing reg in insn 229
changing reg in insn 229
changing reg in insn 239
changing reg in insn 248
changing reg in insn 249
changing reg in insn 249
changing reg in insn 266
changing reg in insn 250
changing reg in insn 251
changing reg in insn 251
changing reg in insn 265
changing reg in insn 252
changing reg in insn 253
changing reg in insn 253
changing reg in insn 267
changing reg in insn 254
changing reg in insn 255
changing reg in insn 255
changing reg in insn 268
changing reg in insn 256
changing reg in insn 257
changing reg in insn 257
changing reg in insn 269
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 270
changing reg in insn 260
changing reg in insn 261
changing reg in insn 261
changing reg in insn 271
changing reg in insn 291
changing reg in insn 292
changing reg in insn 313
changing reg in insn 314
changing reg in insn 318
changing reg in insn 320
changing reg in insn 323
changing reg in insn 324
changing reg in insn 337
changing reg in insn 338
changing reg in insn 348
changing reg in insn 349
changing reg in insn 349
changing reg in insn 366
changing reg in insn 350
changing reg in insn 351
changing reg in insn 351
changing reg in insn 365
changing reg in insn 352
changing reg in insn 353
changing reg in insn 353
changing reg in insn 367
changing reg in insn 354
changing reg in insn 355
changing reg in insn 355
changing reg in insn 368
changing reg in insn 356
changing reg in insn 357
changing reg in insn 357
changing reg in insn 369
changing reg in insn 358
changing reg in insn 359
changing reg in insn 359
changing reg in insn 370
changing reg in insn 360
changing reg in insn 361
changing reg in insn 361
changing reg in insn 371
changing reg in insn 380
changing reg in insn 381
changing reg in insn 381
changing reg in insn 398
changing reg in insn 382
changing reg in insn 383
changing reg in insn 383
changing reg in insn 397
changing reg in insn 384
changing reg in insn 385
changing reg in insn 385
changing reg in insn 399
changing reg in insn 386
changing reg in insn 387
changing reg in insn 387
changing reg in insn 400
changing reg in insn 388
changing reg in insn 389
changing reg in insn 389
changing reg in insn 401
changing reg in insn 390
changing reg in insn 391
changing reg in insn 391
changing reg in insn 402
changing reg in insn 392
changing reg in insn 393
changing reg in insn 393
changing reg in insn 403
changing reg in insn 412
changing reg in insn 413
changing reg in insn 413
changing reg in insn 430
changing reg in insn 414
changing reg in insn 415
changing reg in insn 415
changing reg in insn 429
changing reg in insn 416
changing reg in insn 417
changing reg in insn 417
changing reg in insn 431
changing reg in insn 418
changing reg in insn 419
changing reg in insn 419
changing reg in insn 432
changing reg in insn 420
changing reg in insn 421
changing reg in insn 421
changing reg in insn 433
changing reg in insn 422
changing reg in insn 423
changing reg in insn 423
changing reg in insn 434
changing reg in insn 424
changing reg in insn 425
changing reg in insn 425
changing reg in insn 435
changing reg in insn 444
changing reg in insn 445
changing reg in insn 445
changing reg in insn 462
changing reg in insn 446
changing reg in insn 447
changing reg in insn 447
changing reg in insn 461
changing reg in insn 448
changing reg in insn 449
changing reg in insn 449
changing reg in insn 463
changing reg in insn 450
changing reg in insn 451
changing reg in insn 451
changing reg in insn 464
changing reg in insn 452
changing reg in insn 453
changing reg in insn 453
changing reg in insn 465
changing reg in insn 454
changing reg in insn 455
changing reg in insn 455
changing reg in insn 466
changing reg in insn 456
changing reg in insn 457
changing reg in insn 457
changing reg in insn 467
changing reg in insn 476
changing reg in insn 477
changing reg in insn 477
changing reg in insn 494
changing reg in insn 478
changing reg in insn 479
changing reg in insn 479
changing reg in insn 493
changing reg in insn 480
changing reg in insn 481
changing reg in insn 481
changing reg in insn 495
changing reg in insn 482
changing reg in insn 483
changing reg in insn 483
changing reg in insn 496
changing reg in insn 484
changing reg in insn 485
changing reg in insn 485
changing reg in insn 497
changing reg in insn 486
changing reg in insn 487
changing reg in insn 487
changing reg in insn 498
changing reg in insn 488
changing reg in insn 489
changing reg in insn 489
changing reg in insn 499
changing reg in insn 508
changing reg in insn 509
changing reg in insn 509
changing reg in insn 526
changing reg in insn 510
changing reg in insn 511
changing reg in insn 511
changing reg in insn 525
changing reg in insn 512
changing reg in insn 513
changing reg in insn 513
changing reg in insn 527
changing reg in insn 514
changing reg in insn 515
changing reg in insn 515
changing reg in insn 528
changing reg in insn 516
changing reg in insn 517
changing reg in insn 517
changing reg in insn 529
changing reg in insn 518
changing reg in insn 519
changing reg in insn 519
changing reg in insn 530
changing reg in insn 520
changing reg in insn 521
changing reg in insn 521
changing reg in insn 531
changing reg in insn 540
changing reg in insn 541
changing reg in insn 541
changing reg in insn 558
changing reg in insn 542
changing reg in insn 543
changing reg in insn 543
changing reg in insn 557
changing reg in insn 544
changing reg in insn 545
changing reg in insn 545
changing reg in insn 559
changing reg in insn 546
changing reg in insn 547
changing reg in insn 547
changing reg in insn 560
changing reg in insn 548
changing reg in insn 549
changing reg in insn 549
changing reg in insn 561
changing reg in insn 550
changing reg in insn 551
changing reg in insn 551
changing reg in insn 562
changing reg in insn 552
changing reg in insn 553
changing reg in insn 553
changing reg in insn 563
changing reg in insn 570
changing reg in insn 571
changing reg in insn 585
changing reg in insn 298
changing reg in insn 91
changing reg in insn 75
changing reg in insn 59
changing reg in insn 590
changing reg in insn 214
changing reg in insn 215
changing reg in insn 246
changing reg in insn 247
changing reg in insn 346
changing reg in insn 347
changing reg in insn 378
changing reg in insn 379
changing reg in insn 410
changing reg in insn 411
changing reg in insn 442
changing reg in insn 443
changing reg in insn 474
changing reg in insn 475
changing reg in insn 506
changing reg in insn 507
changing reg in insn 538
changing reg in insn 539
changing reg in insn 590
changing reg in insn 594
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 13
changing reg in insn 12
changing reg in insn 11
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 43
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 49
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 66
changing reg in insn 67
changing reg in insn 80
changing reg in insn 82
changing reg in insn 81
changing reg in insn 83
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 116
changing reg in insn 140
changing reg in insn 141
changing reg in insn 141
changing reg in insn 142
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 145
changing reg in insn 169
changing reg in insn 170
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 173
changing reg in insn 174
changing reg in insn 201
changing reg in insn 202
changing reg in insn 202
changing reg in insn 203
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 232
changing reg in insn 244
changing reg in insn 245
changing reg in insn 262
changing reg in insn 263
changing reg in insn 263
changing reg in insn 264
changing reg in insn 278
changing reg in insn 284
changing reg in insn 279
changing reg in insn 285
changing reg in insn 280
changing reg in insn 286
changing reg in insn 281
changing reg in insn 287
changing reg in insn 282
changing reg in insn 288
changing reg in insn 283
changing reg in insn 289
changing reg in insn 303
changing reg in insn 306
changing reg in insn 319
changing reg in insn 321
changing reg in insn 333
changing reg in insn 327
changing reg in insn 333
changing reg in insn 332
changing reg in insn 334
changing reg in insn 328
changing reg in insn 334
changing reg in insn 331
changing reg in insn 330
changing reg in insn 329
changing reg in insn 330
changing reg in insn 330
changing reg in insn 330
changing reg in insn 331
changing reg in insn 332
changing reg in insn 335
changing reg in insn 336
changing reg in insn 344
changing reg in insn 345
changing reg in insn 362
changing reg in insn 363
changing reg in insn 363
changing reg in insn 364
changing reg in insn 376
changing reg in insn 377
changing reg in insn 394
changing reg in insn 395
changing reg in insn 395
changing reg in insn 396
changing reg in insn 408
changing reg in insn 409
changing reg in insn 426
changing reg in insn 427
changing reg in insn 427
changing reg in insn 428
changing reg in insn 440
changing reg in insn 441
changing reg in insn 458
changing reg in insn 459
changing reg in insn 459
changing reg in insn 460
changing reg in insn 472
changing reg in insn 473
changing reg in insn 490
changing reg in insn 491
changing reg in insn 491
changing reg in insn 492
changing reg in insn 504
changing reg in insn 505
changing reg in insn 522
changing reg in insn 523
changing reg in insn 523
changing reg in insn 524
changing reg in insn 536
changing reg in insn 537
changing reg in insn 554
changing reg in insn 555
changing reg in insn 555
changing reg in insn 556
changing reg in insn 571
changing reg in insn 572
changing reg in insn 579
changing reg in insn 580
changing reg in insn 582
changing reg in insn 583
changing reg in insn 3
changing reg in insn 595
deleting insn with uid = 43.
deleting insn with uid = 53.
deleting insn with uid = 69.
deleting insn with uid = 85.
deleting insn with uid = 120.
deleting insn with uid = 121.
deleting insn with uid = 149.
deleting insn with uid = 150.
deleting insn with uid = 178.
deleting insn with uid = 179.
deleting insn with uid = 205.
deleting insn with uid = 206.
deleting insn with uid = 207.
deleting insn with uid = 208.
deleting insn with uid = 234.
deleting insn with uid = 237.
deleting insn with uid = 238.
deleting insn with uid = 266.
deleting insn with uid = 269.
deleting insn with uid = 270.
deleting insn with uid = 286.
deleting insn with uid = 287.
deleting insn with uid = 288.
deleting insn with uid = 291.
deleting insn with uid = 323.
deleting insn with uid = 366.
deleting insn with uid = 369.
deleting insn with uid = 370.
deleting insn with uid = 398.
deleting insn with uid = 401.
deleting insn with uid = 402.
deleting insn with uid = 430.
deleting insn with uid = 433.
deleting insn with uid = 434.
deleting insn with uid = 462.
deleting insn with uid = 465.
deleting insn with uid = 466.
deleting insn with uid = 494.
deleting insn with uid = 497.
deleting insn with uid = 498.
deleting insn with uid = 526.
deleting insn with uid = 529.
deleting insn with uid = 530.
deleting insn with uid = 558.
deleting insn with uid = 561.
deleting insn with uid = 562.
deleting insn with uid = 590.
deleting insn with uid = 594.
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9]
;;  ref usage 	r0={179d,149u} r1={56d,22u} r2={54d,20u} r4={69d,36u} r5={84d,51u} r6={1d,199u} r7={48d,132u} r8={33d} r9={33d} r10={33d} r11={33d} r12={33d} r13={33d} r14={33d} r15={33d} r17={114d,8u} r18={33d} r19={33d} r20={1d,1u} r21={62d,28u} r22={34d} r23={34d} r24={34d} r25={34d} r26={34d} r27={34d} r28={34d} r29={33d} r30={33d} r31={33d} r32={33d} r33={33d} r34={33d} r35={33d} r36={33d} r37={61d,27u} r38={78d,44u} r39={33d} r40={33d} r45={33d} r46={33d} r47={33d} r48={33d} r49={33d} r50={33d} r51={33d} r52={33d} r53={33d} r54={33d} r55={33d} r56={33d} r57={33d} r58={33d} r59={33d} r60={33d} r61={33d} r62={33d} r63={33d} r64={33d} r65={33d} r66={33d} r67={33d} r68={33d} r69={33d} r70={33d} r71={33d} r72={33d} r73={33d} r74={33d} r75={33d} r76={33d} r77={33d} r78={33d} r79={33d} r80={33d} 
;;    total ref usage 3610{2893d,717u,0e} in 513{480 regular + 33 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 285 286
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.6164+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [353])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":21 1012 {stack_tls_protect_set_di}
     (nil))
(insn 6 3 7 2 (set (reg:SF 21 xmm0 [285])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":23 127 {*movsf_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [285])) "test_lib.c":23 127 {*movsf_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -14 [0xfffffffffffffff2])) [0 obis+0 S4 A16])
        (const_int 0 [0])) "test_lib.c":24 82 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -10 [0xfffffffffffffff6])) [0 obis+4 S2 A16])
        (const_int 0 [0])) "test_lib.c":24 83 {*movhi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 0 ax [286])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20480 [0xffffffffffffb000])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":35 218 {*adddi_1}
     (nil))
(insn 11 10 617 2 (set (reg:DI 2 cx [355])
        (const_int 8751747723086357551 [0x7974742f7665642f])) "test_lib.c":35 81 {*movdi_internal}
     (nil))
(insn 617 11 12 2 (set (mem/c:DI (reg:DI 0 ax [286]) [0 MEM[(void *)&serport_params]+0 S8 A64])
        (reg:DI 2 cx [355])) "test_lib.c":35 81 {*movdi_internal}
     (nil))
(insn 12 617 13 2 (set (mem/c:HI (plus:DI (reg:DI 0 ax [286])
                (const_int 8 [0x8])) [0 MEM[(void *)&serport_params]+8 S2 A64])
        (const_int 13395 [0x3453])) "test_lib.c":35 83 {*movhi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:QI (plus:DI (reg:DI 0 ax [286])
                (const_int 10 [0xa])) [0 MEM[(void *)&serport_params]+10 S1 A16])
        (const_int 0 [0])) "test_lib.c":35 84 {*movqi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20448 [0xffffffffffffb020])) [0 serport_params.baudrate+0 S1 A64])
        (const_int 10 [0xa])) "test_lib.c":36 84 {*movqi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20447 [0xffffffffffffb021])) [0 serport_params.databits+0 S1 A8])
        (const_int 8 [0x8])) "test_lib.c":37 84 {*movqi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20446 [0xffffffffffffb022])) [0 serport_params.stopbits+0 S1 A16])
        (const_int 1 [0x1])) "test_lib.c":38 84 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20445 [0xffffffffffffb023])) [0 serport_params.parity+0 S1 A8])
        (const_int 0 [0])) "test_lib.c":39 84 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20444 [0xffffffffffffb024])) [0 serport_params.handshake+0 S1 A32])
        (const_int 0 [0])) "test_lib.c":40 84 {*movqi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20443 [0xffffffffffffb025])) [0 serport_params.infmode+0 S1 A8])
        (const_int 1 [0x1])) "test_lib.c":41 84 {*movqi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -9660 [0xffffffffffffda44])) [0 meter_comm_params.inf_type+0 S1 A32])
        (const_int 1 [0x1])) "test_lib.c":43 84 {*movqi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -9659 [0xffffffffffffda45])) [0 meter_comm_params.meter_type+0 S1 A8])
        (const_int 1 [0x1])) "test_lib.c":44 84 {*movqi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -9652 [0xffffffffffffda4c])) [0 meter_comm_params.meter_addr_format+0 S1 A32])
        (const_int 1 [0x1])) "test_lib.c":45 84 {*movqi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:QI 0 ax [orig:87 _1 ] [87])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -9652 [0xffffffffffffda4c])) [0 meter_comm_params.meter_addr_format+0 S1 A32])) "test_lib.c":47 84 {*movqi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:87 _1 ] [87])
            (const_int 1 [0x1]))) "test_lib.c":47 5 {*cmpqi_1}
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "test_lib.c":47 627 {*jcc_1}
     (nil)
 -> 30)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 26 25 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 604 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -9656 [0xffffffffffffda48])) [3 meter_comm_params.meter_id+0 S4 A64])
        (const_int 3 [0x3])) "test_lib.c":49 82 {*movsi_internal}
     (nil))
(jump_insn 604 27 605 3 (set (pc)
        (label_ref 33)) 659 {jump}
     (nil)
 -> 33)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 605 604 30)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 30 605 31 4 2 (nil) [1 uses])
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -9656 [0xffffffffffffda48])) [3 meter_comm_params.meter_id+0 S4 A64])
        (const_int 19 [0x13])) "test_lib.c":53 82 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 287 288 289 290 291 292
(code_label 33 32 34 5 3 (nil) [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (parallel [
            (set (reg:DI 0 ax [287])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20480 [0xffffffffffffb000])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":55 218 {*adddi_1}
     (nil))
(insn 36 35 37 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -9624 [0xffffffffffffda68])) [1 meter_comm_params.interface_params+0 S8 A64])
        (reg:DI 0 ax [287])) "test_lib.c":55 81 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -9656 [0xffffffffffffda48])) [3 meter_comm_params.meter_id+0 S4 A64])) "test_lib.c":56 82 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 1 dx [288])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":56 218 {*adddi_1}
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 5 di [289])
                (plus:DI (reg:DI 1 dx [288])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":56 218 {*adddi_1}
     (nil))
(insn 40 39 41 5 (set (reg:SI 2 cx)
        (reg:SI 0 ax [orig:88 _2 ] [88])) "test_lib.c":56 82 {*movsi_internal}
     (nil))
(insn 41 40 42 5 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f33f7721cf0 *.LC1>)) "test_lib.c":56 81 {*movdi_internal}
     (nil))
(insn 42 41 44 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f33f7749000 *.LC2>)) "test_lib.c":56 81 {*movdi_internal}
     (nil))
(insn 44 42 45 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":56 84 {*movqi_internal}
     (nil))
(call_insn 45 44 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7f33f780ff00 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) "test_lib.c":56 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 0 ax [290])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":57 218 {*adddi_1}
     (nil))
(insn 47 46 48 5 (parallel [
            (set (reg:DI 0 ax [291])
                (plus:DI (reg:DI 0 ax [290])
                    (const_int 184 [0xb8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":57 218 {*adddi_1}
     (nil))
(insn 48 47 49 5 (set (mem/c:SI (reg:DI 0 ax [291]) [0 MEM[(void *)&meter_comm_params + 184B]+0 S4 A64])
        (const_int 829714028 [0x31746e6c])) "test_lib.c":57 82 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (mem/c:QI (plus:DI (reg:DI 0 ax [291])
                (const_int 4 [0x4])) [0 MEM[(void *)&meter_comm_params + 184B]+4 S1 A32])
        (const_int 0 [0])) "test_lib.c":57 84 {*movqi_internal}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 0 ax [292])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":59 218 {*adddi_1}
     (nil))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [292])) "test_lib.c":59 81 {*movdi_internal}
     (nil))
(call_insn 52 51 54 5 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_comm") [flags 0x41]  <function_decl 0x7f33f76c9d00 init_comm>) [0 init_comm S1 A8])
            (const_int 0 [0]))) "test_lib.c":59 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 52 55 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:QI 0 ax [orig:89 _3 ] [89])
            (const_int 0 [0]))) "test_lib.c":59 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 55 54 56 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "test_lib.c":59 627 {*jcc_1}
     (nil)
 -> 62)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274
(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f33f7749090 *.LC3>)) "test_lib.c":61 81 {*movdi_internal}
     (nil))
(call_insn 58 57 59 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":61 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 59 58 606 6 (set (reg:SI 0 ax [orig:274 _189 ] [274])
        (const_int -1 [0xffffffffffffffff])) "test_lib.c":62 82 {*movsi_internal}
     (nil))
(jump_insn 606 59 607 6 (set (pc)
        (label_ref 588)) "test_lib.c":62 659 {jump}
     (nil)
 -> 588)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

(barrier 607 606 62)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 293
(code_label 62 607 63 7 4 (nil) [1 uses])
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f33f7749120 *.LC4>)) "test_lib.c":65 81 {*movdi_internal}
     (nil))
(call_insn 65 64 66 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":65 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 66 65 67 7 (parallel [
            (set (reg:DI 0 ax [293])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":67 218 {*adddi_1}
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [293])) "test_lib.c":67 81 {*movdi_internal}
     (nil))
(call_insn 68 67 70 7 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("connect_to_meter") [flags 0x41]  <function_decl 0x7f33f76c9e00 connect_to_meter>) [0 connect_to_meter S1 A8])
            (const_int 0 [0]))) "test_lib.c":67 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 70 68 71 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:QI 0 ax [orig:90 _4 ] [90])
            (const_int 0 [0]))) "test_lib.c":67 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 71 70 72 7 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "test_lib.c":67 627 {*jcc_1}
     (nil)
 -> 78)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f33f77491b0 *.LC5>)) "test_lib.c":69 81 {*movdi_internal}
     (nil))
(call_insn 74 73 75 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":69 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 74 608 8 (set (reg:SI 0 ax [orig:274 _189 ] [274])
        (const_int -1 [0xffffffffffffffff])) "test_lib.c":70 82 {*movsi_internal}
     (nil))
(jump_insn 608 75 609 8 (set (pc)
        (label_ref 588)) "test_lib.c":70 659 {jump}
     (nil)
 -> 588)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

(barrier 609 608 78)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 294 295
(code_label 78 609 79 9 6 (nil) [1 uses])
(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 9 (parallel [
            (set (reg:DI 1 dx [294])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":76 218 {*adddi_1}
     (nil))
(insn 81 80 82 9 (parallel [
            (set (reg:DI 0 ax [295])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":76 218 {*adddi_1}
     (nil))
(insn 82 81 83 9 (set (reg:DI 4 si)
        (reg:DI 1 dx [294])) "test_lib.c":76 81 {*movdi_internal}
     (nil))
(insn 83 82 84 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [295])) "test_lib.c":76 81 {*movdi_internal}
     (nil))
(call_insn 84 83 86 9 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_nameplate_details") [flags 0x41]  <function_decl 0x7f33f76ea000 get_nameplate_details>) [0 get_nameplate_details S1 A8])
            (const_int 0 [0]))) "test_lib.c":76 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 86 84 87 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:QI 0 ax [orig:91 _5 ] [91])
            (const_int 0 [0]))) "test_lib.c":76 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 87 86 88 9 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "test_lib.c":76 627 {*jcc_1}
     (nil)
 -> 94)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f33f7749240 *.LC6>)) "test_lib.c":78 81 {*movdi_internal}
     (nil))
(call_insn 90 89 91 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":78 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 91 90 610 10 (set (reg:SI 0 ax [orig:274 _189 ] [274])
        (const_int -1 [0xffffffffffffffff])) "test_lib.c":79 82 {*movsi_internal}
     (nil))
(jump_insn 610 91 611 10 (set (pc)
        (label_ref 588)) "test_lib.c":79 659 {jump}
     (nil)
 -> 588)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

(barrier 611 610 94)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 275 276 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320
(code_label 94 611 95 11 7 (nil) [1 uses])
(note 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f33f77492d0 *.LC7>)) "test_lib.c":83 81 {*movdi_internal}
     (nil))
(call_insn 97 96 98 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":83 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 98 97 99 11 (set (reg:QI 0 ax [orig:92 _6 ] [92])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20427 [0xffffffffffffb035])) [0 name_plate_info.meter_ser_num.param_obis_code+5 S1 A8])) "test_lib.c":91 84 {*movqi_internal}
     (nil))
(insn 99 98 100 11 (set (reg:SI 4 si [orig:93 _7 ] [93])
        (zero_extend:SI (reg:QI 0 ax [orig:92 _6 ] [92]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (nil))
(insn 100 99 101 11 (set (reg:QI 0 ax [orig:94 _8 ] [94])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20428 [0xffffffffffffb034])) [0 name_plate_info.meter_ser_num.param_obis_code+4 S1 A32])) "test_lib.c":90 84 {*movqi_internal}
     (nil))
(insn 101 100 102 11 (set (reg:SI 37 r8 [orig:95 _9 ] [95])
        (zero_extend:SI (reg:QI 0 ax [orig:94 _8 ] [94]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (nil))
(insn 102 101 103 11 (set (reg:QI 0 ax [orig:96 _10 ] [96])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20429 [0xffffffffffffb033])) [0 name_plate_info.meter_ser_num.param_obis_code+3 S1 A8])) "test_lib.c":89 84 {*movqi_internal}
     (nil))
(insn 103 102 104 11 (set (reg:SI 5 di [orig:97 _11 ] [97])
        (zero_extend:SI (reg:QI 0 ax [orig:96 _10 ] [96]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (nil))
(insn 104 103 105 11 (set (reg:QI 0 ax [orig:98 _12 ] [98])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20430 [0xffffffffffffb032])) [0 name_plate_info.meter_ser_num.param_obis_code+2 S1 A16])) "test_lib.c":88 84 {*movqi_internal}
     (nil))
(insn 105 104 106 11 (set (reg:SI 2 cx [orig:99 _13 ] [99])
        (zero_extend:SI (reg:QI 0 ax [orig:98 _12 ] [98]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (nil))
(insn 106 105 107 11 (set (reg:QI 0 ax [orig:100 _14 ] [100])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20431 [0xffffffffffffb031])) [0 name_plate_info.meter_ser_num.param_obis_code+1 S1 A8])) "test_lib.c":87 84 {*movqi_internal}
     (nil))
(insn 107 106 108 11 (set (reg:SI 1 dx [orig:101 _15 ] [101])
        (zero_extend:SI (reg:QI 0 ax [orig:100 _14 ] [100]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (nil))
(insn 108 107 109 11 (set (reg:QI 0 ax [orig:102 _16 ] [102])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20432 [0xffffffffffffb030])) [0 name_plate_info.meter_ser_num.param_obis_code+0 S1 A64])) "test_lib.c":86 84 {*movqi_internal}
     (nil))
(insn 109 108 110 11 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (zero_extend:SI (reg:QI 0 ax [orig:102 _16 ] [102]))) "test_lib.c":85 136 {*zero_extendqisi2}
     (nil))
(insn 110 109 111 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 111 110 112 11 (parallel [
            (set (reg:DI 38 r9 [296])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (nil))
(insn 112 111 113 11 (parallel [
            (set (reg:DI 38 r9 [297])
                (plus:DI (reg:DI 38 r9 [296])
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (nil))
(insn 113 112 114 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [297])) "test_lib.c":85 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 114 113 115 11 (parallel [
            (set (reg:DI 38 r9 [298])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (nil))
(insn 115 114 116 11 (parallel [
            (set (reg:DI 38 r9 [299])
                (plus:DI (reg:DI 38 r9 [298])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (nil))
(insn 116 115 117 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [299])) "test_lib.c":85 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 117 116 118 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:93 _7 ] [93])) "test_lib.c":85 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 118 117 119 11 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:95 _9 ] [95])) "test_lib.c":85 82 {*movsi_internal}
     (nil))
(insn 119 118 122 11 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:97 _11 ] [97])) "test_lib.c":85 82 {*movsi_internal}
     (nil))
(insn 122 119 123 11 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:103 _17 ] [103])) "test_lib.c":85 82 {*movsi_internal}
     (nil))
(insn 123 122 124 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f33f7749360 *.LC8>)) "test_lib.c":85 81 {*movdi_internal}
     (nil))
(insn 124 123 125 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":85 84 {*movqi_internal}
     (nil))
(call_insn 125 124 126 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 32 [0x20]))) "test_lib.c":85 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 126 125 127 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":85 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 127 126 128 11 (set (reg:QI 0 ax [orig:104 _18 ] [104])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20373 [0xffffffffffffb06b])) [0 name_plate_info.manf_name.param_obis_code+5 S1 A8])) "test_lib.c":102 84 {*movqi_internal}
     (nil))
(insn 128 127 129 11 (set (reg:SI 4 si [orig:105 _19 ] [105])
        (zero_extend:SI (reg:QI 0 ax [orig:104 _18 ] [104]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (nil))
(insn 129 128 130 11 (set (reg:QI 0 ax [orig:106 _20 ] [106])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20374 [0xffffffffffffb06a])) [0 name_plate_info.manf_name.param_obis_code+4 S1 A16])) "test_lib.c":101 84 {*movqi_internal}
     (nil))
(insn 130 129 131 11 (set (reg:SI 37 r8 [orig:107 _21 ] [107])
        (zero_extend:SI (reg:QI 0 ax [orig:106 _20 ] [106]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (nil))
(insn 131 130 132 11 (set (reg:QI 0 ax [orig:108 _22 ] [108])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20375 [0xffffffffffffb069])) [0 name_plate_info.manf_name.param_obis_code+3 S1 A8])) "test_lib.c":100 84 {*movqi_internal}
     (nil))
(insn 132 131 133 11 (set (reg:SI 5 di [orig:109 _23 ] [109])
        (zero_extend:SI (reg:QI 0 ax [orig:108 _22 ] [108]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (nil))
(insn 133 132 134 11 (set (reg:QI 0 ax [orig:110 _24 ] [110])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20376 [0xffffffffffffb068])) [0 name_plate_info.manf_name.param_obis_code+2 S1 A64])) "test_lib.c":99 84 {*movqi_internal}
     (nil))
(insn 134 133 135 11 (set (reg:SI 2 cx [orig:111 _25 ] [111])
        (zero_extend:SI (reg:QI 0 ax [orig:110 _24 ] [110]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (nil))
(insn 135 134 136 11 (set (reg:QI 0 ax [orig:112 _26 ] [112])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20377 [0xffffffffffffb067])) [0 name_plate_info.manf_name.param_obis_code+1 S1 A8])) "test_lib.c":98 84 {*movqi_internal}
     (nil))
(insn 136 135 137 11 (set (reg:SI 1 dx [orig:113 _27 ] [113])
        (zero_extend:SI (reg:QI 0 ax [orig:112 _26 ] [112]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (nil))
(insn 137 136 138 11 (set (reg:QI 0 ax [orig:114 _28 ] [114])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20378 [0xffffffffffffb066])) [0 name_plate_info.manf_name.param_obis_code+0 S1 A16])) "test_lib.c":97 84 {*movqi_internal}
     (nil))
(insn 138 137 139 11 (set (reg:SI 0 ax [orig:115 _29 ] [115])
        (zero_extend:SI (reg:QI 0 ax [orig:114 _28 ] [114]))) "test_lib.c":96 136 {*zero_extendqisi2}
     (nil))
(insn 139 138 140 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 140 139 141 11 (parallel [
            (set (reg:DI 38 r9 [300])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (nil))
(insn 141 140 142 11 (parallel [
            (set (reg:DI 38 r9 [301])
                (plus:DI (reg:DI 38 r9 [300])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (nil))
(insn 142 141 143 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [301])) "test_lib.c":96 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 143 142 144 11 (parallel [
            (set (reg:DI 38 r9 [302])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (nil))
(insn 144 143 145 11 (parallel [
            (set (reg:DI 38 r9 [303])
                (plus:DI (reg:DI 38 r9 [302])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (nil))
(insn 145 144 146 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [303])) "test_lib.c":96 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 146 145 147 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:105 _19 ] [105])) "test_lib.c":96 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 147 146 148 11 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:107 _21 ] [107])) "test_lib.c":96 82 {*movsi_internal}
     (nil))
(insn 148 147 151 11 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:109 _23 ] [109])) "test_lib.c":96 82 {*movsi_internal}
     (nil))
(insn 151 148 152 11 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:115 _29 ] [115])) "test_lib.c":96 82 {*movsi_internal}
     (nil))
(insn 152 151 153 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f33f7749360 *.LC8>)) "test_lib.c":96 81 {*movdi_internal}
     (nil))
(insn 153 152 154 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":96 84 {*movqi_internal}
     (nil))
(call_insn 154 153 155 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 32 [0x20]))) "test_lib.c":96 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 155 154 156 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":96 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 156 155 157 11 (set (reg:QI 0 ax [orig:116 _30 ] [116])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20319 [0xffffffffffffb0a1])) [0 name_plate_info.fw_vwesion.param_obis_code+5 S1 A8])) "test_lib.c":113 84 {*movqi_internal}
     (nil))
(insn 157 156 158 11 (set (reg:SI 4 si [orig:117 _31 ] [117])
        (zero_extend:SI (reg:QI 0 ax [orig:116 _30 ] [116]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (nil))
(insn 158 157 159 11 (set (reg:QI 0 ax [orig:118 _32 ] [118])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20320 [0xffffffffffffb0a0])) [0 name_plate_info.fw_vwesion.param_obis_code+4 S1 A64])) "test_lib.c":112 84 {*movqi_internal}
     (nil))
(insn 159 158 160 11 (set (reg:SI 37 r8 [orig:119 _33 ] [119])
        (zero_extend:SI (reg:QI 0 ax [orig:118 _32 ] [118]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (nil))
(insn 160 159 161 11 (set (reg:QI 0 ax [orig:120 _34 ] [120])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20321 [0xffffffffffffb09f])) [0 name_plate_info.fw_vwesion.param_obis_code+3 S1 A8])) "test_lib.c":111 84 {*movqi_internal}
     (nil))
(insn 161 160 162 11 (set (reg:SI 5 di [orig:121 _35 ] [121])
        (zero_extend:SI (reg:QI 0 ax [orig:120 _34 ] [120]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (nil))
(insn 162 161 163 11 (set (reg:QI 0 ax [orig:122 _36 ] [122])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20322 [0xffffffffffffb09e])) [0 name_plate_info.fw_vwesion.param_obis_code+2 S1 A16])) "test_lib.c":110 84 {*movqi_internal}
     (nil))
(insn 163 162 164 11 (set (reg:SI 2 cx [orig:123 _37 ] [123])
        (zero_extend:SI (reg:QI 0 ax [orig:122 _36 ] [122]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (nil))
(insn 164 163 165 11 (set (reg:QI 0 ax [orig:124 _38 ] [124])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20323 [0xffffffffffffb09d])) [0 name_plate_info.fw_vwesion.param_obis_code+1 S1 A8])) "test_lib.c":109 84 {*movqi_internal}
     (nil))
(insn 165 164 166 11 (set (reg:SI 1 dx [orig:125 _39 ] [125])
        (zero_extend:SI (reg:QI 0 ax [orig:124 _38 ] [124]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (nil))
(insn 166 165 167 11 (set (reg:QI 0 ax [orig:126 _40 ] [126])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20324 [0xffffffffffffb09c])) [0 name_plate_info.fw_vwesion.param_obis_code+0 S1 A32])) "test_lib.c":108 84 {*movqi_internal}
     (nil))
(insn 167 166 168 11 (set (reg:SI 0 ax [orig:127 _41 ] [127])
        (zero_extend:SI (reg:QI 0 ax [orig:126 _40 ] [126]))) "test_lib.c":107 136 {*zero_extendqisi2}
     (nil))
(insn 168 167 169 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 169 168 170 11 (parallel [
            (set (reg:DI 38 r9 [304])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (nil))
(insn 170 169 171 11 (parallel [
            (set (reg:DI 38 r9 [305])
                (plus:DI (reg:DI 38 r9 [304])
                    (const_int 130 [0x82])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (nil))
(insn 171 170 172 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [305])) "test_lib.c":107 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 172 171 173 11 (parallel [
            (set (reg:DI 38 r9 [306])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (nil))
(insn 173 172 174 11 (parallel [
            (set (reg:DI 38 r9 [307])
                (plus:DI (reg:DI 38 r9 [306])
                    (const_int 114 [0x72])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (nil))
(insn 174 173 175 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [307])) "test_lib.c":107 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 175 174 176 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:117 _31 ] [117])) "test_lib.c":107 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 176 175 177 11 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:119 _33 ] [119])) "test_lib.c":107 82 {*movsi_internal}
     (nil))
(insn 177 176 180 11 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:121 _35 ] [121])) "test_lib.c":107 82 {*movsi_internal}
     (nil))
(insn 180 177 181 11 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:127 _41 ] [127])) "test_lib.c":107 82 {*movsi_internal}
     (nil))
(insn 181 180 182 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f33f7749360 *.LC8>)) "test_lib.c":107 81 {*movdi_internal}
     (nil))
(insn 182 181 183 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":107 84 {*movqi_internal}
     (nil))
(call_insn 183 182 184 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 32 [0x20]))) "test_lib.c":107 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 184 183 185 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":107 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 185 184 186 11 (set (reg:QI 0 ax [orig:128 _42 ] [128])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20248 [0xffffffffffffb0e8])) [0 name_plate_info.meter_type.param_value+0 S1 A64])) "test_lib.c":126 84 {*movqi_internal}
     (nil))
(insn 186 185 187 11 (set (reg:SI 5 di [orig:129 _43 ] [129])
        (sign_extend:SI (reg:QI 0 ax [orig:128 _42 ] [128]))) "test_lib.c":118 151 {extendqisi2}
     (nil))
(insn 187 186 188 11 (set (reg:QI 0 ax [orig:130 _44 ] [130])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20265 [0xffffffffffffb0d7])) [0 name_plate_info.meter_type.param_obis_code+5 S1 A8])) "test_lib.c":124 84 {*movqi_internal}
     (nil))
(insn 188 187 189 11 (set (reg:SI 4 si [orig:131 _45 ] [131])
        (zero_extend:SI (reg:QI 0 ax [orig:130 _44 ] [130]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (nil))
(insn 189 188 190 11 (set (reg:QI 0 ax [orig:132 _46 ] [132])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20266 [0xffffffffffffb0d6])) [0 name_plate_info.meter_type.param_obis_code+4 S1 A16])) "test_lib.c":123 84 {*movqi_internal}
     (nil))
(insn 190 189 191 11 (set (reg:SI 38 r9 [orig:133 _47 ] [133])
        (zero_extend:SI (reg:QI 0 ax [orig:132 _46 ] [132]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (nil))
(insn 191 190 192 11 (set (reg:QI 0 ax [orig:134 _48 ] [134])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20267 [0xffffffffffffb0d5])) [0 name_plate_info.meter_type.param_obis_code+3 S1 A8])) "test_lib.c":122 84 {*movqi_internal}
     (nil))
(insn 192 191 193 11 (set (reg:SI 37 r8 [orig:135 _49 ] [135])
        (zero_extend:SI (reg:QI 0 ax [orig:134 _48 ] [134]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (nil))
(insn 193 192 194 11 (set (reg:QI 0 ax [orig:136 _50 ] [136])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20268 [0xffffffffffffb0d4])) [0 name_plate_info.meter_type.param_obis_code+2 S1 A32])) "test_lib.c":121 84 {*movqi_internal}
     (nil))
(insn 194 193 195 11 (set (reg:SI 2 cx [orig:137 _51 ] [137])
        (zero_extend:SI (reg:QI 0 ax [orig:136 _50 ] [136]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (nil))
(insn 195 194 196 11 (set (reg:QI 0 ax [orig:138 _52 ] [138])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20269 [0xffffffffffffb0d3])) [0 name_plate_info.meter_type.param_obis_code+1 S1 A8])) "test_lib.c":120 84 {*movqi_internal}
     (nil))
(insn 196 195 197 11 (set (reg:SI 1 dx [orig:139 _53 ] [139])
        (zero_extend:SI (reg:QI 0 ax [orig:138 _52 ] [138]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (nil))
(insn 197 196 198 11 (set (reg:QI 0 ax [orig:140 _54 ] [140])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20270 [0xffffffffffffb0d2])) [0 name_plate_info.meter_type.param_obis_code+0 S1 A16])) "test_lib.c":119 84 {*movqi_internal}
     (nil))
(insn 198 197 199 11 (set (reg:SI 0 ax [orig:141 _55 ] [141])
        (zero_extend:SI (reg:QI 0 ax [orig:140 _54 ] [140]))) "test_lib.c":118 136 {*zero_extendqisi2}
     (nil))
(insn 199 198 200 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":118 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 200 199 201 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 5 di [orig:129 _43 ] [129])) "test_lib.c":118 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 201 200 202 11 (parallel [
            (set (reg:DI 5 di [308])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":118 218 {*adddi_1}
     (nil))
(insn 202 201 203 11 (parallel [
            (set (reg:DI 5 di [309])
                (plus:DI (reg:DI 5 di [308])
                    (const_int 168 [0xa8])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":118 218 {*adddi_1}
     (nil))
(insn 203 202 204 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 5 di [309])) "test_lib.c":118 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 204 203 209 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:131 _45 ] [131])) "test_lib.c":118 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 209 204 210 11 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:141 _55 ] [141])) "test_lib.c":118 82 {*movsi_internal}
     (nil))
(insn 210 209 211 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f33f77493f0 *.LC9>)) "test_lib.c":118 81 {*movdi_internal}
     (nil))
(insn 211 210 212 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":118 84 {*movqi_internal}
     (nil))
(call_insn 212 211 213 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 32 [0x20]))) "test_lib.c":118 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (nil)))))))))
(insn 213 212 214 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":118 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 214 213 215 11 (set (reg:SI 0 ax [orig:275 _221 ] [275])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20194 [0xffffffffffffb11e])) [0 MEM[(char * {ref-all})&name_plate_info + 238B]+0 S4 A16])) "test_lib.c":129 82 {*movsi_internal}
     (nil))
(insn 215 214 216 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 0 ax [orig:275 _221 ] [275])) "test_lib.c":129 82 {*movsi_internal}
     (nil))
(insn 216 215 217 11 (set (reg:SF 21 xmm0 [orig:142 p_flt_ptr.0_56 ] [142])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":130 127 {*movsf_internal}
     (nil))
(insn 217 216 218 11 (set (reg:DF 21 xmm0 [orig:143 _57 ] [143])
        (float_extend:DF (reg:SF 21 xmm0 [orig:142 p_flt_ptr.0_56 ] [142]))) "test_lib.c":130 154 {*extendsfdf2}
     (nil))
(insn 218 217 219 11 (set (reg:QI 0 ax [orig:144 _58 ] [144])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20211 [0xffffffffffffb10d])) [0 name_plate_info.int_ct_ratio.param_obis_code+5 S1 A8])) "test_lib.c":136 84 {*movqi_internal}
     (nil))
(insn 219 218 220 11 (set (reg:SI 4 si [orig:145 _59 ] [145])
        (zero_extend:SI (reg:QI 0 ax [orig:144 _58 ] [144]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (nil))
(insn 220 219 221 11 (set (reg:QI 0 ax [orig:146 _60 ] [146])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20212 [0xffffffffffffb10c])) [0 name_plate_info.int_ct_ratio.param_obis_code+4 S1 A32])) "test_lib.c":135 84 {*movqi_internal}
     (nil))
(insn 221 220 222 11 (set (reg:SI 37 r8 [orig:147 _61 ] [147])
        (zero_extend:SI (reg:QI 0 ax [orig:146 _60 ] [146]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (nil))
(insn 222 221 223 11 (set (reg:QI 0 ax [orig:148 _62 ] [148])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20213 [0xffffffffffffb10b])) [0 name_plate_info.int_ct_ratio.param_obis_code+3 S1 A8])) "test_lib.c":134 84 {*movqi_internal}
     (nil))
(insn 223 222 224 11 (set (reg:SI 5 di [orig:149 _63 ] [149])
        (zero_extend:SI (reg:QI 0 ax [orig:148 _62 ] [148]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (nil))
(insn 224 223 225 11 (set (reg:QI 0 ax [orig:150 _64 ] [150])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20214 [0xffffffffffffb10a])) [0 name_plate_info.int_ct_ratio.param_obis_code+2 S1 A16])) "test_lib.c":133 84 {*movqi_internal}
     (nil))
(insn 225 224 226 11 (set (reg:SI 2 cx [orig:151 _65 ] [151])
        (zero_extend:SI (reg:QI 0 ax [orig:150 _64 ] [150]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (nil))
(insn 226 225 227 11 (set (reg:QI 0 ax [orig:152 _66 ] [152])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20215 [0xffffffffffffb109])) [0 name_plate_info.int_ct_ratio.param_obis_code+1 S1 A8])) "test_lib.c":132 84 {*movqi_internal}
     (nil))
(insn 227 226 228 11 (set (reg:SI 1 dx [orig:153 _67 ] [153])
        (zero_extend:SI (reg:QI 0 ax [orig:152 _66 ] [152]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (nil))
(insn 228 227 229 11 (set (reg:QI 0 ax [orig:154 _68 ] [154])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20216 [0xffffffffffffb108])) [0 name_plate_info.int_ct_ratio.param_obis_code+0 S1 A64])) "test_lib.c":131 84 {*movqi_internal}
     (nil))
(insn 229 228 230 11 (set (reg:SI 0 ax [orig:155 _69 ] [155])
        (zero_extend:SI (reg:QI 0 ax [orig:154 _68 ] [154]))) "test_lib.c":130 136 {*zero_extendqisi2}
     (nil))
(insn 230 229 231 11 (parallel [
            (set (reg:DI 38 r9 [310])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":130 218 {*adddi_1}
     (nil))
(insn 231 230 232 11 (parallel [
            (set (reg:DI 38 r9 [311])
                (plus:DI (reg:DI 38 r9 [310])
                    (const_int 222 [0xde])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":130 218 {*adddi_1}
     (nil))
(insn 232 231 233 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [311])) "test_lib.c":130 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 233 232 235 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:145 _59 ] [145])) "test_lib.c":130 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 235 233 236 11 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:147 _61 ] [147])) "test_lib.c":130 82 {*movsi_internal}
     (nil))
(insn 236 235 239 11 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:149 _63 ] [149])) "test_lib.c":130 82 {*movsi_internal}
     (nil))
(insn 239 236 240 11 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:155 _69 ] [155])) "test_lib.c":130 82 {*movsi_internal}
     (nil))
(insn 240 239 241 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":130 81 {*movdi_internal}
     (nil))
(insn 241 240 242 11 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":130 84 {*movqi_internal}
     (nil))
(call_insn 242 241 243 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":130 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 243 242 244 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":130 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 244 243 245 11 (set (reg:SF 21 xmm0 [312])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":142 127 {*movsf_internal}
     (nil))
(insn 245 244 246 11 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [312])) "test_lib.c":142 127 {*movsf_internal}
     (nil))
(insn 246 245 247 11 (set (reg:SI 0 ax [orig:276 _225 ] [276])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20140 [0xffffffffffffb154])) [0 MEM[(char * {ref-all})&name_plate_info + 292B]+0 S4 A32])) "test_lib.c":143 82 {*movsi_internal}
     (nil))
(insn 247 246 248 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 0 ax [orig:276 _225 ] [276])) "test_lib.c":143 82 {*movsi_internal}
     (nil))
(insn 248 247 249 11 (set (reg:SF 21 xmm0 [orig:156 p_flt_ptr.1_70 ] [156])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":144 127 {*movsf_internal}
     (nil))
(insn 249 248 250 11 (set (reg:DF 21 xmm0 [orig:157 _71 ] [157])
        (float_extend:DF (reg:SF 21 xmm0 [orig:156 p_flt_ptr.1_70 ] [156]))) "test_lib.c":144 154 {*extendsfdf2}
     (nil))
(insn 250 249 251 11 (set (reg:QI 0 ax [orig:158 _72 ] [158])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20157 [0xffffffffffffb143])) [0 name_plate_info.int_pt_ratio.param_obis_code+5 S1 A8])) "test_lib.c":150 84 {*movqi_internal}
     (nil))
(insn 251 250 252 11 (set (reg:SI 4 si [orig:159 _73 ] [159])
        (zero_extend:SI (reg:QI 0 ax [orig:158 _72 ] [158]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (nil))
(insn 252 251 253 11 (set (reg:QI 0 ax [orig:160 _74 ] [160])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20158 [0xffffffffffffb142])) [0 name_plate_info.int_pt_ratio.param_obis_code+4 S1 A16])) "test_lib.c":149 84 {*movqi_internal}
     (nil))
(insn 253 252 254 11 (set (reg:SI 37 r8 [orig:161 _75 ] [161])
        (zero_extend:SI (reg:QI 0 ax [orig:160 _74 ] [160]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (nil))
(insn 254 253 255 11 (set (reg:QI 0 ax [orig:162 _76 ] [162])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20159 [0xffffffffffffb141])) [0 name_plate_info.int_pt_ratio.param_obis_code+3 S1 A8])) "test_lib.c":148 84 {*movqi_internal}
     (nil))
(insn 255 254 256 11 (set (reg:SI 5 di [orig:163 _77 ] [163])
        (zero_extend:SI (reg:QI 0 ax [orig:162 _76 ] [162]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (nil))
(insn 256 255 257 11 (set (reg:QI 0 ax [orig:164 _78 ] [164])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20160 [0xffffffffffffb140])) [0 name_plate_info.int_pt_ratio.param_obis_code+2 S1 A64])) "test_lib.c":147 84 {*movqi_internal}
     (nil))
(insn 257 256 258 11 (set (reg:SI 2 cx [orig:165 _79 ] [165])
        (zero_extend:SI (reg:QI 0 ax [orig:164 _78 ] [164]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (nil))
(insn 258 257 259 11 (set (reg:QI 0 ax [orig:166 _80 ] [166])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20161 [0xffffffffffffb13f])) [0 name_plate_info.int_pt_ratio.param_obis_code+1 S1 A8])) "test_lib.c":146 84 {*movqi_internal}
     (nil))
(insn 259 258 260 11 (set (reg:SI 1 dx [orig:167 _81 ] [167])
        (zero_extend:SI (reg:QI 0 ax [orig:166 _80 ] [166]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (nil))
(insn 260 259 261 11 (set (reg:QI 0 ax [orig:168 _82 ] [168])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20162 [0xffffffffffffb13e])) [0 name_plate_info.int_pt_ratio.param_obis_code+0 S1 A16])) "test_lib.c":145 84 {*movqi_internal}
     (nil))
(insn 261 260 262 11 (set (reg:SI 0 ax [orig:169 _83 ] [169])
        (zero_extend:SI (reg:QI 0 ax [orig:168 _82 ] [168]))) "test_lib.c":144 136 {*zero_extendqisi2}
     (nil))
(insn 262 261 263 11 (parallel [
            (set (reg:DI 38 r9 [313])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20432 [0xffffffffffffb030])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":144 218 {*adddi_1}
     (nil))
(insn 263 262 264 11 (parallel [
            (set (reg:DI 38 r9 [314])
                (plus:DI (reg:DI 38 r9 [313])
                    (const_int 276 [0x114])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":144 218 {*adddi_1}
     (nil))
(insn 264 263 265 11 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [314])) "test_lib.c":144 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 265 264 267 11 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:159 _73 ] [159])) "test_lib.c":144 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 267 265 268 11 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:161 _75 ] [161])) "test_lib.c":144 82 {*movsi_internal}
     (nil))
(insn 268 267 271 11 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:163 _77 ] [163])) "test_lib.c":144 82 {*movsi_internal}
     (nil))
(insn 271 268 272 11 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:169 _83 ] [169])) "test_lib.c":144 82 {*movsi_internal}
     (nil))
(insn 272 271 273 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":144 81 {*movdi_internal}
     (nil))
(insn 273 272 274 11 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":144 84 {*movqi_internal}
     (nil))
(call_insn 274 273 275 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":144 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 275 274 276 11 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":144 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 276 275 277 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f33f7749510 *.LC11>)) "test_lib.c":156 81 {*movdi_internal}
     (nil))
(call_insn 277 276 278 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":156 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 278 277 279 11 (parallel [
            (set (reg:DI 37 r8 [315])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -11344 [0xffffffffffffd3b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (nil))
(insn 279 278 280 11 (parallel [
            (set (reg:DI 5 di [316])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -13024 [0xffffffffffffcd20])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (nil))
(insn 280 279 281 11 (parallel [
            (set (reg:DI 2 cx [317])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -14704 [0xffffffffffffc690])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (nil))
(insn 281 280 282 11 (parallel [
            (set (reg:DI 1 dx [318])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -16384 [0xffffffffffffc000])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (nil))
(insn 282 281 283 11 (parallel [
            (set (reg:DI 4 si [319])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -18064 [0xffffffffffffb970])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (nil))
(insn 283 282 284 11 (parallel [
            (set (reg:DI 0 ax [320])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":166 218 {*adddi_1}
     (nil))
(insn 284 283 285 11 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [315])) "test_lib.c":166 81 {*movdi_internal}
     (nil))
(insn 285 284 289 11 (set (reg:DI 37 r8)
        (reg:DI 5 di [316])) "test_lib.c":166 81 {*movdi_internal}
     (nil))
(insn 289 285 290 11 (set (reg:DI 5 di)
        (reg:DI 0 ax [320])) "test_lib.c":166 81 {*movdi_internal}
     (nil))
(call_insn 290 289 292 11 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_obis_codes") [flags 0x41]  <function_decl 0x7f33f76f9e00 get_obis_codes>) [0 get_obis_codes S1 A8])
            (const_int 0 [0]))) "test_lib.c":166 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 292 290 293 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:QI 0 ax [orig:170 _84 ] [170])
            (const_int 0 [0]))) "test_lib.c":166 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 293 292 294 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) "test_lib.c":166 627 {*jcc_1}
     (nil)
 -> 301)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274
(note 294 293 295 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f33f77495a0 *.LC12>)) "test_lib.c":169 81 {*movdi_internal}
     (nil))
(insn 296 295 297 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":169 84 {*movqi_internal}
     (nil))
(call_insn 297 296 298 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test_lib.c":169 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 298 297 612 12 (set (reg:SI 0 ax [orig:274 _189 ] [274])
        (const_int -1 [0xffffffffffffffff])) "test_lib.c":170 82 {*movsi_internal}
     (nil))
(jump_insn 612 298 613 12 (set (pc)
        (label_ref 588)) "test_lib.c":170 659 {jump}
     (nil)
 -> 588)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

(barrier 613 612 301)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 321
(code_label 301 613 302 13 8 (nil) [1 uses])
(note 302 301 303 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 13 (parallel [
            (set (reg:DI 0 ax [321])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -19440 [0xffffffffffffb410])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":174 218 {*adddi_1}
     (nil))
(insn 304 303 305 13 (set (reg:DI 1 dx)
        (const_int 1366 [0x556])) "test_lib.c":174 81 {*movdi_internal}
     (nil))
(insn 305 304 306 13 (set (reg:SI 4 si)
        (const_int 0 [0])) "test_lib.c":174 82 {*movsi_internal}
     (nil))
(insn 306 305 307 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [321])) "test_lib.c":174 81 {*movdi_internal}
     (nil))
(call_insn 307 306 308 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f33f7805f00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "test_lib.c":174 676 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 308 307 309 13 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])
        (const_int 0 [0])) "test_lib.c":424 84 {*movqi_internal}
     (nil))
(insn 309 308 614 13 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])
        (const_int 0 [0])) "test_lib.c":427 84 {*movqi_internal}
     (nil))
(jump_insn 614 309 615 13 (set (pc)
        (label_ref 573)) "test_lib.c":427 659 {jump}
     (nil)
 -> 573)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 615 614 575)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       17
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 171 172 173 322
(code_label 575 615 312 14 11 (nil) [1 uses])
(note 312 575 313 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 14 (set (reg:SI 0 ax [orig:171 _85 ] [171])
        (zero_extend:SI (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8]))) "test_lib.c":432 136 {*zero_extendqisi2}
     (nil))
(insn 314 313 315 14 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:171 _85 ] [171])) "test_lib.c":432 82 {*movsi_internal}
     (nil))
(insn 315 314 316 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f33f7749630 *.LC13>)) "test_lib.c":432 81 {*movdi_internal}
     (nil))
(insn 316 315 317 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":432 84 {*movqi_internal}
     (nil))
(call_insn 317 316 318 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test_lib.c":432 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 318 317 319 14 (set (reg:SI 1 dx [orig:172 _86 ] [172])
        (zero_extend:SI (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8]))) "test_lib.c":433 136 {*zero_extendqisi2}
     (nil))
(insn 319 318 320 14 (parallel [
            (set (reg:DI 0 ax [322])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":433 218 {*adddi_1}
     (nil))
(insn 320 319 321 14 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:172 _86 ] [172])) "test_lib.c":433 82 {*movsi_internal}
     (nil))
(insn 321 320 322 14 (set (reg:DI 5 di)
        (reg:DI 0 ax [322])) "test_lib.c":433 81 {*movdi_internal}
     (nil))
(call_insn 322 321 324 14 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_event_data_all") [flags 0x41]  <function_decl 0x7f33f76ea500 get_event_data_all>) [0 get_event_data_all S1 A8])
            (const_int 0 [0]))) "test_lib.c":433 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 324 322 325 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:QI 0 ax [orig:173 _87 ] [173])
            (const_int 0 [0]))) "test_lib.c":433 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 325 324 326 14 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 568)
            (pc))) "test_lib.c":433 627 {*jcc_1}
     (nil)
 -> 568)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 277 278 279 280 281 282 283 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348
(note 326 325 327 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 15 (parallel [
            (set (reg/f:DI 1 dx [323])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":435 218 {*adddi_1}
     (nil))
(insn 328 327 329 15 (parallel [
            (set (reg/f:DI 0 ax [324])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9460 [0xffffffffffffdb0c])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":435 218 {*adddi_1}
     (nil))
(insn 329 328 618 15 (set (reg:DI 2 cx [325])
        (const_int 75 [0x4b])) "test_lib.c":435 81 {*movdi_internal}
     (nil))
(insn 618 329 620 15 (set (reg/f:DI 5 di [323])
        (reg/f:DI 1 dx [323])) "test_lib.c":435 81 {*movdi_internal}
     (nil))
(insn 620 618 330 15 (set (reg/f:DI 4 si [324])
        (reg/f:DI 0 ax [324])) "test_lib.c":435 81 {*movdi_internal}
     (nil))
(insn 330 620 621 15 (parallel [
            (set (reg:DI 2 cx [325])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [323])
                (plus:DI (ashift:DI (reg:DI 2 cx [325])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [323])))
            (set (reg/f:DI 4 si [324])
                (plus:DI (ashift:DI (reg:DI 2 cx [325])
                        (const_int 3 [0x3]))
                    (reg/f:DI 4 si [324])))
            (set (mem/c:BLK (reg/f:DI 5 di [323]) [0 MEM[(char * {ref-all})&event_val_info]+0 S600 A64])
                (mem/c:BLK (reg/f:DI 4 si [324]) [0 MEM[(char * {ref-all})&meter_comm_params + 204B]+0 S600 A32]))
            (use (reg:DI 2 cx [325]))
        ]) "test_lib.c":435 944 {*rep_movdi_rex64}
     (nil))
(insn 621 330 619 15 (set (reg/f:DI 0 ax [324])
        (reg/f:DI 4 si [324])) "test_lib.c":435 81 {*movdi_internal}
     (nil))
(insn 619 621 331 15 (set (reg/f:DI 1 dx [323])
        (reg/f:DI 5 di [323])) "test_lib.c":435 81 {*movdi_internal}
     (nil))
(insn 331 619 332 15 (set (reg:HI 2 cx [326])
        (mem/c:HI (reg/f:DI 0 ax [324]) [0 MEM[(char * {ref-all})&meter_comm_params + 204B]+600 S2 A32])) "test_lib.c":435 83 {*movhi_internal}
     (nil))
(insn 332 331 333 15 (set (mem/c:HI (reg/f:DI 1 dx [323]) [0 MEM[(char * {ref-all})&event_val_info]+600 S2 A64])
        (reg:HI 2 cx [326])) "test_lib.c":435 83 {*movhi_internal}
     (nil))
(insn 333 332 334 15 (set (reg/f:DI 1 dx [323])
        (plus:DI (reg/f:DI 1 dx [323])
            (const_int 2 [0x2]))) "test_lib.c":435 214 {*leadi}
     (nil))
(insn 334 333 335 15 (set (reg/f:DI 0 ax [324])
        (plus:DI (reg/f:DI 0 ax [324])
            (const_int 2 [0x2]))) "test_lib.c":435 214 {*leadi}
     (nil))
(insn 335 334 336 15 (set (reg:SF 21 xmm0 [327])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":437 127 {*movsf_internal}
     (nil))
(insn 336 335 337 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [327])) "test_lib.c":437 127 {*movsf_internal}
     (nil))
(insn 337 336 338 15 (set (reg:SI 0 ax [orig:174 _88 ] [174])
        (zero_extend:SI (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8]))) "test_lib.c":438 136 {*zero_extendqisi2}
     (nil))
(insn 338 337 339 15 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:174 _88 ] [174])) "test_lib.c":438 82 {*movsi_internal}
     (nil))
(insn 339 338 340 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f33f77496c0 *.LC14>)) "test_lib.c":438 81 {*movdi_internal}
     (nil))
(insn 340 339 341 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) "test_lib.c":438 84 {*movqi_internal}
     (nil))
(call_insn 341 340 342 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "test_lib.c":438 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 342 341 343 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f33f77492d0 *.LC7>)) "test_lib.c":439 81 {*movdi_internal}
     (nil))
(call_insn 343 342 344 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f33f780f600 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "test_lib.c":439 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 344 343 345 15 (set (reg:SF 21 xmm0 [328])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":441 127 {*movsf_internal}
     (nil))
(insn 345 344 346 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [328])) "test_lib.c":441 127 {*movsf_internal}
     (nil))
(insn 346 345 347 15 (set (reg:SI 0 ax [orig:277 _243 ] [277])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19640 [0xffffffffffffb348])) [0 MEM[(char * {ref-all})&event_val_info + 408B]+0 S4 A64])) "test_lib.c":442 82 {*movsi_internal}
     (nil))
(insn 347 346 348 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 0 ax [orig:277 _243 ] [277])) "test_lib.c":442 82 {*movsi_internal}
     (nil))
(insn 348 347 349 15 (set (reg:SF 21 xmm0 [orig:175 p_flt_ptr.2_89 ] [175])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":443 127 {*movsf_internal}
     (nil))
(insn 349 348 350 15 (set (reg:DF 21 xmm0 [orig:176 _90 ] [176])
        (float_extend:DF (reg:SF 21 xmm0 [orig:175 p_flt_ptr.2_89 ] [175]))) "test_lib.c":443 154 {*extendsfdf2}
     (nil))
(insn 350 349 351 15 (set (reg:QI 0 ax [orig:177 _91 ] [177])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19657 [0xffffffffffffb337])) [0 event_val_info.kwh.param_obis_code+5 S1 A8])) "test_lib.c":446 84 {*movqi_internal}
     (nil))
(insn 351 350 352 15 (set (reg:SI 4 si [orig:178 _92 ] [178])
        (zero_extend:SI (reg:QI 0 ax [orig:177 _91 ] [177]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (nil))
(insn 352 351 353 15 (set (reg:QI 0 ax [orig:179 _93 ] [179])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19658 [0xffffffffffffb336])) [0 event_val_info.kwh.param_obis_code+4 S1 A16])) "test_lib.c":446 84 {*movqi_internal}
     (nil))
(insn 353 352 354 15 (set (reg:SI 37 r8 [orig:180 _94 ] [180])
        (zero_extend:SI (reg:QI 0 ax [orig:179 _93 ] [179]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (nil))
(insn 354 353 355 15 (set (reg:QI 0 ax [orig:181 _95 ] [181])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19659 [0xffffffffffffb335])) [0 event_val_info.kwh.param_obis_code+3 S1 A8])) "test_lib.c":445 84 {*movqi_internal}
     (nil))
(insn 355 354 356 15 (set (reg:SI 5 di [orig:182 _96 ] [182])
        (zero_extend:SI (reg:QI 0 ax [orig:181 _95 ] [181]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (nil))
(insn 356 355 357 15 (set (reg:QI 0 ax [orig:183 _97 ] [183])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19660 [0xffffffffffffb334])) [0 event_val_info.kwh.param_obis_code+2 S1 A32])) "test_lib.c":445 84 {*movqi_internal}
     (nil))
(insn 357 356 358 15 (set (reg:SI 2 cx [orig:184 _98 ] [184])
        (zero_extend:SI (reg:QI 0 ax [orig:183 _97 ] [183]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (nil))
(insn 358 357 359 15 (set (reg:QI 0 ax [orig:185 _99 ] [185])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19661 [0xffffffffffffb333])) [0 event_val_info.kwh.param_obis_code+1 S1 A8])) "test_lib.c":444 84 {*movqi_internal}
     (nil))
(insn 359 358 360 15 (set (reg:SI 1 dx [orig:186 _100 ] [186])
        (zero_extend:SI (reg:QI 0 ax [orig:185 _99 ] [185]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (nil))
(insn 360 359 361 15 (set (reg:QI 0 ax [orig:187 _101 ] [187])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19662 [0xffffffffffffb332])) [0 event_val_info.kwh.param_obis_code+0 S1 A16])) "test_lib.c":444 84 {*movqi_internal}
     (nil))
(insn 361 360 362 15 (set (reg:SI 0 ax [orig:188 _102 ] [188])
        (zero_extend:SI (reg:QI 0 ax [orig:187 _101 ] [187]))) "test_lib.c":443 136 {*zero_extendqisi2}
     (nil))
(insn 362 361 363 15 (parallel [
            (set (reg:DI 38 r9 [329])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":443 218 {*adddi_1}
     (nil))
(insn 363 362 364 15 (parallel [
            (set (reg:DI 38 r9 [330])
                (plus:DI (reg:DI 38 r9 [329])
                    (const_int 392 [0x188])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":443 218 {*adddi_1}
     (nil))
(insn 364 363 365 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [330])) "test_lib.c":443 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 365 364 367 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:178 _92 ] [178])) "test_lib.c":443 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 367 365 368 15 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:180 _94 ] [180])) "test_lib.c":443 82 {*movsi_internal}
     (nil))
(insn 368 367 371 15 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:182 _96 ] [182])) "test_lib.c":443 82 {*movsi_internal}
     (nil))
(insn 371 368 372 15 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:188 _102 ] [188])) "test_lib.c":443 82 {*movsi_internal}
     (nil))
(insn 372 371 373 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":443 81 {*movdi_internal}
     (nil))
(insn 373 372 374 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":443 84 {*movqi_internal}
     (nil))
(call_insn 374 373 375 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":443 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 375 374 376 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":443 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 376 375 377 15 (set (reg:SF 21 xmm0 [331])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":450 127 {*movsf_internal}
     (nil))
(insn 377 376 378 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [331])) "test_lib.c":450 127 {*movsf_internal}
     (nil))
(insn 378 377 379 15 (set (reg:SI 0 ax [orig:278 _247 ] [278])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19910 [0xffffffffffffb23a])) [0 MEM[(char * {ref-all})&event_val_info + 138B]+0 S4 A16])) "test_lib.c":451 82 {*movsi_internal}
     (nil))
(insn 379 378 380 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 0 ax [orig:278 _247 ] [278])) "test_lib.c":451 82 {*movsi_internal}
     (nil))
(insn 380 379 381 15 (set (reg:SF 21 xmm0 [orig:189 p_flt_ptr.3_103 ] [189])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":452 127 {*movsf_internal}
     (nil))
(insn 381 380 382 15 (set (reg:DF 21 xmm0 [orig:190 _104 ] [190])
        (float_extend:DF (reg:SF 21 xmm0 [orig:189 p_flt_ptr.3_103 ] [189]))) "test_lib.c":452 154 {*extendsfdf2}
     (nil))
(insn 382 381 383 15 (set (reg:QI 0 ax [orig:191 _105 ] [191])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19927 [0xffffffffffffb229])) [0 event_val_info.cur_iy.param_obis_code+5 S1 A8])) "test_lib.c":455 84 {*movqi_internal}
     (nil))
(insn 383 382 384 15 (set (reg:SI 4 si [orig:192 _106 ] [192])
        (zero_extend:SI (reg:QI 0 ax [orig:191 _105 ] [191]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (nil))
(insn 384 383 385 15 (set (reg:QI 0 ax [orig:193 _107 ] [193])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19928 [0xffffffffffffb228])) [0 event_val_info.cur_iy.param_obis_code+4 S1 A64])) "test_lib.c":455 84 {*movqi_internal}
     (nil))
(insn 385 384 386 15 (set (reg:SI 37 r8 [orig:194 _108 ] [194])
        (zero_extend:SI (reg:QI 0 ax [orig:193 _107 ] [193]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (nil))
(insn 386 385 387 15 (set (reg:QI 0 ax [orig:195 _109 ] [195])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19929 [0xffffffffffffb227])) [0 event_val_info.cur_iy.param_obis_code+3 S1 A8])) "test_lib.c":454 84 {*movqi_internal}
     (nil))
(insn 387 386 388 15 (set (reg:SI 5 di [orig:196 _110 ] [196])
        (zero_extend:SI (reg:QI 0 ax [orig:195 _109 ] [195]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (nil))
(insn 388 387 389 15 (set (reg:QI 0 ax [orig:197 _111 ] [197])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19930 [0xffffffffffffb226])) [0 event_val_info.cur_iy.param_obis_code+2 S1 A16])) "test_lib.c":454 84 {*movqi_internal}
     (nil))
(insn 389 388 390 15 (set (reg:SI 2 cx [orig:198 _112 ] [198])
        (zero_extend:SI (reg:QI 0 ax [orig:197 _111 ] [197]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (nil))
(insn 390 389 391 15 (set (reg:QI 0 ax [orig:199 _113 ] [199])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19931 [0xffffffffffffb225])) [0 event_val_info.cur_iy.param_obis_code+1 S1 A8])) "test_lib.c":453 84 {*movqi_internal}
     (nil))
(insn 391 390 392 15 (set (reg:SI 1 dx [orig:200 _114 ] [200])
        (zero_extend:SI (reg:QI 0 ax [orig:199 _113 ] [199]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (nil))
(insn 392 391 393 15 (set (reg:QI 0 ax [orig:201 _115 ] [201])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19932 [0xffffffffffffb224])) [0 event_val_info.cur_iy.param_obis_code+0 S1 A32])) "test_lib.c":453 84 {*movqi_internal}
     (nil))
(insn 393 392 394 15 (set (reg:SI 0 ax [orig:202 _116 ] [202])
        (zero_extend:SI (reg:QI 0 ax [orig:201 _115 ] [201]))) "test_lib.c":452 136 {*zero_extendqisi2}
     (nil))
(insn 394 393 395 15 (parallel [
            (set (reg:DI 38 r9 [332])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":452 218 {*adddi_1}
     (nil))
(insn 395 394 396 15 (parallel [
            (set (reg:DI 38 r9 [333])
                (plus:DI (reg:DI 38 r9 [332])
                    (const_int 122 [0x7a])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":452 218 {*adddi_1}
     (nil))
(insn 396 395 397 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [333])) "test_lib.c":452 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 397 396 399 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:192 _106 ] [192])) "test_lib.c":452 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 399 397 400 15 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:194 _108 ] [194])) "test_lib.c":452 82 {*movsi_internal}
     (nil))
(insn 400 399 403 15 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:196 _110 ] [196])) "test_lib.c":452 82 {*movsi_internal}
     (nil))
(insn 403 400 404 15 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:202 _116 ] [202])) "test_lib.c":452 82 {*movsi_internal}
     (nil))
(insn 404 403 405 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":452 81 {*movdi_internal}
     (nil))
(insn 405 404 406 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":452 84 {*movqi_internal}
     (nil))
(call_insn 406 405 407 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":452 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 407 406 408 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":452 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 408 407 409 15 (set (reg:SF 21 xmm0 [334])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":459 127 {*movsf_internal}
     (nil))
(insn 409 408 410 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [334])) "test_lib.c":459 127 {*movsf_internal}
     (nil))
(insn 410 409 411 15 (set (reg:SI 0 ax [orig:279 _251 ] [279])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19856 [0xffffffffffffb270])) [0 MEM[(char * {ref-all})&event_val_info + 192B]+0 S4 A64])) "test_lib.c":460 82 {*movsi_internal}
     (nil))
(insn 411 410 412 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 0 ax [orig:279 _251 ] [279])) "test_lib.c":460 82 {*movsi_internal}
     (nil))
(insn 412 411 413 15 (set (reg:SF 21 xmm0 [orig:203 p_flt_ptr.4_117 ] [203])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":461 127 {*movsf_internal}
     (nil))
(insn 413 412 414 15 (set (reg:DF 21 xmm0 [orig:204 _118 ] [204])
        (float_extend:DF (reg:SF 21 xmm0 [orig:203 p_flt_ptr.4_117 ] [203]))) "test_lib.c":461 154 {*extendsfdf2}
     (nil))
(insn 414 413 415 15 (set (reg:QI 0 ax [orig:205 _119 ] [205])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19873 [0xffffffffffffb25f])) [0 event_val_info.cur_ib.param_obis_code+5 S1 A8])) "test_lib.c":464 84 {*movqi_internal}
     (nil))
(insn 415 414 416 15 (set (reg:SI 4 si [orig:206 _120 ] [206])
        (zero_extend:SI (reg:QI 0 ax [orig:205 _119 ] [205]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (nil))
(insn 416 415 417 15 (set (reg:QI 0 ax [orig:207 _121 ] [207])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19874 [0xffffffffffffb25e])) [0 event_val_info.cur_ib.param_obis_code+4 S1 A16])) "test_lib.c":464 84 {*movqi_internal}
     (nil))
(insn 417 416 418 15 (set (reg:SI 37 r8 [orig:208 _122 ] [208])
        (zero_extend:SI (reg:QI 0 ax [orig:207 _121 ] [207]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (nil))
(insn 418 417 419 15 (set (reg:QI 0 ax [orig:209 _123 ] [209])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19875 [0xffffffffffffb25d])) [0 event_val_info.cur_ib.param_obis_code+3 S1 A8])) "test_lib.c":463 84 {*movqi_internal}
     (nil))
(insn 419 418 420 15 (set (reg:SI 5 di [orig:210 _124 ] [210])
        (zero_extend:SI (reg:QI 0 ax [orig:209 _123 ] [209]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (nil))
(insn 420 419 421 15 (set (reg:QI 0 ax [orig:211 _125 ] [211])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19876 [0xffffffffffffb25c])) [0 event_val_info.cur_ib.param_obis_code+2 S1 A32])) "test_lib.c":463 84 {*movqi_internal}
     (nil))
(insn 421 420 422 15 (set (reg:SI 2 cx [orig:212 _126 ] [212])
        (zero_extend:SI (reg:QI 0 ax [orig:211 _125 ] [211]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (nil))
(insn 422 421 423 15 (set (reg:QI 0 ax [orig:213 _127 ] [213])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19877 [0xffffffffffffb25b])) [0 event_val_info.cur_ib.param_obis_code+1 S1 A8])) "test_lib.c":462 84 {*movqi_internal}
     (nil))
(insn 423 422 424 15 (set (reg:SI 1 dx [orig:214 _128 ] [214])
        (zero_extend:SI (reg:QI 0 ax [orig:213 _127 ] [213]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (nil))
(insn 424 423 425 15 (set (reg:QI 0 ax [orig:215 _129 ] [215])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19878 [0xffffffffffffb25a])) [0 event_val_info.cur_ib.param_obis_code+0 S1 A16])) "test_lib.c":462 84 {*movqi_internal}
     (nil))
(insn 425 424 426 15 (set (reg:SI 0 ax [orig:216 _130 ] [216])
        (zero_extend:SI (reg:QI 0 ax [orig:215 _129 ] [215]))) "test_lib.c":461 136 {*zero_extendqisi2}
     (nil))
(insn 426 425 427 15 (parallel [
            (set (reg:DI 38 r9 [335])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":461 218 {*adddi_1}
     (nil))
(insn 427 426 428 15 (parallel [
            (set (reg:DI 38 r9 [336])
                (plus:DI (reg:DI 38 r9 [335])
                    (const_int 176 [0xb0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":461 218 {*adddi_1}
     (nil))
(insn 428 427 429 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [336])) "test_lib.c":461 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 429 428 431 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:206 _120 ] [206])) "test_lib.c":461 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 431 429 432 15 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:208 _122 ] [208])) "test_lib.c":461 82 {*movsi_internal}
     (nil))
(insn 432 431 435 15 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:210 _124 ] [210])) "test_lib.c":461 82 {*movsi_internal}
     (nil))
(insn 435 432 436 15 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:216 _130 ] [216])) "test_lib.c":461 82 {*movsi_internal}
     (nil))
(insn 436 435 437 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":461 81 {*movdi_internal}
     (nil))
(insn 437 436 438 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":461 84 {*movqi_internal}
     (nil))
(call_insn 438 437 439 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":461 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 439 438 440 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":461 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 440 439 441 15 (set (reg:SF 21 xmm0 [337])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":468 127 {*movsf_internal}
     (nil))
(insn 441 440 442 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [337])) "test_lib.c":468 127 {*movsf_internal}
     (nil))
(insn 442 441 443 15 (set (reg:SI 0 ax [orig:280 _255 ] [280])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19910 [0xffffffffffffb23a])) [0 MEM[(char * {ref-all})&event_val_info + 138B]+0 S4 A16])) "test_lib.c":469 82 {*movsi_internal}
     (nil))
(insn 443 442 444 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 0 ax [orig:280 _255 ] [280])) "test_lib.c":469 82 {*movsi_internal}
     (nil))
(insn 444 443 445 15 (set (reg:SF 21 xmm0 [orig:217 p_flt_ptr.5_131 ] [217])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":470 127 {*movsf_internal}
     (nil))
(insn 445 444 446 15 (set (reg:DF 21 xmm0 [orig:218 _132 ] [218])
        (float_extend:DF (reg:SF 21 xmm0 [orig:217 p_flt_ptr.5_131 ] [217]))) "test_lib.c":470 154 {*extendsfdf2}
     (nil))
(insn 446 445 447 15 (set (reg:QI 0 ax [orig:219 _133 ] [219])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19927 [0xffffffffffffb229])) [0 event_val_info.cur_iy.param_obis_code+5 S1 A8])) "test_lib.c":473 84 {*movqi_internal}
     (nil))
(insn 447 446 448 15 (set (reg:SI 4 si [orig:220 _134 ] [220])
        (zero_extend:SI (reg:QI 0 ax [orig:219 _133 ] [219]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (nil))
(insn 448 447 449 15 (set (reg:QI 0 ax [orig:221 _135 ] [221])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19928 [0xffffffffffffb228])) [0 event_val_info.cur_iy.param_obis_code+4 S1 A64])) "test_lib.c":473 84 {*movqi_internal}
     (nil))
(insn 449 448 450 15 (set (reg:SI 37 r8 [orig:222 _136 ] [222])
        (zero_extend:SI (reg:QI 0 ax [orig:221 _135 ] [221]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (nil))
(insn 450 449 451 15 (set (reg:QI 0 ax [orig:223 _137 ] [223])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19929 [0xffffffffffffb227])) [0 event_val_info.cur_iy.param_obis_code+3 S1 A8])) "test_lib.c":472 84 {*movqi_internal}
     (nil))
(insn 451 450 452 15 (set (reg:SI 5 di [orig:224 _138 ] [224])
        (zero_extend:SI (reg:QI 0 ax [orig:223 _137 ] [223]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (nil))
(insn 452 451 453 15 (set (reg:QI 0 ax [orig:225 _139 ] [225])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19930 [0xffffffffffffb226])) [0 event_val_info.cur_iy.param_obis_code+2 S1 A16])) "test_lib.c":472 84 {*movqi_internal}
     (nil))
(insn 453 452 454 15 (set (reg:SI 2 cx [orig:226 _140 ] [226])
        (zero_extend:SI (reg:QI 0 ax [orig:225 _139 ] [225]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (nil))
(insn 454 453 455 15 (set (reg:QI 0 ax [orig:227 _141 ] [227])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19931 [0xffffffffffffb225])) [0 event_val_info.cur_iy.param_obis_code+1 S1 A8])) "test_lib.c":471 84 {*movqi_internal}
     (nil))
(insn 455 454 456 15 (set (reg:SI 1 dx [orig:228 _142 ] [228])
        (zero_extend:SI (reg:QI 0 ax [orig:227 _141 ] [227]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (nil))
(insn 456 455 457 15 (set (reg:QI 0 ax [orig:229 _143 ] [229])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19932 [0xffffffffffffb224])) [0 event_val_info.cur_iy.param_obis_code+0 S1 A32])) "test_lib.c":471 84 {*movqi_internal}
     (nil))
(insn 457 456 458 15 (set (reg:SI 0 ax [orig:230 _144 ] [230])
        (zero_extend:SI (reg:QI 0 ax [orig:229 _143 ] [229]))) "test_lib.c":470 136 {*zero_extendqisi2}
     (nil))
(insn 458 457 459 15 (parallel [
            (set (reg:DI 38 r9 [338])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":470 218 {*adddi_1}
     (nil))
(insn 459 458 460 15 (parallel [
            (set (reg:DI 38 r9 [339])
                (plus:DI (reg:DI 38 r9 [338])
                    (const_int 122 [0x7a])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":470 218 {*adddi_1}
     (nil))
(insn 460 459 461 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [339])) "test_lib.c":470 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 461 460 463 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:220 _134 ] [220])) "test_lib.c":470 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 463 461 464 15 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:222 _136 ] [222])) "test_lib.c":470 82 {*movsi_internal}
     (nil))
(insn 464 463 467 15 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:224 _138 ] [224])) "test_lib.c":470 82 {*movsi_internal}
     (nil))
(insn 467 464 468 15 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:230 _144 ] [230])) "test_lib.c":470 82 {*movsi_internal}
     (nil))
(insn 468 467 469 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":470 81 {*movdi_internal}
     (nil))
(insn 469 468 470 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":470 84 {*movqi_internal}
     (nil))
(call_insn 470 469 471 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":470 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 471 470 472 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":470 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 472 471 473 15 (set (reg:SF 21 xmm0 [340])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":477 127 {*movsf_internal}
     (nil))
(insn 473 472 474 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [340])) "test_lib.c":477 127 {*movsf_internal}
     (nil))
(insn 474 473 475 15 (set (reg:SI 0 ax [orig:281 _259 ] [281])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19802 [0xffffffffffffb2a6])) [0 MEM[(char * {ref-all})&event_val_info + 246B]+0 S4 A16])) "test_lib.c":478 82 {*movsi_internal}
     (nil))
(insn 475 474 476 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 0 ax [orig:281 _259 ] [281])) "test_lib.c":478 82 {*movsi_internal}
     (nil))
(insn 476 475 477 15 (set (reg:SF 21 xmm0 [orig:231 p_flt_ptr.6_145 ] [231])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":479 127 {*movsf_internal}
     (nil))
(insn 477 476 478 15 (set (reg:DF 21 xmm0 [orig:232 _146 ] [232])
        (float_extend:DF (reg:SF 21 xmm0 [orig:231 p_flt_ptr.6_145 ] [231]))) "test_lib.c":479 154 {*extendsfdf2}
     (nil))
(insn 478 477 479 15 (set (reg:QI 0 ax [orig:233 _147 ] [233])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19819 [0xffffffffffffb295])) [0 event_val_info.volt_r.param_obis_code+5 S1 A8])) "test_lib.c":482 84 {*movqi_internal}
     (nil))
(insn 479 478 480 15 (set (reg:SI 4 si [orig:234 _148 ] [234])
        (zero_extend:SI (reg:QI 0 ax [orig:233 _147 ] [233]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (nil))
(insn 480 479 481 15 (set (reg:QI 0 ax [orig:235 _149 ] [235])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19820 [0xffffffffffffb294])) [0 event_val_info.volt_r.param_obis_code+4 S1 A32])) "test_lib.c":482 84 {*movqi_internal}
     (nil))
(insn 481 480 482 15 (set (reg:SI 37 r8 [orig:236 _150 ] [236])
        (zero_extend:SI (reg:QI 0 ax [orig:235 _149 ] [235]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (nil))
(insn 482 481 483 15 (set (reg:QI 0 ax [orig:237 _151 ] [237])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19821 [0xffffffffffffb293])) [0 event_val_info.volt_r.param_obis_code+3 S1 A8])) "test_lib.c":481 84 {*movqi_internal}
     (nil))
(insn 483 482 484 15 (set (reg:SI 5 di [orig:238 _152 ] [238])
        (zero_extend:SI (reg:QI 0 ax [orig:237 _151 ] [237]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (nil))
(insn 484 483 485 15 (set (reg:QI 0 ax [orig:239 _153 ] [239])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19822 [0xffffffffffffb292])) [0 event_val_info.volt_r.param_obis_code+2 S1 A16])) "test_lib.c":481 84 {*movqi_internal}
     (nil))
(insn 485 484 486 15 (set (reg:SI 2 cx [orig:240 _154 ] [240])
        (zero_extend:SI (reg:QI 0 ax [orig:239 _153 ] [239]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (nil))
(insn 486 485 487 15 (set (reg:QI 0 ax [orig:241 _155 ] [241])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19823 [0xffffffffffffb291])) [0 event_val_info.volt_r.param_obis_code+1 S1 A8])) "test_lib.c":480 84 {*movqi_internal}
     (nil))
(insn 487 486 488 15 (set (reg:SI 1 dx [orig:242 _156 ] [242])
        (zero_extend:SI (reg:QI 0 ax [orig:241 _155 ] [241]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (nil))
(insn 488 487 489 15 (set (reg:QI 0 ax [orig:243 _157 ] [243])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19824 [0xffffffffffffb290])) [0 event_val_info.volt_r.param_obis_code+0 S1 A64])) "test_lib.c":480 84 {*movqi_internal}
     (nil))
(insn 489 488 490 15 (set (reg:SI 0 ax [orig:244 _158 ] [244])
        (zero_extend:SI (reg:QI 0 ax [orig:243 _157 ] [243]))) "test_lib.c":479 136 {*zero_extendqisi2}
     (nil))
(insn 490 489 491 15 (parallel [
            (set (reg:DI 38 r9 [341])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":479 218 {*adddi_1}
     (nil))
(insn 491 490 492 15 (parallel [
            (set (reg:DI 38 r9 [342])
                (plus:DI (reg:DI 38 r9 [341])
                    (const_int 230 [0xe6])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":479 218 {*adddi_1}
     (nil))
(insn 492 491 493 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [342])) "test_lib.c":479 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 493 492 495 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:234 _148 ] [234])) "test_lib.c":479 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 495 493 496 15 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:236 _150 ] [236])) "test_lib.c":479 82 {*movsi_internal}
     (nil))
(insn 496 495 499 15 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:238 _152 ] [238])) "test_lib.c":479 82 {*movsi_internal}
     (nil))
(insn 499 496 500 15 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:244 _158 ] [244])) "test_lib.c":479 82 {*movsi_internal}
     (nil))
(insn 500 499 501 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":479 81 {*movdi_internal}
     (nil))
(insn 501 500 502 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":479 84 {*movqi_internal}
     (nil))
(call_insn 502 501 503 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":479 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 503 502 504 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":479 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 504 503 505 15 (set (reg:SF 21 xmm0 [343])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":487 127 {*movsf_internal}
     (nil))
(insn 505 504 506 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [343])) "test_lib.c":487 127 {*movsf_internal}
     (nil))
(insn 506 505 507 15 (set (reg:SI 0 ax [orig:282 _263 ] [282])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19694 [0xffffffffffffb312])) [0 MEM[(char * {ref-all})&event_val_info + 354B]+0 S4 A16])) "test_lib.c":488 82 {*movsi_internal}
     (nil))
(insn 507 506 508 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 0 ax [orig:282 _263 ] [282])) "test_lib.c":488 82 {*movsi_internal}
     (nil))
(insn 508 507 509 15 (set (reg:SF 21 xmm0 [orig:245 p_flt_ptr.7_159 ] [245])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":489 127 {*movsf_internal}
     (nil))
(insn 509 508 510 15 (set (reg:DF 21 xmm0 [orig:246 _160 ] [246])
        (float_extend:DF (reg:SF 21 xmm0 [orig:245 p_flt_ptr.7_159 ] [245]))) "test_lib.c":489 154 {*extendsfdf2}
     (nil))
(insn 510 509 511 15 (set (reg:QI 0 ax [orig:247 _161 ] [247])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19711 [0xffffffffffffb301])) [0 event_val_info.volt_b.param_obis_code+5 S1 A8])) "test_lib.c":492 84 {*movqi_internal}
     (nil))
(insn 511 510 512 15 (set (reg:SI 4 si [orig:248 _162 ] [248])
        (zero_extend:SI (reg:QI 0 ax [orig:247 _161 ] [247]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (nil))
(insn 512 511 513 15 (set (reg:QI 0 ax [orig:249 _163 ] [249])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19712 [0xffffffffffffb300])) [0 event_val_info.volt_b.param_obis_code+4 S1 A64])) "test_lib.c":492 84 {*movqi_internal}
     (nil))
(insn 513 512 514 15 (set (reg:SI 37 r8 [orig:250 _164 ] [250])
        (zero_extend:SI (reg:QI 0 ax [orig:249 _163 ] [249]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (nil))
(insn 514 513 515 15 (set (reg:QI 0 ax [orig:251 _165 ] [251])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19713 [0xffffffffffffb2ff])) [0 event_val_info.volt_b.param_obis_code+3 S1 A8])) "test_lib.c":491 84 {*movqi_internal}
     (nil))
(insn 515 514 516 15 (set (reg:SI 5 di [orig:252 _166 ] [252])
        (zero_extend:SI (reg:QI 0 ax [orig:251 _165 ] [251]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (nil))
(insn 516 515 517 15 (set (reg:QI 0 ax [orig:253 _167 ] [253])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19714 [0xffffffffffffb2fe])) [0 event_val_info.volt_b.param_obis_code+2 S1 A16])) "test_lib.c":491 84 {*movqi_internal}
     (nil))
(insn 517 516 518 15 (set (reg:SI 2 cx [orig:254 _168 ] [254])
        (zero_extend:SI (reg:QI 0 ax [orig:253 _167 ] [253]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (nil))
(insn 518 517 519 15 (set (reg:QI 0 ax [orig:255 _169 ] [255])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19715 [0xffffffffffffb2fd])) [0 event_val_info.volt_b.param_obis_code+1 S1 A8])) "test_lib.c":490 84 {*movqi_internal}
     (nil))
(insn 519 518 520 15 (set (reg:SI 1 dx [orig:256 _170 ] [256])
        (zero_extend:SI (reg:QI 0 ax [orig:255 _169 ] [255]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (nil))
(insn 520 519 521 15 (set (reg:QI 0 ax [orig:257 _171 ] [257])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19716 [0xffffffffffffb2fc])) [0 event_val_info.volt_b.param_obis_code+0 S1 A32])) "test_lib.c":490 84 {*movqi_internal}
     (nil))
(insn 521 520 522 15 (set (reg:SI 0 ax [orig:258 _172 ] [258])
        (zero_extend:SI (reg:QI 0 ax [orig:257 _171 ] [257]))) "test_lib.c":489 136 {*zero_extendqisi2}
     (nil))
(insn 522 521 523 15 (parallel [
            (set (reg:DI 38 r9 [344])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":489 218 {*adddi_1}
     (nil))
(insn 523 522 524 15 (parallel [
            (set (reg:DI 38 r9 [345])
                (plus:DI (reg:DI 38 r9 [344])
                    (const_int 338 [0x152])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":489 218 {*adddi_1}
     (nil))
(insn 524 523 525 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [345])) "test_lib.c":489 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 525 524 527 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:248 _162 ] [248])) "test_lib.c":489 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 527 525 528 15 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:250 _164 ] [250])) "test_lib.c":489 82 {*movsi_internal}
     (nil))
(insn 528 527 531 15 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:252 _166 ] [252])) "test_lib.c":489 82 {*movsi_internal}
     (nil))
(insn 531 528 532 15 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:258 _172 ] [258])) "test_lib.c":489 82 {*movsi_internal}
     (nil))
(insn 532 531 533 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":489 81 {*movdi_internal}
     (nil))
(insn 533 532 534 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":489 84 {*movqi_internal}
     (nil))
(call_insn 534 533 535 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":489 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 535 534 536 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":489 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 536 535 537 15 (set (reg:SF 21 xmm0 [346])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [14  S4 A32])) "test_lib.c":496 127 {*movsf_internal}
     (nil))
(insn 537 536 538 15 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])
        (reg:SF 21 xmm0 [346])) "test_lib.c":496 127 {*movsf_internal}
     (nil))
(insn 538 537 539 15 (set (reg:SI 0 ax [orig:283 _267 ] [283])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -19748 [0xffffffffffffb2dc])) [0 MEM[(char * {ref-all})&event_val_info + 300B]+0 S4 A32])) "test_lib.c":497 82 {*movsi_internal}
     (nil))
(insn 539 538 540 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [0 MEM[(char * {ref-all})&p_flt_ptr]+0 S4 A32])
        (reg:SI 0 ax [orig:283 _267 ] [283])) "test_lib.c":497 82 {*movsi_internal}
     (nil))
(insn 540 539 541 15 (set (reg:SF 21 xmm0 [orig:259 p_flt_ptr.8_173 ] [259])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20484 [0xffffffffffffaffc])) [14 p_flt_ptr+0 S4 A32])) "test_lib.c":498 127 {*movsf_internal}
     (nil))
(insn 541 540 542 15 (set (reg:DF 21 xmm0 [orig:260 _174 ] [260])
        (float_extend:DF (reg:SF 21 xmm0 [orig:259 p_flt_ptr.8_173 ] [259]))) "test_lib.c":498 154 {*extendsfdf2}
     (nil))
(insn 542 541 543 15 (set (reg:QI 0 ax [orig:261 _175 ] [261])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19765 [0xffffffffffffb2cb])) [0 event_val_info.volt_y.param_obis_code+5 S1 A8])) "test_lib.c":501 84 {*movqi_internal}
     (nil))
(insn 543 542 544 15 (set (reg:SI 4 si [orig:262 _176 ] [262])
        (zero_extend:SI (reg:QI 0 ax [orig:261 _175 ] [261]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (nil))
(insn 544 543 545 15 (set (reg:QI 0 ax [orig:263 _177 ] [263])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19766 [0xffffffffffffb2ca])) [0 event_val_info.volt_y.param_obis_code+4 S1 A16])) "test_lib.c":501 84 {*movqi_internal}
     (nil))
(insn 545 544 546 15 (set (reg:SI 37 r8 [orig:264 _178 ] [264])
        (zero_extend:SI (reg:QI 0 ax [orig:263 _177 ] [263]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (nil))
(insn 546 545 547 15 (set (reg:QI 0 ax [orig:265 _179 ] [265])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19767 [0xffffffffffffb2c9])) [0 event_val_info.volt_y.param_obis_code+3 S1 A8])) "test_lib.c":500 84 {*movqi_internal}
     (nil))
(insn 547 546 548 15 (set (reg:SI 5 di [orig:266 _180 ] [266])
        (zero_extend:SI (reg:QI 0 ax [orig:265 _179 ] [265]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (nil))
(insn 548 547 549 15 (set (reg:QI 0 ax [orig:267 _181 ] [267])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19768 [0xffffffffffffb2c8])) [0 event_val_info.volt_y.param_obis_code+2 S1 A64])) "test_lib.c":500 84 {*movqi_internal}
     (nil))
(insn 549 548 550 15 (set (reg:SI 2 cx [orig:268 _182 ] [268])
        (zero_extend:SI (reg:QI 0 ax [orig:267 _181 ] [267]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (nil))
(insn 550 549 551 15 (set (reg:QI 0 ax [orig:269 _183 ] [269])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19769 [0xffffffffffffb2c7])) [0 event_val_info.volt_y.param_obis_code+1 S1 A8])) "test_lib.c":499 84 {*movqi_internal}
     (nil))
(insn 551 550 552 15 (set (reg:SI 1 dx [orig:270 _184 ] [270])
        (zero_extend:SI (reg:QI 0 ax [orig:269 _183 ] [269]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (nil))
(insn 552 551 553 15 (set (reg:QI 0 ax [orig:271 _185 ] [271])
        (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -19770 [0xffffffffffffb2c6])) [0 event_val_info.volt_y.param_obis_code+0 S1 A16])) "test_lib.c":499 84 {*movqi_internal}
     (nil))
(insn 553 552 554 15 (set (reg:SI 0 ax [orig:272 _186 ] [272])
        (zero_extend:SI (reg:QI 0 ax [orig:271 _185 ] [271]))) "test_lib.c":498 136 {*zero_extendqisi2}
     (nil))
(insn 554 553 555 15 (parallel [
            (set (reg:DI 38 r9 [347])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -20048 [0xffffffffffffb1b0])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":498 218 {*adddi_1}
     (nil))
(insn 555 554 556 15 (parallel [
            (set (reg:DI 38 r9 [348])
                (plus:DI (reg:DI 38 r9 [347])
                    (const_int 284 [0x11c])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":498 218 {*adddi_1}
     (nil))
(insn 556 555 557 15 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (reg:DI 38 r9 [348])) "test_lib.c":498 57 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 557 556 559 15 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (reg:SI 4 si [orig:262 _176 ] [262])) "test_lib.c":498 61 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 559 557 560 15 (set (reg:SI 38 r9)
        (reg:SI 37 r8 [orig:264 _178 ] [264])) "test_lib.c":498 82 {*movsi_internal}
     (nil))
(insn 560 559 563 15 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:266 _180 ] [266])) "test_lib.c":498 82 {*movsi_internal}
     (nil))
(insn 563 560 564 15 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:272 _186 ] [272])) "test_lib.c":498 82 {*movsi_internal}
     (nil))
(insn 564 563 565 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f33f7749480 *.LC10>)) "test_lib.c":498 81 {*movdi_internal}
     (nil))
(insn 565 564 566 15 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) "test_lib.c":498 84 {*movqi_internal}
     (nil))
(call_insn 566 565 567 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f33f780ef00 printf>) [0 __builtin_printf S1 A8])
            (const_int 16 [0x10]))) "test_lib.c":498 676 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:SI (use (reg:SI 38 r9))
                                (expr_list:DF (use (reg:DF 21 xmm0))
                                    (nil))))))))))
(insn 567 566 568 15 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":498 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 273 349
(code_label 568 567 569 16 10 (nil) [1 uses])
(note 569 568 570 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 16 (set (reg:QI 0 ax [orig:273 event_class_type.9_187 ] [273])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])) "test_lib.c":427 84 {*movqi_internal}
     (nil))
(insn 571 570 572 16 (parallel [
            (set (reg:QI 0 ax [349])
                (plus:QI (reg:QI 0 ax [orig:273 event_class_type.9_187 ] [273])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":427 221 {*addqi_1}
     (nil))
(insn 572 571 573 16 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])
        (reg:QI 0 ax [349])) "test_lib.c":427 84 {*movqi_internal}
     (nil))
;;  succ:       17 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU,DFS_BACK)
;;              13 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 573 572 574 17 9 (nil) [1 uses])
(note 574 573 576 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 576 574 577 17 (set (reg:CC 17 flags)
        (compare:CC (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20485 [0xffffffffffffaffb])) [0 event_class_type+0 S1 A8])
            (const_int 6 [0x6]))) "test_lib.c":427 5 {*cmpqi_1}
     (nil))
(jump_insn 577 576 578 17 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 575)
            (pc))) "test_lib.c":427 627 {*jcc_1}
     (nil)
 -> 575)
;;  succ:       14
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274 350 351
(note 578 577 579 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 579 578 580 18 (parallel [
            (set (reg:DI 0 ax [350])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":512 218 {*adddi_1}
     (nil))
(insn 580 579 581 18 (set (reg:DI 5 di)
        (reg:DI 0 ax [350])) "test_lib.c":512 81 {*movdi_internal}
     (nil))
(call_insn 581 580 582 18 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_billing_info") [flags 0x41]  <function_decl 0x7f33f76ea900 get_billing_info>) [0 get_billing_info S1 A8])
            (const_int 0 [0]))) "test_lib.c":512 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 582 581 583 18 (parallel [
            (set (reg:DI 0 ax [351])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -9664 [0xffffffffffffda40])))
            (clobber (reg:CC 17 flags))
        ]) "test_lib.c":517 218 {*adddi_1}
     (nil))
(insn 583 582 584 18 (set (reg:DI 5 di)
        (reg:DI 0 ax [351])) "test_lib.c":517 81 {*movdi_internal}
     (nil))
(call_insn 584 583 585 18 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("disconnect_meter") [flags 0x41]  <function_decl 0x7f33f76c9f00 disconnect_meter>) [0 disconnect_meter S1 A8])
            (const_int 0 [0]))) "test_lib.c":517 676 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 585 584 588 18 (set (reg:SI 0 ax [orig:274 _189 ] [274])
        (const_int 0 [0])) "test_lib.c":519 82 {*movsi_internal}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;;              10 [100.0%] 
;;              6 [100.0%] 
;;              8 [100.0%] 
;;              12 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 274
;; lr  def 	 0 [ax] 17 [flags] 284
(code_label 588 585 589 19 12 (nil) [4 uses])
(note 589 588 595 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 595 589 596 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.6164+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 2 cx [354]))
        ]) "test_lib.c":520 1016 {stack_tls_protect_test_di}
     (nil))
(jump_insn 596 595 602 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 599)
            (pc))) "test_lib.c":520 627 {*jcc_1}
     (nil)
 -> 599)
;;  succ:       21
;;              20 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 602 596 597 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 597 602 598 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f33f7738900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "test_lib.c":520 665 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 598 597 599)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 1, flags: (RTL, MODIFIED)
;;  pred:       19
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 599 598 603 21 13 (nil) [1 uses])
(note 603 599 600 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 600 603 616 21 (use (reg/i:SI 0 ax)) "test_lib.c":520 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 616 600 0 NOTE_INSN_DELETED)
